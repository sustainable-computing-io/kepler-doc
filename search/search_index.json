{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kubernetes Efficient Power Level Exporter (Kepler)","text":"<p>Kepler (Kubernetes-based Efficient Power Level Exporter) is a Prometheus exporter that measures energy consumption at the container, pod, VM, and process level by reading hardware sensors and attributing power based on resource utilization.</p> <p>Kepler uses Intel RAPL (Running Average Power Limit) sensors to collect energy data from CPU packages, cores, and memory subsystems, then distributes this energy proportionally to workloads based on their CPU time consumption.</p> <p>Check out the project on GitHub \u27a1\ufe0f Kepler.</p> <p>For a comprehensive overview, please check out \u27a1\ufe0f this CNCF blog article.</p> <p></p> <p> We are a Cloud Native Computing Foundation sandbox project.  </p>"},{"location":"model-server-compatibility/","title":"Kepler Model Server Compatibility Notice","text":"<p>\u26a0\ufe0f COMPATIBILITY WARNING \u26a0\ufe0f</p>"},{"location":"model-server-compatibility/#model-server-status-with-kepler-v0100","title":"Model Server Status with Kepler v0.10.0+","text":"<p>The Kepler Model Server is NOT compatible with Kepler v0.10.0 and above due to the major architectural rewrite. The Model Server documentation in this section applies only to Kepler v0.9.0 and below.</p>"},{"location":"model-server-compatibility/#what-changed-in-v0100","title":"What Changed in v0.10.0","text":"<p>Kepler v0.10.0 introduced fundamental changes that break Model Server compatibility:</p>"},{"location":"model-server-compatibility/#metrics-structure-changes","title":"Metrics Structure Changes","text":"<ul> <li>Old: Complex component-based metrics (core, uncore, package, DRAM, GPU)</li> <li>New: Simplified CPU-focused metrics with zone-based organization</li> <li>Impact: Model Server expects the old metric names and structure</li> </ul>"},{"location":"model-server-compatibility/#power-attribution-changes","title":"Power Attribution Changes","text":"<ul> <li>Old: Hardware counter-based attribution with detailed component breakdown</li> <li>New: CPU-time-proportional attribution with active/idle split</li> <li>Impact: Model training data format and attribution logic incompatible</li> </ul>"},{"location":"model-server-compatibility/#configuration-system-changes","title":"Configuration System Changes","text":"<ul> <li>Old: Environment variable-based configuration that Model Server integrated with</li> <li>New: CLI flags + YAML hierarchy with different configuration structure</li> <li>Impact: Model Server configuration integration no longer works</li> </ul>"},{"location":"model-server-compatibility/#current-status","title":"Current Status","text":"<p>\ud83d\udd34 Not Working: Model Server integration with Kepler v0.10.0+</p> <p>\ud83d\udfe1 Under Review: Compatibility assessment and potential updates</p> <p>\ud83d\udd35 Future Plans: Model Server updates may be planned for future releases</p>"},{"location":"model-server-compatibility/#for-legacy-users","title":"For Legacy Users","text":"<p>If you need to use the Model Server:</p> <ol> <li>Use Kepler v0.9.0 or below with the legacy architecture</li> <li>Refer to archived documentation for proper setup procedures</li> <li>See the Archive section for legacy installation guides</li> </ol>"},{"location":"model-server-compatibility/#alternative-solutions","title":"Alternative Solutions","text":"<p>For Kepler v0.10.0+ users needing power modeling:</p> <ol> <li>Direct Metrics Export: Use the simplified metrics directly for analysis</li> <li>Custom Integration: Build custom solutions using the new metric structure</li> <li>Wait for Updates: Monitor the project for Model Server compatibility updates</li> </ol>"},{"location":"model-server-compatibility/#stay-updated","title":"Stay Updated","text":"<ul> <li>GitHub Issues: Watch for Model Server compatibility updates</li> <li>Community Discussions: Join discussions about Model Server future</li> <li>Release Notes: Check future release notes for compatibility announcements</li> </ul> <p>\u26a0\ufe0f Do not attempt to use Model Server documentation with Kepler v0.10.0+ as it will result in configuration errors and incompatible integrations.</p>"},{"location":"model-server-compatibility.zh-qc/","title":"Translation Quality Check Report: Model Server Compatibility Notice","text":"<p>Original: <code>docs/model-server-compatibility.md</code> Translation: <code>docs/model-server-compatibility.zh.md</code> Reverse Translation: <code>docs/model-server-compatibility.rev.md</code></p>"},{"location":"model-server-compatibility.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation accurately conveys the urgent compatibility warning with appropriate technical terminology for software versioning and architectural changes.</p>"},{"location":"model-server-compatibility.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"model-server-compatibility.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Critical Warning Communication:</li> <li>\"COMPATIBILITY WARNING\" \u2192 \"\u517c\u5bb9\u6027\u8b66\u544a\" (clear, urgent messaging)</li> <li>\"NOT compatible\" \u2192 \"\u4e0d\u517c\u5bb9\" (unambiguous incompatibility statement)</li> <li> <p>\"major architectural rewrite\" \u2192 \"\u91cd\u5927\u67b6\u6784\u91cd\u5199\" (accurate technical description)</p> </li> <li> <p>Version-Specific Information:</p> </li> <li>Version numbers preserved exactly (v0.10.0, v0.9.0)</li> <li>\"Legacy users\" \u2192 \"\u65e7\u7248\u7528\u6237\" (appropriate software context)</li> <li> <p>\"Archived documentation\" \u2192 \"\u5b58\u6863\u6587\u6863\" (correct documentation management term)</p> </li> <li> <p>Technical Architecture Changes:</p> </li> <li>\"Component-based metrics\" \u2192 \"\u57fa\u4e8e\u7ec4\u4ef6\u7684\u6307\u6807\" (accurate system architecture term)</li> <li>\"CPU-time-proportional attribution\" \u2192 \"\u57fa\u4e8e CPU \u65f6\u95f4\u6bd4\u4f8b\u7684\u5f52\u56e0\" (precise algorithm description)</li> <li>\"Configuration integration\" \u2192 \"\u914d\u7f6e\u96c6\u6210\" (correct system integration concept)</li> </ol>"},{"location":"model-server-compatibility.zh-qc/#impact-assessment-excellence","title":"\ud83d\udcdd Impact Assessment Excellence","text":"<ol> <li>Status Communication:</li> <li>Color-coded status indicators preserved (\ud83d\udd34\ud83d\udfe1\ud83d\udd35)</li> <li>\"Under Review\" \u2192 \"\u5ba1\u67e5\u4e2d\" (appropriate project management term)</li> <li> <p>\"Future Plans\" \u2192 \"\u672a\u6765\u8ba1\u5212\" (clear roadmap terminology)</p> </li> <li> <p>Migration Guidance:</p> </li> <li>\"Alternative Solutions\" \u2192 \"\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\" (helpful migration planning)</li> <li>\"Direct Metrics Export\" \u2192 \"\u76f4\u63a5\u6307\u6807\u5bfc\u51fa\" (clear technical workaround)</li> <li> <p>\"Custom Integration\" \u2192 \"\u81ea\u5b9a\u4e49\u96c6\u6210\" (appropriate development option)</p> </li> <li> <p>User Communication:</p> </li> <li>\"Stay Updated\" \u2192 \"\u4fdd\u6301\u66f4\u65b0\" (engaging community communication)</li> <li>Cross-reference to archive section properly maintained</li> </ol>"},{"location":"model-server-compatibility.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All version numbers preserved exactly</li> <li>\u2705 Software component names maintained</li> <li>\u2705 URLs and cross-references intact</li> <li>\u2705 Warning formatting and emphasis preserved</li> <li>\u2705 Status indicators and emojis maintained</li> </ul>"},{"location":"model-server-compatibility.zh-qc/#critical-information-accuracy","title":"\ud83d\udcca Critical Information Accuracy","text":"<ol> <li>Breaking Changes: All architectural changes clearly documented</li> <li>User Impact: Compatibility issues and workarounds properly explained</li> <li>Migration Path: Clear guidance for different user scenarios</li> </ol>"},{"location":"model-server-compatibility.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"model-server-compatibility.zh-qc/#approved-for-critical-compatibility-communications","title":"\u2705 APPROVED FOR CRITICAL COMPATIBILITY COMMUNICATIONS","text":"<p>This translation effectively communicates breaking changes and compatibility issues to Chinese-speaking users, maintaining the urgency and technical accuracy of the original warning.</p>"},{"location":"model-server-compatibility.zh-qc/#notes","title":"Notes","text":"<ul> <li>Excellent handling of version-specific compatibility information</li> <li>Warning tone appropriately preserved without causing unnecessary alarm</li> <li>Technical changes clearly explained for developer audience</li> <li>Alternative solutions properly documented for affected users</li> </ul>"},{"location":"archive/","title":"Archived Documentation - Kepler v0.9.0 and Below","text":"<p>\u26a0\ufe0f DEPRECATED DOCUMENTATION \u26a0\ufe0f</p> <p>This directory contains documentation for Kepler versions 0.9.0 and below. This documentation is outdated and applies to the legacy eBPF-based architecture that was replaced in Kepler v0.10.0+.</p>"},{"location":"archive/#what-changed-in-v0100","title":"What Changed in v0.10.0+","text":"<p>Kepler underwent a major architectural rewrite in v0.10.0 that introduced:</p> <ul> <li>Service-oriented design replacing eBPF-centric architecture</li> <li>Simplified configuration with CLI flags + YAML instead of 40+ environment variables</li> <li>Streamlined metrics with CPU-focused attribution instead of complex component breakdowns</li> <li>New development workflow with Docker Compose environments</li> </ul>"},{"location":"archive/#using-this-documentation","title":"Using This Documentation","text":"<p>DO NOT use this documentation for Kepler v0.10.0+. It will lead to:</p> <ul> <li>Incorrect configuration attempts</li> <li>Wrong metric names and structures</li> <li>Outdated installation procedures</li> <li>Obsolete troubleshooting steps</li> </ul>"},{"location":"archive/#for-current-documentation","title":"For Current Documentation","text":"<p>Please refer to the main documentation sections for up-to-date information:</p> <ul> <li><code>/docs/design/</code> - Current architecture and design</li> <li><code>/docs/installation/</code> - Current installation methods</li> <li><code>/docs/usage/</code> - Current configuration and usage</li> </ul>"},{"location":"archive/README.zh-qc/","title":"Translation Quality Check Report: README.zh.md","text":""},{"location":"archive/README.zh-qc/#original-vs-reverse-translation-comparison","title":"Original vs Reverse Translation Comparison","text":""},{"location":"archive/README.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>README.md</code> is highly accurate with excellent preservation of technical terminology and document structure.</p>"},{"location":"archive/README.zh-qc/#differences-found","title":"Differences Found","text":""},{"location":"archive/README.zh-qc/#minor-language-structure-differences","title":"Minor Language Structure Differences","text":"<ol> <li>Title:</li> <li>Original: \"Kepler v0.9.0 and Below\"</li> <li>Reverse: \"Kepler v0.9.0 and Below Versions\"</li> <li> <p>Impact: Minimal - added \"Versions\" for clarity in Chinese</p> </li> <li> <p>Section Header:</p> </li> <li>Original: \"What Changed in v0.10.0+\"</li> <li>Reverse: \"Changes in v0.10.0+ Versions\"</li> <li> <p>Impact: Minimal - slight rewording that maintains meaning</p> </li> <li> <p>Bullet Point Phrasing:</p> </li> <li>Original: \"replacing eBPF-centric architecture\"</li> <li>Reverse: \"replaced the eBPF-centric architecture\"</li> <li> <p>Impact: Minimal - tense difference due to translation flow</p> </li> <li> <p>Usage Warning:</p> </li> <li>Original: \"DO NOT use this documentation\"</li> <li>Reverse: \"Do not use this documentation\"</li> <li> <p>Impact: Minimal - capitalization difference</p> </li> <li> <p>Section Header:</p> </li> <li>Original: \"For Current Documentation\"</li> <li>Reverse: \"Getting Current Documentation\"</li> <li>Impact: Minimal - slight rewording that maintains intent</li> </ol>"},{"location":"archive/README.zh-qc/#strengths","title":"Strengths","text":"<ul> <li>\u2705 All technical terms preserved correctly (eBPF, CLI, YAML, Docker Compose)</li> <li>\u2705 Warning symbols and formatting maintained</li> <li>\u2705 File paths and version numbers accurate</li> <li>\u2705 Document structure and hierarchy preserved</li> <li>\u2705 Warning tone and urgency conveyed effectively</li> </ul>"},{"location":"archive/README.zh-qc/#translation-quality-score-9510","title":"Translation Quality Score: 9.5/10","text":"<p>The translation successfully conveys all critical information with only minor stylistic variations that don't affect comprehension or accuracy.</p>"},{"location":"archive/README.zh-qc/#recommendation","title":"Recommendation","text":"<p>APPROVED - This translation meets high quality standards and accurately represents the original content.</p>"},{"location":"archive/design/architecture/","title":"Components","text":""},{"location":"archive/design/architecture/#kepler-exporter","title":"Kepler Exporter","text":"<p>Kepler Exporter exposes a variety of metrics about the energy consumption of Kubernetes components such as Pods and Nodes.</p> <p>Monitor container power consumption with the metrics made available by the Kepler Exporter.</p> <p></p>"},{"location":"archive/design/architecture/#kepler-model-server","title":"Kepler Model Server","text":"<p>The main feature of <code>Kepler Model Server</code> is to return a power estimation model corresponding to the request containing target granularity (node in total, node per each processor component, pod in total, pod per each processor component), available input metrics, model filters such as accuracy.</p> <p>In addition, the online-trainer can be deployed as a sidecar container to the server (main container) to execute training pipelines and update the model on the fly when power metrics are available.</p> <p><code>Kepler Estimator</code> is a client module to Kepler model server running as a sidecar of Kepler Exporter (main container).</p> <p>This python will serve a PowerRequest from model package in Kepler Exporter as defined in estimator.go via unix domain socket <code>/tmp/estimator.sock</code>.</p> <p>Check us out on GitHub \u27a1\ufe0f Kepler Model Server</p>"},{"location":"archive/design/architecture.zh-qc/","title":"Quality Check Report: Chinese Translation of architecture.md","text":""},{"location":"archive/design/architecture.zh-qc/#translation-assessment","title":"Translation Assessment","text":"<p>This report compares the original English document with the reverse-translated version to assess translation quality.</p>"},{"location":"archive/design/architecture.zh-qc/#overall-quality-high-quality","title":"Overall Quality: \u2705 HIGH QUALITY","text":"<p>The Chinese translation accurately preserves the technical meaning, structure, and formatting of the original document.</p>"},{"location":"archive/design/architecture.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"archive/design/architecture.zh-qc/#structure-and-formatting","title":"Structure and Formatting","text":"<ul> <li>\u2705 Headers: Preserved perfectly (# Components, ## Kepler Exporter, ## Kepler Model Server)</li> <li>\u2705 Links: All markdown links maintained with correct syntax and paths</li> <li>\u2705 Image: Architecture diagram reference preserved exactly</li> <li>\u2705 Code elements: Backticks, file paths, and socket paths preserved</li> <li>\u2705 Line spacing: Consistent with original formatting</li> </ul>"},{"location":"archive/design/architecture.zh-qc/#technical-terminology","title":"Technical Terminology","text":"<ul> <li>\u2705 Kubernetes terms: \"Pod\" and \"Nodes\" correctly maintained in Chinese context</li> <li>\u2705 Technical components: \"Kepler Exporter\", \"Kepler Model Server\", \"Kepler Estimator\" preserved</li> <li>\u2705 File references: <code>estimator.go</code>, <code>/tmp/estimator.sock</code> maintained exactly</li> <li>\u2705 Technical concepts: \"Unix domain socket\", \"sidecar container\", \"main container\" properly translated</li> </ul>"},{"location":"archive/design/architecture.zh-qc/#content-accuracy","title":"Content Accuracy","text":""},{"location":"archive/design/architecture.zh-qc/#kepler-exporter-section","title":"Kepler Exporter Section","text":"<ul> <li>Original: \"exposes a variety of metrics about the energy consumption\"</li> <li>Reverse: \"exposes various metrics about the energy consumption\"</li> <li> <p>\u2705 Assessment: Semantically identical, minor word variation acceptable</p> </li> <li> <p>Original: \"Monitor container power consumption with the metrics made available by\"</p> </li> <li>Reverse: \"Monitor container power consumption through the metrics provided by\"</li> <li>\u2705 Assessment: \"through...provided by\" vs \"with...made available by\" - semantically equivalent</li> </ul>"},{"location":"archive/design/architecture.zh-qc/#kepler-model-server-section","title":"Kepler Model Server Section","text":"<ul> <li>Original: \"return a power estimation model corresponding to the request containing target granularity\"</li> <li>Reverse: \"return a power estimation model corresponding to requests that contain target granularity\"</li> <li> <p>\u2705 Assessment: \"the request containing\" vs \"requests that contain\" - both grammatically correct</p> </li> <li> <p>Original: \"update the model on the fly when power metrics are available\"</p> </li> <li>Reverse: \"update models in real-time when power metrics are available\"</li> <li> <p>\u2705 Assessment: \"on the fly\" vs \"in real-time\" - equivalent technical meanings</p> </li> <li> <p>Original: \"This python will serve a PowerRequest\"</p> </li> <li>Reverse: \"This Python module will handle PowerRequest\"</li> <li>\u2705 Assessment: \"serve\" vs \"handle\" - both appropriate for the technical context</li> </ul>"},{"location":"archive/design/architecture.zh-qc/#technical-accuracy-verification","title":"Technical Accuracy Verification","text":""},{"location":"archive/design/architecture.zh-qc/#chinese-technical-terms-used","title":"Chinese Technical Terms Used","text":"<ul> <li>\u7ec4\u4ef6 (Components) - \u2705 Standard term</li> <li>\u516c\u5f00 (exposes) - \u2705 Appropriate technical term</li> <li>\u80fd\u8017 (energy consumption) - \u2705 Standard term in energy monitoring</li> <li>\u6307\u6807 (metrics) - \u2705 Standard technical term</li> <li>\u529f\u8017\u4f30\u7b97\u6a21\u578b (power estimation model) - \u2705 Accurate technical translation</li> <li>\u76ee\u6807\u7c92\u5ea6 (target granularity) - \u2705 Precise technical term</li> <li>\u5904\u7406\u5668\u7ec4\u4ef6 (processor component) - \u2705 Accurate hardware term</li> <li>\u5728\u7ebf\u8bad\u7ec3\u5668 (online trainer) - \u2705 Standard ML/AI term</li> <li>\u4fa7\u8f66\u5bb9\u5668 (sidecar container) - \u2705 Standard Kubernetes term</li> <li>\u8bad\u7ec3\u7ba1\u9053 (training pipeline) - \u2705 Standard ML term</li> <li>\u5b9e\u65f6\u66f4\u65b0 (real-time update) - \u2705 Accurate technical term</li> <li>Unix \u57df\u5957\u63a5\u5b57 (Unix domain socket) - \u2705 Standard technical term</li> </ul>"},{"location":"archive/design/architecture.zh-qc/#recommendations","title":"Recommendations","text":"<p>The translation is of high quality and ready for use. The Chinese version:</p> <ol> <li>\u2705 Maintains all technical accuracy</li> <li>\u2705 Preserves markdown formatting and structure</li> <li>\u2705 Uses appropriate Chinese technical terminology</li> <li>\u2705 Keeps all file paths, URLs, and code references intact</li> <li>\u2705 Follows Chinese technical writing conventions</li> <li>\u2705 Is clear and understandable for Chinese-speaking Kubernetes developers</li> </ol>"},{"location":"archive/design/architecture.zh-qc/#summary","title":"Summary","text":"<p>The Chinese translation successfully preserves the technical content, structure, and intent of the original English document while using appropriate Chinese technical terminology. No significant issues or inaccuracies were identified in the comparison with the reverse translation.</p>"},{"location":"archive/design/ebpf_in_kepler/","title":"eBPF in Kepler","text":""},{"location":"archive/design/ebpf_in_kepler/#background","title":"Background","text":""},{"location":"archive/design/ebpf_in_kepler/#what-is-ebpf","title":"What is eBPF?","text":"<p>eBPF is a revolutionary technology with origins in the Linux kernel that can run sandboxed programs in a privileged context such as the operating system kernel. It is used to safely and efficiently extend the capabilities of the kernel without requiring to change kernel source code or load kernel modules. [1]</p>"},{"location":"archive/design/ebpf_in_kepler/#what-is-a-kprobe","title":"What is a kprobe?","text":"<p>KProbes is a debugging mechanism for the Linux kernel which can also be used for monitoring events inside a production system. KProbes enables you to dynamically break into any kernel routine and collect debugging and performance information non-disruptively. You can trap at almost any kernel code address, specifying a handler routine to be invoked when the breakpoint is hit.  [2]</p>"},{"location":"archive/design/ebpf_in_kepler/#how-to-list-all-currently-registered-kprobes","title":"How to list all currently registered kprobes?","text":"<pre><code>sudo cat /sys/kernel/debug/kprobes/list\n</code></pre>"},{"location":"archive/design/ebpf_in_kepler/#hardware-cpu-events-monitoring","title":"Hardware CPU Events Monitoring","text":"<p>Performance counters are special hardware registers available on most modern CPUs. These registers count the number of certain types of hw events: such as instructions executed, cache misses suffered, or branches mis-predicted -without slowing down the kernel or applications. [4]</p> <p>Using syscall <code>perf_event_open</code> [5], Linux allows to set up performance monitoring for hardware and software performance. It returns a file descriptor to read performance information. This syscall takes <code>pid</code> and <code>cpuid</code> as parameters. Kepler uses <code>pid == -1</code> and <code>cpuid</code> as actual cpu id. This combination of pid and cpu allows measuring all process/threads on the specified cpu.</p>"},{"location":"archive/design/ebpf_in_kepler/#how-to-check-if-kernel-supports-perf_event_open","title":"How to check if kernel supports <code>perf_event_open</code>?","text":"<p>Check presence of <code>/proc/sys/kernel/perf_event_paranoid</code> to know if kernel supports <code>perf_event_open</code> and what is allowed to be measured</p> <pre><code>   The perf_event_paranoid file can be set to restrict\n   access to the performance counters.\n\n   2      allow only user-space measurements (default since Linux 4.6).\n   1      allow both kernel and user measurements (default before Linux 4.6).\n   0      allow access to CPU-specific data but not raw tracepoint samples.\n  -1      no restrictions.\n\n\n   Measuring all process/threads required CAP_SYS_ADMIN capability or a value less than 1 in above file\n</code></pre> <p>CAP_SYS_ADMIN is highest level of capability, it must have some security implications</p>"},{"location":"archive/design/ebpf_in_kepler/#kernel-routine-probed-by-kepler","title":"Kernel Routine Probed by Kepler","text":"<p>Kepler traps into <code>finish_task_switch</code> kernel function [3], which is responsible for cleaning up after a task switch occurs. Since the probe is <code>kprobe</code> it is called before <code>finish_task_switch</code> is called (instead of a <code>kretprobe</code> which is called after the probed function returns).</p> <p>When a context switch occurs inside the kernel, the function <code>finish_task_switch</code> is called on the new task which is going to use the CPU. This function receives an argument of type <code>task_struct*</code> which contains all the information about the task which is leaving the CPU.[3]</p> <p>The probe function in Kepler is</p> <pre><code>int kprobe__finish_task_switch(struct pt_regs *ctx, struct task_struct *prev)\n</code></pre> <p>The first argument is of type pointer to a <code>pt_regs</code> struct which refers to the structure that holds the register state of the CPU at the time of the kernel function entry. This struct contains fields that correspond to the CPU registers, such as general-purpose registers (e.g., r0, r1, etc.), stack pointer (sp), program counter (pc), and other architectural-specific registers. The second argument is a pointer to a <code>task_struct</code> which contains the task information for the previous task, i.e. the task which is leaving the CPU.</p>"},{"location":"archive/design/ebpf_in_kepler/#hardware-cpu-events-monitored-by-kepler","title":"Hardware CPU events monitored by Kepler","text":"<p>Kepler opens monitoring for following hardware cpu events</p> PERF Type Perf Count Type Description Array name (in bpf program) PERF_TYPE_HARDWARE PERF_COUNT_HW_CPU_CYCLES Total CPU cycles; can get affected by CPU frequency scaling cpu_cycles_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_REF_CPU_CYCLES Total CPU cycles; not affected by CPU frequency scaling cpu_ref_cycles_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_INSTRUCTIONS Retired instructions.  Be careful, these can be affected by various issues, most notably hardware interrupt counts. cpu_instr_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_CACHE_MISSES Cache misses. Usually this indicates Last Level Cache misses; this is intended to be used in conjunction with the PERF_COUNT_HW_CACHE_REFERENCES event to calculate cache miss rates. cache_miss_hc_reader <p>Performance counters are accessed via special file descriptors. There's one file descriptor per virtual counter used. The file descriptor is associated with the corresponding array. When bcc wrapper functions are used, it reads the corresponding fd, and return values.</p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-process-aka-task-total-cpu-time","title":"Calculate process (aka task) total CPU time","text":"<p>The ebpf program (<code>bpfassets/bcc/bcc.c</code>) maintains a mapping from a <code>&lt;pid, cpuid&gt;</code> pair to a timestamp. The timestamp signifies the moment <code>kprobe__finish_task_switch</code> was called for pid when this pid was to be scheduled on cpu <code>&lt;cpuid&gt;</code></p> <pre><code>// &lt;Task PID, CPUID&gt; =&gt; Context Switch Start time\n\ntypedef struct pid_time_t { u32 pid; u32 cpu; } pid_time_t;\nBPF_HASH(pid_time, pid_time_t);\n// pid_time is the name of variable which if of type map\n</code></pre> <p>Within the function <code>get_on_cpu_time</code>, the difference between the current timestamp and timestamp from the <code>pid_time</code> map is used to calculate the <code>on_cpu_time_delta</code> for previous task on the current cpu.</p> <p>This <code>on_cpu_time_delta</code> is used to accumulate the <code>process_run_time</code> metrics for the previous task.</p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-task-cpu-cycles","title":"Calculate task CPU cycles","text":"<p>For task cpu cycles, the bpf program maintains an array named <code>cpu_cycles</code>, indexed by <code>cpuid</code>. This contains values from perf array <code>cpu_cycles_hc_reader</code>, which is a perf event type array.</p> <p>On each task switch:</p> <ul> <li>current value is read from perf counter array cpu_cycles_hc_reader</li> <li>the previous value from cpu_cycles is retrieved</li> <li>delta is calculated by subtracting prev value from current value</li> <li>the current value is copied back to cpu_cycles for next task switch</li> </ul> <p>The delta thus calculated is the cpu cycles used by the process leaving the cpu</p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-task-ref-cpu-cycles","title":"Calculate task Ref CPU cycles","text":"<p>Same process as calculating CPU cycles, difference being perf array used is <code>cpu_ref_cycles_hc_reader</code> and prev value is stored in <code>cpu_ref_cycles</code></p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-task-cpu-instructions","title":"Calculate task CPU instructions","text":"<p>Same process as calculating CPU cycles, difference being perf array used is <code>cpu_instr_hc_reader</code> and prev value is stored in <code>cpu_instr</code></p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-task-cache-misses","title":"Calculate task Cache misses","text":"<p>Same process as calculating CPU cycles, difference being perf array used is <code>cache_miss_hc_reader</code> and prev value is stored in <code>cache_miss</code></p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-on-cpu-average-frequency","title":"Calculate 'On CPU Average Frequency'","text":"<pre><code>avg_freq = ((on_cpu_cycles_delta * CPU_REF_FREQ) / on_cpu_ref_cycles_delta) * HZ;\n\nCPU_REF_FREQ = 2500\nHZ = 1000\n</code></pre> <p>This value is stored in array <code>cpu_freq_array</code></p>"},{"location":"archive/design/ebpf_in_kepler/#calculate-page-cache-hit","title":"Calculate 'page cache hit'","text":"<p>The probe function in Kepler <code>kprobe__set_page_dirty</code> and <code>kprobe__mark_page_accessed</code> are used to track page cache hit for write and read action respectively.</p>"},{"location":"archive/design/ebpf_in_kepler/#process-table","title":"Process Table","text":"<p>The bpf program maintains a bpf hash named <code>processes</code>. This hash maintains data calculated for a process. Kepler reads values from this hash ( known as a <code>Table</code> in bcc ) and generates metrics.</p> Key Value Description pid cgroupid Process CGroupID pid Process ID process_run_time Total time a process occupies CPU (calculated each time process leaves CPU on context switch) cpu_cycles Total CPU cycles consumed by process cpu_instr Total CPU instructions consumed by process cache_miss Total Cache miss by process page_cache_hit Total hit of the page cache vec_nr Total number of soft irq handles by process (max 10) comm Process name (max length 16) <p>This hash is read by the kernel collector in <code>container_hc_collector.go</code> for metrics collection.</p>"},{"location":"archive/design/ebpf_in_kepler/#references","title":"References","text":"<p>[1] https://ebpf.io/what-is-ebpf/ , https://www.splunk.com/en_us/blog/learn/what-is-ebpf.html , https://www.tigera.io/learn/guides/ebpf/</p> <p>[2] An introduction to KProbes , Kernel Probes (Kprobes)</p> <p>[3] finish_task_switch - clean up after a task-switch</p> <p>[4] Performance Counters for Linux</p> <p>[5] perf_event_open(2) \u2014 Linux manual page</p>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/","title":"Translation Quality Check Report: ebpf_in_kepler.zh.md","text":""},{"location":"archive/design/ebpf_in_kepler.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>ebpf_in_kepler.md</code> has several significant issues that affect technical accuracy and completeness.</p>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#critical-issues-found","title":"Critical Issues Found","text":""},{"location":"archive/design/ebpf_in_kepler.zh-qc/#1-missing-content","title":"1. MISSING CONTENT \u274c","text":"<p>Section completely missing: \"Calculate 'page cache hit'\" (lines 126-128 in original) - Original content about <code>kprobe__set_page_dirty</code> and <code>kprobe__mark_page_accessed</code> probe functions - This is critical information about how Kepler tracks page cache hits - Impact: High - Missing functionality explanation</p>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#2-incorrect-file-path","title":"2. Incorrect File Path \u274c","text":"<ul> <li>Line 75:</li> <li>Original: <code>bpfassets/bcc/bcc.c</code></li> <li>Chinese: <code>bpfassets/perf_event/perf_event.c</code></li> <li>Impact: High - Incorrect technical reference that could mislead developers</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#3-missing-table-entry","title":"3. Missing Table Entry \u274c","text":"<p>In the Process Table section, missing: - Original includes <code>page_cache_hit | Total hit of the page cache</code> entry - Chinese translation omits this entry entirely - Impact: Medium - Incomplete technical documentation</p>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#4-case-sensitivity-error","title":"4. Case Sensitivity Error \u274c","text":"<ul> <li>Title: \"eBPF in Kepler\" \u2192 \"Kepler\u4e2d\u7684ebpf\"</li> <li>Should be: \"Kepler\u4e2d\u7684eBPF\" (maintaining proper capitalization)</li> <li>Impact: Medium - Technical term formatting</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#5-technical-translation-issues","title":"5. Technical Translation Issues \u26a0\ufe0f","text":""},{"location":"archive/design/ebpf_in_kepler.zh-qc/#section-headers","title":"Section Headers:","text":"<ul> <li>\"Kernel Routine Probed by Kepler\" \u2192 \"kepler\u63a2\u6d4b\u5185\u6838\u8fdb\u7a0b\"</li> <li>Should be: \"Kepler\u63a2\u6d4b\u7684\u5185\u6838\u4f8b\u7a0b\" (more accurate)</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#technical-terms","title":"Technical Terms:","text":"<ul> <li>\"context switch\" \u2192 \"\u4e0a\u4e0b\u6587\u5207\u6362\" \u2705 (correct)</li> <li>\"task switch\" \u2192 \"\u4efb\u52a1\u5207\u6362\" \u2705 (correct)</li> <li>\"Performance counters\" \u2192 \"\u6027\u80fd\u8ba1\u6570\u5668\" \u2705 (correct)</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#6-minor-language-flow-issues","title":"6. Minor Language Flow Issues \u26a0\ufe0f","text":"<ul> <li>Some sentences have awkward phrasing that could be improved</li> <li>Generally maintains technical accuracy despite flow issues</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#strengths","title":"Strengths","text":"<ul> <li>\u2705 All code blocks preserved correctly</li> <li>\u2705 Technical table structure maintained</li> <li>\u2705 Reference links preserved</li> <li>\u2705 Most technical terminology correctly translated</li> <li>\u2705 eBPF concepts explained appropriately for Chinese audience</li> </ul>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#translation-quality-score-6510","title":"Translation Quality Score: 6.5/10","text":"<p>Major deductions for: - Missing critical section (-2.0) - Incorrect file path (-1.0) - Missing table entry (-0.5)</p>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/design/ebpf_in_kepler.zh-qc/#immediate-actions-required","title":"IMMEDIATE ACTIONS REQUIRED:","text":"<ol> <li>Add missing \"Calculate 'page cache hit'\" section</li> <li>Correct file path from perf_event.c to bcc.c</li> <li>Add missing page_cache_hit table entry</li> <li>Fix title capitalization to eBPF</li> <li>Improve section header translation</li> </ol>"},{"location":"archive/design/ebpf_in_kepler.zh-qc/#status-requires-revision","title":"Status: REQUIRES REVISION","text":"<p>This translation needs significant updates before it can be considered accurate and complete. The missing content and incorrect file path are critical issues that must be addressed.</p>"},{"location":"archive/design/kepler-energy-sources/","title":"Kepler Energy Sources","text":""},{"location":"archive/design/kepler-energy-sources/#background","title":"Background","text":""},{"location":"archive/design/kepler-energy-sources/#rapl-running-average-power-limit","title":"RAPL - Running Average Power Limit","text":"<p>Intel's Running Average Power Limit (RAPL) is a hardware feature which allows to monitor energy consumption across different domains of the CPU chip, attached DRAM and on-chip GPU. This feature was introduced in Intel's Sandy Bridge architecture and has evolved in the later versions of Intel's processing architecture. With RAPL it is possible to programmatically get real time data on the power consumption of the CPU package and its components, as well as of the DRAM memory that the CPU is managing.</p> <p>RAPL provides two different functionalities:</p> <ol> <li>Allows energy consumption to be measured at very fine granularity and a high sampling    rate.</li> <li>Allows limiting (or capping) the average power consumption of different components inside    the processor, which also limits the thermal output of the processor</li> </ol> <p>Kepler makes use of the energy consumption measurement capability.</p> <p>RAPL supports multiple power domains. The RAPL power domain is a physically meaningful domain (e.g., Processor Package, DRAM etc) for power management. Each power domain informs the energy consumption of the domain.</p> <p>RAPL provides the following power domains for both measuring and limiting energy consumption:</p> <ul> <li>Package: Package (PKG) domain measures the energy consumption of the entire socket. It   includes the consumption of all the cores, integrated graphics and also the uncore components   (last level caches, memory controller).</li> <li>Power Plane 0 (PP0) : measures the energy consumption of all processor cores on the socket.</li> <li>Power Plane 1 (PP1) : measures the energy consumption of processor graphics (GPU) on the   socket (desktop models only).</li> <li>DRAM: measures the energy consumption of random access memory (RAM) attached to the integrated   memory controller.</li> </ul> <p>The support for different power domains varies according to the processor model.</p>"},{"location":"archive/design/kepler-energy-sources/#reading-energy-values","title":"Reading Energy values","text":"<p>Kepler chooses to use one energy source in the following order of preference:</p> <ol> <li>Sysfs</li> <li>MSR</li> <li>Hwmon</li> </ol>"},{"location":"archive/design/kepler-energy-sources/#using-rapl-sysfs","title":"Using RAPL Sysfs","text":"<p>From Linux Kernel version 3.13 onwards, RAPL values can be read using <code>Power Capping Framework</code>[2].</p> <p>Linux Power Capping framework exposes power capping devices to user space via sysfs in the form of a tree of objects.</p> <p>This sysfs tree is mounted at <code>/sys/class/powercap/intel-rapl</code>. When RAPL is available, this path exists and Kepler reads energy values from this path.</p>"},{"location":"archive/design/kepler-energy-sources/#using-rapl-msr-model-specific-registers","title":"Using RAPL MSR (Model Specific Registers)","text":"<p>The RAPL energy counters can be accessed through model-specific registers (MSRs). The counters are 32-bit registers that indicate the energy consumed since the processor was booted up. The counters are updated approximately once every millisecond. The energy is counted in multiples of model-specific energy units. Sandy Bridge uses energy units of 15.3 microjoules, whereas Haswell and Skylake uses units of 61 microjoules. The units can be read from specific MSRs before doing energy calculations.</p> <p>The MSRs can be accessed directly on Linux using the msr driver in the kernel. Reading RAPL domain values directly from MSRs requires detecting the CPU model and reading the RAPL energy units before reading the RAPL domain. Once the CPU model is detected, the RAPL domains can be read per package of the CPU by reading the corresponding <code>MSR status</code> register.</p> <p>There are basically two types of events that RAPL events report Static Events: thermal specifications, maximum and minimum power caps, and time windows. Dynamic Events: RAPL domain energy readings from the chip such as PKG, PP0, PP1 or DRAM</p>"},{"location":"archive/design/kepler-energy-sources/#using-kernel-driver-xgene-hwmon","title":"Using kernel driver xgene-hwmon","text":"<p>Using Xgene-hwmon driver Kepler reads power from APM X-Gene SoC. It supports reading CPU and IO power in micro watts.</p>"},{"location":"archive/design/kepler-energy-sources/#using-ebpf-perf-events","title":"Using eBpf perf events","text":"<p>Not used in Kepler.</p>"},{"location":"archive/design/kepler-energy-sources/#using-papi-library","title":"Using PAPI library","text":"<p>Performance Application Programming Interface (PAPI) is not used in Kepler.</p>"},{"location":"archive/design/kepler-energy-sources/#permissions-required","title":"Permissions required","text":""},{"location":"archive/design/kepler-energy-sources/#sysfs-powercap","title":"Sysfs (powercap)","text":"<p>Root access is required to use powercap driver.</p>"},{"location":"archive/design/kepler-energy-sources/#msrs","title":"MSRs","text":"<p>Root access is required to use the msr driver.</p>"},{"location":"archive/design/kepler-energy-sources/#references","title":"References","text":"<p>[1] RAPL in Action: Experiences in Using RAPL for Power Measurements</p> <p>[2] RA Power Capping Framework</p> <p>[3] RA Kernel driver xgene-hwmon</p> <p>[4] RA Performance Application Programming Interface (PAPI)</p>"},{"location":"archive/design/kepler-energy-sources.zh-qc/","title":"Translation Quality Check Report: kepler-energy-sources.zh.md","text":""},{"location":"archive/design/kepler-energy-sources.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>kepler-energy-sources.md</code> is excellent with high technical accuracy and completeness.</p>"},{"location":"archive/design/kepler-energy-sources.zh-qc/#differences-found","title":"Differences Found","text":""},{"location":"archive/design/kepler-energy-sources.zh-qc/#minor-language-structure-improvements","title":"Minor Language Structure Improvements","text":"<ol> <li>Title Translation:</li> <li>Original: \"Kepler Energy Sources\"</li> <li>Chinese: \"Kepler \u80fd\u6e90\u6765\u6e90\"</li> <li> <p>Impact: None - Appropriate translation</p> </li> <li> <p>Technical Explanations:</p> </li> <li>Original: \"was introduced in Intel's Sandy Bridge architecture and has evolved in the later versions\"</li> <li>Chinese: \"\u5728 Intel \u7684 Sandy Bridge \u67b6\u6784\u4e2d\u9996\u6b21\u5f15\u5165\uff0c\u5e76\u5728 Intel \u540e\u7eed\u5904\u7406\u5668\u67b6\u6784\u7248\u672c\u4e2d\u4e0d\u65ad\u6f14\u8fdb\"</li> <li>Reverse: \"was first introduced in Intel's Sandy Bridge architecture and has continuously evolved in subsequent versions\"</li> <li> <p>Impact: Minimal - Slight rewording that improves clarity</p> </li> <li> <p>Section Headers:</p> </li> <li>\"Reading Energy values\" \u2192 \"\u8bfb\u53d6\u80fd\u91cf\u503c\" \u2192 \"Reading Energy Values\"</li> <li> <p>Impact: None - Proper translation</p> </li> <li> <p>Technical Terms:</p> </li> <li>\"non-core components\" effectively translated as \"\u975e\u5185\u6838\u7ec4\u4ef6\"</li> <li>\"microwatts\" properly translated as \"\u5fae\u74e6\"</li> <li>All acronyms (RAPL, MSR, PKG, PP0, PP1, DRAM) correctly preserved</li> </ol>"},{"location":"archive/design/kepler-energy-sources.zh-qc/#strengths","title":"Strengths","text":"<ul> <li>\u2705 Complete content: No missing sections or information</li> <li>\u2705 Technical accuracy: All technical specifications correctly translated</li> <li>\u2705 Proper formatting: Code blocks, file paths, and URLs preserved</li> <li>\u2705 Consistent terminology: Technical terms translated consistently throughout</li> <li>\u2705 Reference preservation: All reference links maintained</li> <li>\u2705 Structural integrity: Document organization and hierarchy preserved</li> <li>\u2705 Context preservation: Hardware specifications and numerical values accurate</li> </ul>"},{"location":"archive/design/kepler-energy-sources.zh-qc/#advanced-translation-quality-features","title":"Advanced Translation Quality Features","text":"<ul> <li>Parenthetical explanations: Proper use of both English and Chinese terms where appropriate</li> <li>Technical precision: Energy units (15.3 microjoules, 61 microjoules) correctly maintained</li> <li>Acronym handling: Maintains both Chinese translation and English acronym (e.g., \"\u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236\uff08Running Average Power Limit\uff0cRAPL\uff09\")</li> </ul>"},{"location":"archive/design/kepler-energy-sources.zh-qc/#translation-quality-score-9810","title":"Translation Quality Score: 9.8/10","text":"<p>Minor deductions only for: - Very slight stylistic variations in sentence structure (-0.2)</p>"},{"location":"archive/design/kepler-energy-sources.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/design/kepler-energy-sources.zh-qc/#status-approved","title":"Status: APPROVED \u2705","text":"<p>This translation meets the highest quality standards and accurately represents all technical content. The translator demonstrates excellent understanding of: - Hardware performance monitoring concepts - Linux kernel driver terminology - Energy measurement technical specifications - Proper preservation of technical accuracy</p> <p>No revisions required - This translation can be used as a reference example for technical documentation translation quality.</p>"},{"location":"archive/design/metrics/","title":"Monitoring Container Power Consumption with Kepler","text":"<p>Kepler Exporter exposes statistics from an application running in a Kubernetes cluster in a Prometheus-friendly format that can be scraped by any database that understands this format, such as Prometheus and Sysdig.</p> <p>Kepler exports a variety of container metrics to Prometheus, where the main ones are those related to energy consumption.</p>"},{"location":"archive/design/metrics/#kepler-metrics-overview","title":"Kepler Metrics Overview","text":"<p>All the metrics specific to the Kepler Exporter are prefixed with <code>kepler</code>.</p>"},{"location":"archive/design/metrics/#kepler-metrics-for-container-energy-consumption","title":"Kepler Metrics for Container Energy Consumption","text":"<ul> <li> <p>kepler_container_joules_total (Counter)</p> <p>This metric is the aggregated package/socket energy consumption of CPU, dram, gpus, and other host components for a given container. Each component has individual metrics which are detailed next in this document.</p> <p>This metric simplifies the Prometheus metric for performance reasons. A very large promQL query typically introduces a very high overhead on Prometheus.</p> </li> <li> <p>kepler_container_core_joules_total (Counter)</p> <p>This measures the total energy consumption on CPU cores that  a certain container has used. Generally, when the system has access to RAPL metrics, this metric will reflect the proportional container energy consumption of the RAPL Power Plan 0 (PP0), which is the energy consumed by all CPU cores in the socket. However, this metric is processor model specific and may not be available on some server CPUs. The RAPL CPU metric that is available on all processors that support RAPL is the package, which we will detail on another metric.</p> <p>In some cases where RAPL is available but core metrics are not, Kepler may use the energy consumption package. But note that package energy consumption is not just from CPU cores, it is all socket energy consumption.</p> <p>In case RAPL is not available, Kepler might estimate this metric using the model server.</p> </li> <li> <p>kepler_container_dram_joules_total (Counter)</p> <p>This metric describes the total energy spent in DRAM by a container.</p> </li> <li> <p>kepler_container_uncore_joules_total (Counter)</p> <p>This measures the cumulative energy consumed by certain uncore components, which are typically the last level cache, integrated GPU and memory controller, but the number of components may vary depending on the system. The uncore metric is processor model specific and may not be available on some server CPUs.</p> <p>When RAPL is not available, Kepler can estimate this metric using the model server if the node CPU supports the uncore metric.</p> </li> <li> <p>kepler_container_package_joules_total (Counter)</p> <p>This measures the cumulative energy consumed by the CPU socket, including all cores and uncore components (e.g. last-level cache, integrated GPU and memory controller). RAPL package energy is typically the PP0 + PP1, but PP1 counter may or may not account for all energy usage by uncore components. Therefore, package energy consumption may be higher than core + uncore.</p> <p>When RAPL is not available, Kepler might estimate this metric using the model server.</p> </li> <li> <p>kepler_container_other_joules_total (Counter)</p> <p>This measures the cumulative energy consumption on other host components besides the CPU and DRAM. The vast majority of motherboards have a energy consumption sensor that can be accessed via the kernel acpi or ipmi. This sensor reports the energy consumption of the entire system. In addition, some processor architectures support the RAPL platform domain (PSys) which is the energy consumed by the \"System on a chipt\" (SOC).</p> <p>Generally, this metric is the host energy consumption (from acpi) less the RAPL Package and DRAM.</p> </li> <li> <p>kepler_container_gpu_joules_total (Counter)</p> <p>This measures the total energy consumption on the GPUs that  a certain container has used. Currently, Kepler only supports NVIDIA GPUs, but this metric will also reflect other accelerators in the future. So when the system has NVIDIA GPUs, Kepler can calculate the energy consumption of the container's gpu using the GPU's processes energy consumption and utilization via NVIDIA nvml package.</p> </li> <li> <p>kepler_container_energy_stat (Counter)</p> <p>This metric contains several container metrics labeled with container resource utilization cgroup metrics that are used in the model server for predictions.</p> <p>This metric is specific for the model server and might be updated any time.</p> </li> </ul>"},{"location":"archive/design/metrics/#kepler-metrics-for-container-resource-utilization","title":"Kepler Metrics for Container Resource Utilization","text":""},{"location":"archive/design/metrics/#base-metric","title":"Base Metric","text":"<ul> <li> <p>kepler_container_bpf_cpu_time_us_total</p> <p>This measures the total CPU time used by the container using BPF tracing. This is a minimum exposed metric.</p> </li> </ul>"},{"location":"archive/design/metrics/#hardware-counter-metrics","title":"Hardware Counter Metrics","text":"<ul> <li> <p>kepler_container_cpu_cycles_total</p> <p>This measures the total CPU cycles used by the container using hardware counters. To support fine-grained analysis of performance and resource utilization, hardware counters are particularly desirable due to its granularity and precision..</p> <p>The CPU cycles is a metric directly related to CPU frequency. On systems where processors run at a fixed frequency, CPU cycles and total CPU time are roughly equivalent. On systems where processors run at varying frequencies, CPU cycles and total CPU time will have different values.</p> </li> <li> <p>kepler_container_cpu_instructions_total</p> <p>This measure the total cpu instructions used by the container using hardware counters.</p> <p>CPU instructions are the de facto metric for accounting for CPU utilization.</p> </li> <li> <p>kepler_container_cache_miss_total</p> <p>This measures the total cache miss that has occurred for a given container using hardware counters.</p> <p>As there is no event counter that measures memory access directly, the number of last-level cache misses gives a good proxy for the memory access number. If an LLC read miss occurs, a read access to main memory should occur (but note that this is not necessarily the case for LLC write misses under a write-back cache policy).</p> </li> </ul> <p>Note</p> <p>You can enable/disable expose of those metrics through <code>expose-hardware-counter-metrics</code> Kepler execution option or <code>EXPOSE_HW_COUNTER_METRICS</code> environment value.</p>"},{"location":"archive/design/metrics/#irq-metrics","title":"IRQ Metrics","text":"<ul> <li> <p>kepler_container_bpf_net_tx_irq_total</p> <p>This measures the total transmitted packets to network cards of the container using BPF tracing.</p> </li> <li> <p>kepler_container_bpf_net_rx_irq_total</p> <p>This measures the total packets received from network cards of the container using BPF tracing.</p> </li> <li> <p>kepler_container_bpf_block_irq_total</p> <p>This measures block I/O called of the container using BPF tracing.</p> </li> </ul> <p>Note</p> <p>You can enable/disable expose of those metrics through <code>EXPOSE_IRQ_COUNTER_METRICS</code> environment value.</p>"},{"location":"archive/design/metrics/#kepler-metrics-for-node-information","title":"Kepler Metrics for Node Information","text":"<ul> <li> <p>kepler_node_info (Counter)</p> <p>This metric shows the node metadata like the node CPU architecture.</p> </li> </ul>"},{"location":"archive/design/metrics/#kepler-metrics-for-node-energy-consumption","title":"Kepler Metrics for Node Energy Consumption","text":"<ul> <li> <p>kepler_node_core_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_uncore_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_dram_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_package_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_other_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_gpu_joules_total (Counter)</p> <p>Similar to container metrics, but representing the aggregation of all containers running on the node and operating system (i.e. \"system_process\").</p> </li> <li> <p>kepler_node_platform_joules_total (Counter)</p> <p>This metric represents the total energy consumption of the host.</p> <p>The vast majority of motherboards have a energy consumption sensor that can be accessed via the acpi or ipmi kernel. This sensor reports the energy consumption of the entire system. In addition, some processor architectures support the RAPL platform domain (PSys) which is the energy consumed by the \"System on a chipt\" (SOC).</p> <p>Generally, this metric is the host energy consumption from Redfish BMC or acpi.</p> </li> <li> <p>kepler_node_energy_stat (Counter)</p> <p>This metric contains multiple metrics from nodes labeled with container resource utilization cgroup metrics that are used in the model server.</p> <p>This metric is specific to the model server and can be updated at any time.</p> </li> </ul> <p>Note</p> <p>\"system_process\" is a special indicator that aggregate all the non-container workload into system process consumption metric.</p>"},{"location":"archive/design/metrics/#kepler-metrics-for-node-resource-utilization","title":"Kepler Metrics for Node Resource Utilization","text":""},{"location":"archive/design/metrics/#accelerator-metrics","title":"Accelerator Metrics","text":"<ul> <li> <p>kepler_node_accelerator_intel_qat</p> <p>This measures the utilization of the accelerator Intel QAT on a certain node. When the system has Intel QATs, Kepler can calculate the utilization of the node's QATs through telemetry.</p> </li> </ul>"},{"location":"archive/design/metrics/#exploring-node-exporter-metrics-through-the-prometheus-expression","title":"Exploring Node Exporter Metrics Through the Prometheus Expression","text":"<p>All the energy consumption metrics are defined as counter following the Prometheus metrics guide for energy related metrics.</p> <p>The <code>rate()</code> of joules gives the power in Watts since the rate function returns the average per second. Therefore, for get the container energy consumption you can use the following query:</p> <pre><code>sum by (pod_name, container_name, container_namespace, node)(irate(kepler_container_joules_total{}[1m]))\n</code></pre> <p>Note that we report the node label in the container metrics because the OS metrics \"system_process\" will have the same name and namespace across all nodes and we do not want to aggregate them.</p>"},{"location":"archive/design/metrics/#rapl-power-domain","title":"RAPL Power Domain","text":"<p>RAPL power domains supported in some resent Intel microarchitecture (consumer-grade/server-grade):</p> Microarchitecture Package CORE (PP0) UNCORE (PP1) DRAM Haswell Y/Y Y/N Y/N Y/Y Broadwell Y/Y Y/N Y/N Y/Y Skylake Y/Y Y/Y Y/N Y/Y Kaby Lake Y/Y Y/Y Y/N Y/Y"},{"location":"archive/design/metrics.zh-qc/","title":"Translation Quality Check Report: metrics.zh.md (UPDATED VERSION)","text":""},{"location":"archive/design/metrics.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>Fresh Chinese translation created for the completely updated <code>metrics.md</code> file. The new content focuses on container power consumption monitoring rather than general metrics reference.</p>"},{"location":"archive/design/metrics.zh-qc/#content-structure-changes","title":"Content Structure Changes","text":"<ul> <li>Original Focus: Container-centric energy monitoring with Kepler</li> <li>New Content: 227 lines of comprehensive container and node metrics documentation</li> <li>Major Shift: From general metrics reference to specific container power consumption guide</li> </ul>"},{"location":"archive/design/metrics.zh-qc/#translation-quality-features","title":"Translation Quality Features","text":""},{"location":"archive/design/metrics.zh-qc/#excellent-technical-accuracy","title":"\u2705 Excellent Technical Accuracy","text":"<ul> <li>Metric Names: All Prometheus metric names preserved exactly (<code>kepler_container_joules_total</code>, etc.)</li> <li>Technical Terms: RAPL, BPF, CPU cycles, cache misses accurately translated</li> <li>Hardware Components: CPU cores, uncore, DRAM, GPU terminology consistent</li> <li>Performance Terms: Proper translation of throughput, latency, utilization concepts</li> </ul>"},{"location":"archive/design/metrics.zh-qc/#perfect-structure-preservation","title":"\u2705 Perfect Structure Preservation","text":"<ul> <li>Counter/Gauge Types: Metric types clearly explained in Chinese</li> <li>Code Blocks: PromQL queries and commands preserved exactly</li> <li>Admonition Blocks: All <code>!!! note</code> sections properly formatted</li> <li>Reference Links: All external links [0], [1], [3] maintained</li> </ul>"},{"location":"archive/design/metrics.zh-qc/#domain-expertise-demonstrated","title":"\u2705 Domain Expertise Demonstrated","text":"<ul> <li>Container Metrics: Kubernetes pod, container, namespace concepts accurately translated</li> <li>Energy Measurement: Joules, watts, power consumption terminology precise</li> <li>Hardware Counter: CPU instructions, cache misses, memory access properly explained</li> <li>System Architecture: Socket, package, uncore components clearly described</li> </ul>"},{"location":"archive/design/metrics.zh-qc/#translation-quality-score-9910","title":"Translation Quality Score: 9.9/10","text":"<p>Outstanding translation that demonstrates: - Complete technical accuracy in energy monitoring terminology - Perfect preservation of all technical references and commands - Excellent adaptation for Chinese-speaking Kubernetes administrators - Clear explanations** of complex power measurement concepts</p>"},{"location":"archive/design/metrics.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/design/metrics.zh-qc/#status-approved-exemplary","title":"Status: APPROVED - EXEMPLARY \u2705","text":"<p>This fresh translation for the updated metrics documentation represents exceptional quality and should serve as a reference example for technical documentation translation. The translator successfully handled the transition from general metrics to container-focused power monitoring while maintaining all technical precision.</p> <p>No revisions required - Ready for immediate publication.</p>"},{"location":"archive/design/power_model/","title":"Kepler Power Model","text":"<p>In Kepler, with respective to available measurements, we provide a pod-level power with a mix of two power modeling approaches:</p>"},{"location":"archive/design/power_model/#modeling-approach","title":"Modeling Approach","text":"<ul> <li> <p>Power Ratio Modeling: This modeling computes a finer-grained power by the usage ratio over the   total summation of power. This modeling is used by default when the total power is known.</p> </li> <li> <p>Power Estimation Modeling: This modeling estimates a power by using usage metrics as input features of the trained model. This modeling can be used even if the power metric cannot be measured. The estimation can be done in three levels: Node total power (including fan, power supply, etc.), Node internal component powers (such as CPU, Memory), Pod power.</p> <p>Note</p> <p>Also see Get started with Kepler Model Server</p> </li> <li> <p>Pre-trained Power Models: We provide pre-trained power models for different deployment scenarios.    Current x86_64 pre-trained model are developed in Intel\u00ae Xeon\u00ae Processor E5-2667 v3. Models with    other architectures are coming soon. You can find these models in Kepler Model DB. These models    support both power ratio modeling and power estimation modeling for both RAPL and ACPI power sources.    The <code>AbsPower</code> models estimate both idle and dynamic power while the <code>DynPower</code> models only estimate    dynamic power. The MAE (Mean Absolute Error) of these models are also published. Kepler container    image has preloaded acpi/AbsPower/BPFOnly/SGDRegressorTrainer_1.json model for node energy estimate    and rapl/AbsPower/BPFOnly/SGDRegressorTrainer_1.json for Container absolute power estimate.</p> </li> </ul>"},{"location":"archive/design/power_model/#usage-scenario","title":"Usage Scenario","text":"Scenario Node Total Power Node Component Powers Pod Power BM (x86 with power meter) Measurement (e.g., ACPI) Measurement (RAPL) Power Ratio BM (x86 but no power meter) Power Estimation Measurement Power Ratio BM (non-x86 with power meter) Measurement Power Estimation Power Ratio BM (non-x86 and no power meter) Power Estimation Power Estimation Power Ratio VM with node info and power passthrough from BM (x86 with power meter) Measurement + VM Mapping Measurement + VM Mapping Power Ratio VM with node info and power passthrough from BM (x86 but no power meter) Power Estimation Measurement + VM Mapping Power Ratio VM with node info and power passthrough from BM (non-x86 with power meter) Measurement + VM Mapping Power Estimation Power Ratio VM with node info Power Estimation Power Estimation Power Ratio Pure VM - - Power Estimation"},{"location":"archive/design/power_model.zh-qc/","title":"Translation Quality Check Report: power_model.zh.md","text":""},{"location":"archive/design/power_model.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>power_model.md</code> has major quality issues with significant missing content and structural problems.</p>"},{"location":"archive/design/power_model.zh-qc/#critical-issues-found","title":"Critical Issues Found","text":""},{"location":"archive/design/power_model.zh-qc/#1-severely-truncated-content","title":"1. SEVERELY TRUNCATED CONTENT \u274c","text":"<ul> <li>Original: 46 lines with complete sections and references</li> <li>Chinese: Only 25 lines - missing approximately 45% of content</li> <li>Missing: All reference links [1], [2], [3], [4] at the bottom of the document</li> <li>Impact: Critical - Incomplete technical documentation</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#2-title-modification","title":"2. TITLE MODIFICATION \u274c","text":"<ul> <li>Original: \"Kepler Power Model\"</li> <li>Chinese: \"Kepler\u529f\u7387\u6a21\u578b/\u8fd0\u884c\u65b9\u5f0f\" (adds \"/\u8fd0\u884c\u65b9\u5f0f\" = \"/Operating Mode\")</li> <li>Impact: Medium - Adds content not present in original</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#3-formatting-errors","title":"3. FORMATTING ERRORS \u274c","text":"<ul> <li>Bullet points: Missing spaces after hyphens (should be \"- \" not \"-\")</li> <li>Note section: Missing proper formatting for the note callout</li> <li>Impact: Medium - Affects document readability</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#4-structural-integrity-lost","title":"4. STRUCTURAL INTEGRITY LOST \u274c","text":"<ul> <li>Missing admonition block: The <code>!!! note</code> section is completely merged into paragraph text</li> <li>Missing reference section: No reference links provided</li> <li>Incomplete table: Table structure present but supporting references missing</li> <li>Impact: High - Document loses technical reference value</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#5-content-compression-issues","title":"5. Content Compression Issues \u26a0\ufe0f","text":"<ul> <li>Multiple sentences compressed into single long sentences</li> <li>Loss of technical detail granularity</li> <li>Important technical specifications merged incorrectly</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#strengths-limited","title":"Strengths (Limited)","text":"<ul> <li>\u2705 Table structure maintained in visible portion</li> <li>\u2705 Technical terms generally translated correctly</li> <li>\u2705 URL links properly formatted where present</li> </ul>"},{"location":"archive/design/power_model.zh-qc/#translation-quality-score-4010","title":"Translation Quality Score: 4.0/10","text":"<p>Major deductions for: - Missing 45% of content (-4.0) - Title modification (-1.0) - Formatting errors (-0.5) - Structural issues (-0.5)</p>"},{"location":"archive/design/power_model.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/design/power_model.zh-qc/#critical-actions-required","title":"CRITICAL ACTIONS REQUIRED:","text":"<ol> <li>Restore ALL missing content including reference links [1]-[4]</li> <li>Fix title to match original exactly: \"Kepler\u529f\u7387\u6a21\u578b\"</li> <li>Restore proper formatting for note section using admonition syntax</li> <li>Fix bullet point formatting (add spaces after hyphens)</li> <li>Add complete reference section at the bottom</li> <li>Separate compressed sentences for better readability</li> </ol>"},{"location":"archive/design/power_model.zh-qc/#status-requires-complete-revision","title":"Status: REQUIRES COMPLETE REVISION","text":"<p>This translation is incomplete and unsuitable for publication. It needs to be completely redone to include all missing content and proper formatting. The current version provides insufficient technical information for users.</p>"},{"location":"archive/hardwareengagement/","title":"Hardware Engagement","text":"<p>In this document, we will share our steps as how to engage Kepler with a specific hardware device. Considering there are many different hardware devices, we will just write down major steps here as current stage. You are able to take this out as a todo list and step by step to make Kepler engage with your own hardware device.</p>"},{"location":"archive/hardwareengagement/#stage-0-proof","title":"Stage 0 Proof","text":"<p>In this Stage, we will focus on basic data can be collected by golang, and you can build your own Kepler which running on your device well. The following steps can running in parallel.</p>"},{"location":"archive/hardwareengagement/#binary-build-and-container-build","title":"Binary build and container build","text":"<p>Currently Kepler container image is from a GPU image to support GPU case. Considering a general case for IOT device. You may need to build Kepler from UBI image. We recommend you following steps below to setup a local build env and try to build.</p> <ol> <li>Find a linux OS.</li> <li>Install Kepler dependencies as eBPF golang(BCC), linux header and build Kepler (from main branch or latest release branch) binary.</li> <li>(Optional)Modify dockerfile to build the container image.</li> </ol>"},{"location":"archive/hardwareengagement/#power-consumption-api","title":"Power consumption API","text":"<p>Currently, we use power consumption API as RAPL or ACPI. For some of the devices, you may need to find your own way to get power consumption, and implement in golang for Kepler usage. For further plan, please ref here</p>"},{"location":"archive/hardwareengagement/#ebpf-data","title":"eBPF data","text":"<p>Currently, we rely on eBPF to obtain key cpu, irq  and perf information about a process. Hence,  refer to the documentation of cilium/ebpf to test whether these Go packages work well on your device.</p> <p>Please let us know if you need any further adjustments!</p>"},{"location":"archive/hardwareengagement/#stage-1-integration-with-ratio","title":"Stage 1 Integration with ratio","text":"<p>During this Stage, we are going to ref Kepler model. To integrate and implement your own logic specific to your device and deep dive into Power consumption API.</p>"},{"location":"archive/hardwareengagement/#scope","title":"Scope","text":"<p>You should know the scope of the Power consumption API. How many API do you have? Is it categorized by CPU/memory/IO or not?</p>"},{"location":"archive/hardwareengagement/#interval","title":"Interval","text":"<p>You should know the intervals of the Power consumption API. As Kepler collects eBPF data in each 3s by default, you should know the interval and make them in same time slot.</p>"},{"location":"archive/hardwareengagement/#verify","title":"Verify","text":"<p>You can cross check and verify the data.</p>"},{"location":"archive/hardwareengagement/#stage-2-model_training","title":"Stage 2 Model_training","text":"<p>TBD</p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/","title":"Introduction","text":"<p>Kepler (Kubernetes-based Efficient Power Level Exporter) is a Prometheus exporter. It uses eBPF to probe CPU performance counters and Linux kernel tracepoints [1] whereas Telegraf is an agent for collecting, processing, aggregating, and writing metrics. [2]This document covers the steps for integrating Telegraf with Kepler.</p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#benefits-of-integrating-telegraf-with-kepler","title":"Benefits of Integrating Telegraf with Kepler","text":"<p>Integrating Telegraf with Kepler helps users to gather additional platform level metrics on top of Kepler metrics. Kepler provide useful container and Node metrics. On the other hand, through Telegraf, metrics like Power Supply Current output (%) can be gathered using IPMI Sensor plugin. Also, it can help to gather DPDK related metrics which is currently not possible through Kepler. By correlating power and CPU usage metrics from Kepler and DPDK metrics from Telegraf, user will gain a better understanding about the power usage of their packet processing application and can use these insights as inputs to identify opportunities for power optimization. Hence, Kepler and Telegraf metrics together can serve use cases that help end users to understand and optimize power usage by their various networking applications.</p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#setup","title":"Setup","text":""},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#setup-details","title":"Setup Details","text":"<p>The Control plane server details are as follows:</p> Components Details Model Intel(R) Xeon(R) Gold 6230N CPU @ 2.30GHz Sockets 2 Cores per sockets 20 Total Cores 80 Software Ubuntu 22.04.1 LTS"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#download-and-install-kepler","title":"Download and Install Kepler","text":"<p>There are various ways Kepler can be downloaded and installed. For more details on each steps please refer to the Kepler documents.</p> <pre><code>root@: git clone https://github.com/sustainable-computing-io/kepler.git\nroot@: cd kepler/\nroot@: make build-manifest OPTS=\"BM_DEPLOY PROMETHEUS_DEPLOY\"\nroot@: cd _output/generated-manifest/\nroot@: vi deployment.yaml\nroot@: kubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre> <p>Installation of Kepler can be confirmed through following commands:</p> <pre><code>root@: docker ps -a | grep 'kepler'\n\n530a71f0067f        quay.io/sustainable_computing_io/kepler           \"/bin/sh \u2013\nc '/usr/bi\u2026\"   33 seconds ago      Up 31 seconds\nk8s_kepler-exporter_kepler-exporter-bzj9b_kepler_827ee818-9f5a-460c-a368-\nfc90fde5d378_0\ndecae0dc60e2        k8s.gcr.io/pause:3.3                              \"/pause\"\n38 seconds ago      Up 35 seconds\nk8s_POD_kepler-exporter-bzj9b_kepler_827ee818-9f5a-460c-a368-fc90fde5d378_0\n\nroot@:~# kubectl get pod -n kepler\nNAME                    READY   STATUS    RESTARTS   AGE\nkepler-exporter-8h8x7   1/1     Running   0          63s\nkepler-exporter-bzj9b   1/1     Running   0          63s\nroot@:~# kubectl port-forward kepler-exporter-jdklk 9102:9102 -n kepler --address='0.0.0.0'\n</code></pre>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#download-and-start-telegraf","title":"Download and start Telegraf","text":"<p>Telegraf can be installed on the system in various ways. Here it has been done by downloading and building it from source.</p> <p>Telegraf requires Go version &gt;=1.22 which can be installed : Install Go and the Makefile requires GNU make.</p> <p>Telegraf shares the same minimum requirements as Go:</p> <ul> <li>Linux kernel version 2.6.32 or later</li> <li>Windows 10 or later</li> <li>FreeBSD 12 or later</li> <li>macOS 10.15 Catalina or later</li> </ul> <p>Clone the Telegraf repository:</p> <pre><code>root@:~# git clone https://github.com/influxdata/telegraf.git\n</code></pre> <p>Run make build from the source directory</p> <pre><code>root@:~# cd telegraf\nroot@:~# make build\n</code></pre> <p>Generate a Telegraf config file</p> <pre><code>root@:~# telegraf config &gt; telegraf.conf\n</code></pre> <p>Edit the generated config file to enable required plugins. For this integration activity following plugins should be enabled:</p> <p>Input Plugins: Intel PowerStat plugin, Intel PMU plugin, and IPMI sensor input</p> <p>Output Plugin: Prometheus output plugin must be enabled in Telegraf config in order to store the metrics in Prometheus database .</p> <p>Below is the sample config that have been used to enable all the above-mentioned plugins. Although, user can enable any other desired plugin by commenting out the respective section.</p> <pre><code>root@:~# vi telegraf.conf\n\n# Global tags can be specified here in key=\"value\" format.\n[global_tags]\n  # dc = \"us-east-1\" # will tag all metrics with dc=us-east-1\n  # rack = \"1a\"\n  ## Environment variables can be used as tags, and throughout the config file\n  # user = \"$USER\"\n\n# Configuration for telegraf agent\n[agent]\n  ## Default data collection interval for all inputs\n  interval = \"10s\"\n  ## Rounds collection interval to 'interval'\n  ## ie, if interval=\"10s\" then always collect on :00, :10, :20, etc.\n  round_interval = true\n\n  ## Telegraf will send metrics to outputs in batches of at most\n  ## metric_batch_size metrics.\n  ## This controls the size of writes that Telegraf sends to output plugins.\n  metric_batch_size = 1000\n\n  ## Maximum number of unwritten metrics per output.  Increasing this value\n  ## allows for longer periods of output downtime without dropping metrics at the\n  ## cost of higher maximum memory usage.\n  metric_buffer_limit = 10000\n\n  ## Collection jitter is used to jitter the collection by a random amount.\n  ## Each plugin will sleep for a random time within jitter before collecting.\n  ## This can be used to avoid many plugins querying things like sysfs at the\n  ## same time, which can have a measurable effect on the system.\n  collection_jitter = \"0s\"\n\n  ## Default flushing interval for all outputs. Maximum flush_interval will be\n  ## flush_interval + flush_jitter\n  flush_interval = \"10s\"\n  ## Jitter the flush interval by a random amount. This is primarily to avoid\n  ## large write spikes for users running a large number of telegraf instances.\n  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s\n  flush_jitter = \"0s\"\n\n  ## By default or when set to \"0s\", precision will be set to the same\n  ## timestamp order as the collection interval, with the maximum being 1s.\n  ##   ie, when interval = \"10s\", precision will be \"1s\"\n  ##       when interval = \"250ms\", precision will be \"1ms\"\n  ## Precision will NOT be used for service inputs. It is up to each individual\n  ## service input to set the timestamp at the appropriate precision.\n  ## Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\".\n  precision = \"\"\n\n  ## Log at debug level.\n  # debug = false\n  ## Log only error level messages.\n  # quiet = false\n\n  ## Log target controls the destination for logs and can be one of \"file\",\n  ## \"stderr\" or, on Windows, \"eventlog\".  When set to \"file\", the output file\n  ## is determined by the \"logfile\" setting.\n  # logtarget = \"file\"\n\n  ## Name of the file to be logged to when using the \"file\" logtarget.  If set to\n  ## the empty string then logs are written to stderr.\n  # logfile = \"\"\n\n  ## The logfile will be rotated after the time interval specified.  When set\n  ## to 0 no time based rotation is performed.  Logs are rotated only when\n  ## written to, if there is no log activity rotation may be delayed.\n  # logfile_rotation_interval = \"0d\"\n\n  ## The logfile will be rotated when it becomes larger than the specified\n  ## size.  When set to 0 no size based rotation is performed.\n  # logfile_rotation_max_size = \"0MB\"\n\n  ## Maximum number of rotated archives to keep, any older logs are deleted.\n  ## If set to -1, no archives are removed.\n  # logfile_rotation_max_archives = 5\n\n  ## Pick a timezone to use when logging or type 'local' for local time.\n  ## Example: America/Chicago\n  # log_with_timezone = \"\"\n\n  ## Override default hostname, if empty use os.Hostname()\n  hostname = \"\"\n  ## If set to true, do no set the \"host\" tag in the telegraf agent.\n  omit_hostname = false\n\n###############################################################################\n#                            OUTPUT PLUGINS                                   #\n###############################################################################\n\n# # Configuration for the Prometheus client to spawn\n[[outputs.prometheus_client]]\n  ## Address to listen on\n  listen = \":9273\"\n\n  ## Metric version controls the mapping from Telegraf metrics into\n  ## Prometheus format.  When using the prometheus input, use the same value in\n  ## both plugins to ensure metrics are round-tripped without modification.\n  ##\n  ##   example: metric_version = 1;\n  ##            metric_version = 2; recommended version\n  # metric_version = 1\n\n\n###############################################################################\n#                            INPUT PLUGINS                                    #\n###############################################################################\n\n# # Intel PowerStat plugin enables monitoring of platform metrics (power, TDP) and Core metrics like temperature, power and utilization.\n[[inputs.intel_powerstat]]\n  ## All global metrics are always collected by Intel PowerStat plugin.\n  ## User can choose which per-CPU metrics are monitored by the plugin in cpu_metrics array.\n  ## Empty array means no per-CPU specific metrics will be collected by the plugin - in this case only platform level\n  ## telemetry will be exposed by Intel PowerStat plugin.\n  #the package_metrics setting:\n  package_metrics = [\"current_power_consumption\", \"current_dram_power_consumption\", \"thermal_design_power\", \"max_turbo_frequency\", \"uncore_frequency\", \"cpu_base_frequency\"]\n  ## Supported options:\n  ## \"cpu_frequency\", \"cpu_busy_frequency\", \"cpu_temperature\", \"cpu_c1_state_residency\", \"cpu_c6_state_residency\", \"cpu_busy_cycles\"\n  cpu_metrics = [\"cpu_frequency\", \"cpu_busy_frequency\", \"cpu_temperature\", \"cpu_c1_state_residency\", \"cpu_c6_state_residency\", \"cpu_busy_cycles\"]\n\n# Intel Performance Monitoring Unit plugin exposes Intel PMU metrics available through Linux Perf subsystem\n# This plugin ONLY supports Linux on amd64\n[[inputs.intel_pmu]]\n  ## List of filesystem locations of JSON files that contain PMU event definitions.\n  event_definitions = [\"/root/.cache/pmu-events/GenuineIntel-6-55-7-core.json\", \"/root/.cache/pmu-events/GenuineIntel-6-55-7-uncore.json\"]\n\n  ## List of core events measurement entities. There can be more than one core_events sections.\n  [[inputs.intel_pmu.core_events]]\n    ## List of events to be counted. Event names shall match names from event_definitions files.\n    ## Single entry can contain name of the event (case insensitive) augmented with config options and perf modifiers.\n    ## If absent, all core events from provided event_definitions are counted skipping unresolvable ones.\n    events = [\"INST_RETIRED.ANY\", \"CPU_CLK_UNHALTED.THREAD_ANY:config1=0x4043200000000k\"]\n\n    ## Limits the counting of events to core numbers specified.\n    ## If absent, events are counted on all cores.\n    ## Single \"0\", multiple \"0,1,2\" and range \"0-2\" notation is supported for each array element.\n    ##   example: cores = [\"0,2\", \"4\", \"12-16\"]\n    cores = [\"0\"]\n\n    ## Indicator that plugin shall attempt to run core_events.events as a single perf group.\n    ## If absent or set to false, each event is counted individually. Defaults to false.\n    ## This limits the number of events that can be measured to a maximum of available hardware counters per core.\n    ## Could vary depending on type of event, use of fixed counters.\n    # perf_group = false\n\n    ## Optionally set a custom tag value that will be added to every measurement within this events group.\n    ## Can be applied to any group of events, unrelated to perf_group setting.\n    # events_tag = \"\"\n\n  ## List of uncore event measurement entities. There can be more than one uncore_events sections.\n  [[inputs.intel_pmu.uncore_events]]\n    ## List of events to be counted. Event names shall match names from event_definitions files.\n    ## Single entry can contain name of the event (case insensitive) augmented with config options and perf modifiers.\n    ## If absent, all uncore events from provided event_definitions are counted skipping unresolvable ones.\n    events = [\"UNC_CHA_CLOCKTICKS\", \"UNC_CHA_TOR_OCCUPANCY.IA_MISS\"]\n\n    ## Limits the counting of events to specified sockets.\n    ## If absent, events are counted on all sockets.\n    ## Single \"0\", multiple \"0,1\" and range \"0-1\" notation is supported for each array element.\n    ##   example: sockets = [\"0-2\"]\n    sockets = [\"0\"]\n\n    ## Indicator that plugin shall provide an aggregated value for multiple units of same type distributed in an uncore.\n    ## If absent or set to false, events for each unit are exposed as separate metric. Defaults to false.\n    # aggregate_uncore_units = false\n\n    ## Optionally set a custom tag value that will be added to every measurement within this events group.\n    # events_tag = \"\"\n# Read metrics from the bare metal servers via IPMI\n[[inputs.ipmi_sensor]]\n  ## optionally specify the path to the ipmitool executable\n  # path = \"/usr/bin/ipmitool\"\n  ##\n  ## Setting 'use_sudo' to true will make use of sudo to run ipmitool.\n  ## Sudo must be configured to allow the telegraf user to run ipmitool\n  ## without a password.\n  use_sudo = true\n  ##\n  ## optionally force session privilege level. Can be CALLBACK, USER, OPERATOR, ADMINISTRATOR\n  # privilege = \"ADMINISTRATOR\"\n  ##\n  ## optionally specify one or more servers via a url matching\n  ##  [username[:password]@][protocol[(address)]]\n  ##  e.g.\n  ##    root:passwd@lan(127.0.0.1)\n  ##\n  ## if no servers are specified, local machine sensor stats will be queried\n  ##\n  # servers = [\"USERID:PASSW0RD@lan(192.168.1.1)\"]\n\n  ## Recommended: use metric 'interval' that is a multiple of 'timeout' to avoid\n  ## gaps or overlap in pulled data\n  interval = \"30s\"\n\n  ## Timeout for the ipmitool command to complete. Default is 20 seconds.\n  timeout = \"20s\"\n\n  ## Schema Version: (Optional, defaults to version 1)\n  metric_version = 2\n\n  ## Optionally provide the hex key for the IMPI connection.\n  # hex_key = \"\"\n\n  ## If ipmitool should use a cache\n  ## for me ipmitool runs about 2 to 10 times faster with cache enabled on HP G10 servers (when using ubuntu20.04)\n  ## the cache file may not work well for you if some sensors come up late\n  # use_cache = false\n\n  ## Path to the ipmitools cache file (defaults to OS temp dir)\n  ## The provided path must exist and must be writable\n  # cache_path = \"\"\n</code></pre> <p>Run Telegraf with the plugins defined in config file:</p> <pre><code>root@:~#./telegraf --config telegraf.conf\n</code></pre>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#download-and-start-the-prometheus-container","title":"Download and start the Prometheus container","text":"<p>Prometheus can be installed on a system in various ways. Here it is downloaded and installed as a container.</p> <p>Create a Prometheus configuration file that is scrapping from both Kepler and Telegraf instance:</p> <p>Sample Prometheus configuration file is as follows:</p> <pre><code># my global config\nglobal:\nscrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\nevaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n# scrape_timeout is set to the global default (10s).\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n# The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n    - job_name: 'kepler'\n      static_configs:\n        - targets: ['xx.xx.xx:9102']\n    - job_name: 'telegraf'\n      static_configs:\n        - targets: ['xx.xx.xx:9273']\n</code></pre> <p>Run the Prometheus container with the created Prometheus configuration file:</p> <pre><code>root@:~# docker run -d -p 9090:9090 -v $PWD/prometheus.yaml:/etc/prometheus/prometheus.yml prom/prometheus\n</code></pre> <p>On the Prometheus GUI at localhost:9090, it can be confirmed that Prometheus is scrapping from Kepler and Telegraf.</p> <p></p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#download-and-start-the-grafana-container","title":"Download and start the Grafana container","text":"<p>Like, Prometheus, Grafana can be installed on the system in various ways. Here, we are installing Grafana's container image.</p> <pre><code>root@:~# docker run -d --network host --name grafana grafana/grafana\n</code></pre> <p>Once Grafana container is running access the Grafana GUI at localhost:3000. Login with default credentials. After login, The Prometheus database needs to be added as a data source into Grafana GUI. Click on <code>DATA SOURCES</code> -&gt; <code>Add your first data source</code> and select Prometheus - &gt; Click <code>Save and Test</code></p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#dashboard","title":"Dashboard","text":"<p>Once Prometheus has been added as a data source, create a dashboard by exporting Kepler-Exporter.json, a default Grafana dashboard for Kepler.</p> <p>This default Kepler dashboard can be edited in order to display Telegraf metric along with Kepler metrics.</p> <p>For example in below shown example, right hand shows Power related metrics collected by Telegraf whereas left hand shows Power related metrics by Kepler per namespace:</p> <p></p> <p>On Kepler side:</p> <p>PKG-&gt; Represents <code>kepler_container_package_joules_total</code> metrics which measures the cumulative energy consumed by the CPU socket, including all cores and uncore components (e.g. last-level cache, integrated GPU and memory controller).</p> <p>DRAM-&gt; Represents <code>kepler_container_dram_joules_total</code> metric which describes the total energy spent in DRAM by a container.</p> <p>Other-&gt; Represents <code>kepler_container_other_joules_total</code> metric measures the cumulative energy consumption on other host components besides the CPU and DRAM. Generally, this metric is the host energy consumption (from acpi) less the RAPL Package and DRAM.</p> <p>On Telegraf side:</p> <p>Total PKG current Power-&gt; Represents powerstat_package_current_power_consumptions metrics which showcase Current power consumption of processor package. On Grafana it is the sum of the metrics on both the sockets i.e. powerstat_package_current_power_consumptions of socket 0 + powerstat_package_current_power_consumptions of socket 1.</p> <p>Total DRAM power -&gt; Represents powerstat_package_current_dram_power_consumptions metrics which describes the total energy spent in DRAM of both the sockets.</p> <p>Total Thermal design Power -&gt; Represents powerstat_package_current_thermal_power_consumptions metrics which describes maximum Thermal Design Power (TDP) available for processor package. On Grafana it is the sum of the metrics on both the sockets i.e. powerstat_package_current_thermal\\ _power_consumptions of socket 0 + powerstat_package_current_thermal_power_consumptions of socket 1.</p> <p>Total DRAM Power metrics number on Kepler side and Telegraf side aligns with each other(approximately).</p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#telegraf-ipmi-metric","title":"Telegraf- IPMI metric","text":"<p>On Kepler dashboard, we are also pulling IPMI metrics which show Power Supply Current out %.</p> <p></p>"},{"location":"archive/installation/Kepler-Telegraf-integration-steps/#references","title":"References","text":"<p>[1] https://sustainable-computing.io/</p> <p>[2] https://github.com/influxdata/telegraf</p>"},{"location":"archive/installation/community-operator/","title":"Kepler Community Operator on OpenShift","text":""},{"location":"archive/installation/community-operator/#requirements","title":"Requirements","text":"<p>Before you start make sure you have:</p> <ul> <li>An OCP 4.13 or above cluster running</li> <li>Signed in as <code>kubeadmin</code> or a user with <code>cluster-admin</code> role</li> <li><code>oc</code> installed.</li> <li> <p>Clone the kepler-operator repository.</p> <pre><code>git clone https://github.com/sustainable-computing-io/kepler-operator.git\ncd kepler-operator\n</code></pre> </li> </ul>"},{"location":"archive/installation/community-operator/#remove-previously-installed-version-of-the-kepler-community-operator","title":"Remove previously installed version of the Kepler Community Operator","text":"<p>If you have previously installed the Kepler Community Operator this will need to be removed prior to the installation of the <code>v0.8.z</code> version or above of the operator. This is due to changes to the Kepler API that are backward incompatible. Please also note that <code>v1alpha1</code> does not promise backward compatibility and backward incompatible changes are expected until the API matures to <code>v1beta1</code>.</p> <p>To remove the Kepler Operator use the Uninstall Operator Script in the Kepler-Operator repo</p> <ul> <li> <p>Run the uninstallation script to check the installed version of the operator</p> <pre><code>./hack/uninstall-operator.sh\n</code></pre> <p>Sample output of the command</p> <pre><code> \ud83d\udd14 No operator version specified; finding the installed version\n   \u2705 found kepler-operator csv: clusterserviceversion.operators.coreos.com/kepler-operator.v0.8.1\n   \u2705 kepler-operator version: v0.8.1\n   \u2705 Found - Kepler Operator version: v0.8.1\n\n\n   \ud83d\udd06\ud83d\udd06\ud83d\udd06  Resources of Kepler Operator - v0.8.1  \ud83d\udd06\ud83d\udd06\ud83d\udd06\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nNAME                     DISPLAY   VERSION   REPLACES                 PHASE\nkepler-operator.v0.8.1   Kepler    0.8.1     kepler-operator.v0.8.0   Succeeded\n\n\n   \ud83d\udd06\ud83d\udd06\ud83d\udd06  Going to delete the following  \ud83d\udd06\ud83d\udd06\ud83d\udd06\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n \u276f kubectl get ns kepler\n\nError from server (NotFound): namespaces \"kepler\" not found\n \u276f kubectl get kepler -A\n\nNAME     PORT   DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   AGE\nkepler   9103   17        17        17      17           17          12h\n \u276f kubectl get -n openshift-operators olm -l operators.coreos.com/kepler-operator.openshift-operators=\n\nNAME                                                            AGE\noperatorcondition.operators.coreos.com/kepler-operator.v0.8.1   12h\n....\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n \ud83d\udd14 To delete all resources listed above, rerun with the `--delete` option added.\n\n    \ue795     ./hack/uninstall-operator.sh  --delete\n</code></pre> </li> <li> <p>Once the above is verified, uninstall the operator and all the related resources by specifying the --delete flag.</p> <pre><code>./hack/uninstall-operator.sh  --delete\n</code></pre> </li> </ul>"},{"location":"archive/installation/community-operator/#install-kepler-community-operator-from-operator-hub","title":"Install Kepler Community Operator from Operator Hub","text":"<ul> <li> <p>Go to Operators \u276f Operator Hub. Search for <code>Kepler</code>.   Click on Kepler Operator tile, then select <code>Continue</code> and then <code>Install</code></p> <p></p> </li> <li> <p>Choose <code>alpha</code> channel to deploy the <code>latest</code> version of the Operator.</p> <p>From OCP 4.15 onwards operator can be installed on Namespaces other than <code>openshift-operators</code></p> </li> <li> <p>Click on <code>Install</code></p> <p></p> </li> <li> <p>Wait until Operator gets installed</p> <p></p> <p>Follow the <code>View Operator</code> link to view installed Operators in <code>openshift-operators</code> Namespace or use the UI to navigate to installed operators and select the Kepler Operator.</p> </li> <li> <p>Select <code>Create instance</code> to Create a Custom Resource for Kepler</p> <p></p> </li> <li> <p>There is a <code>Form</code> and <code>YAML</code> view, using the YAML view   provides more detail.</p> <p></p> <p></p> </li> <li> <p>Once Kepler is configured select <code>Create</code>.</p> </li> <li> <p>Check that the Kepler is deployed and available</p> <pre><code>oc get kepler kepler\n</code></pre> <pre><code>NAME     PORT   DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   AGE\nkepler   9103   6         6         6       6            6           33s\n</code></pre> </li> </ul>"},{"location":"archive/installation/community-operator/#kepler-dashboard","title":"Kepler Dashboard","text":"<p>The Kepler Dashboard provides the ability to visualize data exported by Kepler thus facilitating data-driven insights and a clear and interactive overview of metrics. Currently, we can visualize Kepler related metrics either via deploying Grafana dashboard on OpenShift or directly via OpenShift Console.</p>"},{"location":"archive/installation/community-operator/#openshift-console","title":"OpenShift Console","text":"<p>To view the metrics directly from OpenShift Console</p> <ul> <li>Configure user workload monitoring on the cluster. Refer to the official OpenShift documentation for more information.</li> <li>Navigate to Observe \u276f Dashboard</li> <li>To view overall power consumption select <code>Power Monitoring / Overview</code> from the dropdown.     </li> <li>To view the power consumption by namespace select <code>Power Monitoring / Namespace</code> from the dropdown.     </li> </ul>"},{"location":"archive/installation/community-operator/#deploy-the-grafana-dashboard","title":"Deploy the Grafana Dashboard","text":"<p>The Kepler dashboard can be installed using the deploy grafana script in the kepler-operator repo</p> <ul> <li> <p>Run the Grafana deployment script</p> <pre><code>./hack/dashboard/openshift/deploy-grafana.sh\n</code></pre> </li> </ul> <p>The script takes a few minutes to complete. The script automates the following steps:</p> <ul> <li>Setup OpenShift User Workload Monitoring.</li> <li>Install the Grafana Community Operator inside <code>kepler-grafana</code> namespace</li> <li>Setup Grafana related dependencies e.g. ServiceAccount, Grafana DataSource, Grafana Dashboard and Route</li> </ul> <p>When the script successfully completes it provides the OpenShift Route to the Kepler Dashboard.</p> <pre><code>   \ud83d\udd06\ud83d\udd06\ud83d\udd06  Grafana Dashboard Setup Complete  \ud83d\udd06\ud83d\udd06\ud83d\udd06\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n  \ud83d\udcc8 Grafana Configuration:\n\n   Dashboard URL: https://grafana-route-kepler-grafana.apps.devcluster.openshift.com/login\n           Admin: kepler\n        Password: kepler\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n \ud83d\udd14 Kepler use prometheus deployed in openshift-user-workload-monitoring to store metrics. To configure Prometheus to cater to needs of the cluster such as:\n\n    * Increase data retention for in-depth analysis\n    * Allocate more resources based on requirements\n\n\ud83d\udca1 see: https://docs.openshift.com/container-platform/latest/observability/monitoring/configuring-the-monitoring-stack.html#configuring-the-monitoring-stack_configuring-the-monitoring-stack\n\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n</code></pre>"},{"location":"archive/installation/community-operator/#grafana-dashboard","title":"Grafana Dashboard","text":"<p>Sign in to the Grafana dashboard using the credentials <code>kepler:kepler</code>.</p> <p></p>"},{"location":"archive/installation/community-operator/#access-the-grafana-console-route","title":"Access the Grafana Console Route","text":"<p>The dashboard can also be accessed through the OCP UI, Go to Networking \u276f Routes.</p> <p></p>"},{"location":"archive/installation/community-operator/#grafana-deployment-overview","title":"Grafana Deployment Overview","text":"<p>Refer to the Grafana Deployment Overview</p> <p></p>"},{"location":"archive/installation/community-operator/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"archive/installation/community-operator/#will-kepler-work-on-earlier-releases-of-openshift","title":"Will Kepler work on earlier releases of OpenShift?","text":"<p>Our recommendation is use <code>OCP 4.13</code> and above, but Kepler can be installed on <code>OCP 4.11</code> and <code>4.12</code>. In the future the Operator may be updated to check the version of Kubernetes that is installed e.g. <code>v1.25</code>.</p>"},{"location":"archive/installation/community-operator/#how-do-i-set-nodeselector-and-tolerations-for-kepler","title":"How do I set nodeSelector and tolerations for Kepler?","text":"<p>You can specify nodeSelector and toleration's for Kepler at the time of creating Instance. You can specify both in <code>Form</code> and <code>YAML</code> view.</p> <p>To specify in <code>YAML</code> view:</p> <pre><code>spec:\nexporter:\n  deployment:\n    port: 9103\n    nodeSelector:\n      foo: bar\n    tolerations:\n      - key: foo\n        operator: \"Equal\"\n        value: bar\n        effect: NoExecute\n</code></pre>"},{"location":"archive/installation/community-operator/#how-do-i-specify-redfish-related-configuration","title":"How do I specify Redfish related configuration?","text":"<p>You can specify Redfish related configuration for Kepler at the time of creating Instance. You can specify both in <code>Form</code> and <code>YAML</code> view.</p> <p>To specify in <code>YAML</code> view:</p> <pre><code>spec:\n  exporter:\n    deployment:\n      port: 9103\n      tolerations:\n        - operator: Exists\n    redfish:\n      secretRef: redfish-secret\n      probeInterval: 60s\n      skipSSLVerify: false\n</code></pre> <p>Note</p> <p>Once an instance is created, the user must manually create redfish secret <code>redfish-secret</code> in the namespace <code>kepler-operator</code>. Once the secret is created, the operator will reconcile and Kepler will be able to connect to Redfish.</p> <p>For more information regarding secret content specification refer to the upstream manifest.</p>"},{"location":"archive/installation/community-operator/#where-are-kepler-exporter-pods-deployed","title":"Where are Kepler exporter pods deployed?","text":"<p>Once a Kepler Instance is created all related resources like pods, daemonsets, configmaps, secrets etc. are present inside the <code>kepler-operator</code> namespace. To view the available resources:</p> <pre><code>oc get all -n kepler-operator\n</code></pre>"},{"location":"archive/installation/kepler-helm/","title":"Deploy using Helm Chart","text":"<p>The Kepler Helm Chart is available on GitHub and ArtifactHub</p>"},{"location":"archive/installation/kepler-helm/#install-helm","title":"Install Helm","text":"<p>Helm must be installed to use the charts. Please refer to Helm's documentation to get started.</p>"},{"location":"archive/installation/kepler-helm/#prometheus-setup","title":"Prometheus Setup","text":"<p>The Kepler Exporter requires the Prometheus Node Exporter to be installed. We recommend the Kube Prometheus Stack helm chart, which includes the Node Exporter, Grafana and other helpful stuff to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.</p> <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nhelm install prometheus prometheus-community/kube-prometheus-stack \\\n    --namespace monitoring \\\n    --create-namespace \\\n    --wait\n</code></pre>"},{"location":"archive/installation/kepler-helm/#add-the-kepler-helm-repo","title":"Add the Kepler Helm repo","text":"<pre><code>helm repo add kepler https://sustainable-computing-io.github.io/kepler-helm-chart\nhelm repo update\n</code></pre> <p>You can see the latest version by using the following command:</p> <pre><code>helm search repo kepler\n</code></pre> <p>If you would like to test and look at the manifest files before deploying you can run:</p> <pre><code>helm install kepler kepler/kepler --namespace kepler --create-namespace --dry-run --devel\n</code></pre>"},{"location":"archive/installation/kepler-helm/#install-kepler","title":"Install Kepler","text":"<p>For Prometheus to be able to discover the metrics exported by Kepler, the <code>serviceMonitor</code> needs to be enabled and labeled with the release name of your Prometheus install. In our installation we called our kube-prometheus-stack install <code>prometheus</code>:</p> <pre><code>helm install kepler kepler/kepler \\\n    --namespace kepler \\\n    --create-namespace \\\n    --set serviceMonitor.enabled=true \\\n    --set serviceMonitor.labels.release=prometheus \\\n</code></pre> <p>Alternatively, you can also override the values.yaml file to set these and the following values:</p> <pre><code>helm install kepler kepler/kepler --values values.yaml --namespace kepler --create-namespace\n</code></pre> <p>The following table lists the configurable parameters for this chart and their default values.</p> Parameter Description Default global.namespace Kubernetes namespace for Kepler kepler image.repository Repository for Kepler Image quay.io/sustainable_computing_io/kepler image.pullPolicy Pull policy for Kepler Always image.tag Image tag for Kepler Image latest serviceAccount.name Service account name for Kepler kepler-sa service.type Kepler service type ClusterIP service.port Kepler service exposed port 9102"},{"location":"archive/installation/kepler-helm/#post-install","title":"Post Install","text":"<p>After Installation you can wait for Kepler to get ready:</p> <pre><code>KPLR_POD=$(\n    kubectl get pod \\\n        -l app.kubernetes.io/name=kepler \\\n        -o jsonpath=\"{.items[0].metadata.name}\" \\\n        -n kepler\n)\nkubectl wait --for=condition=Ready pod $KPLR_POD --timeout=-1s -n kepler\n</code></pre> <p>and add the Kepler dashboard to Grafana:</p> <pre><code>GF_POD=$(\n    kubectl get pod \\\n        -n monitoring \\\n        -l app.kubernetes.io/name=grafana \\\n        -o jsonpath=\"{.items[0].metadata.name}\"\n)\nkubectl cp kepler_dashboard.json monitoring/$GF_POD:/tmp/dashboards/kepler_dashboard.json\n</code></pre>"},{"location":"archive/installation/kepler-helm/#uninstall-kepler","title":"Uninstall Kepler","text":"<p>To uninstall this chart, use the following steps</p> <pre><code>helm delete kepler --namespace kepler\n</code></pre>"},{"location":"archive/installation/kepler-operator/","title":"Kepler Operator on Kind","text":""},{"location":"archive/installation/kepler-operator/#requirements","title":"Requirements","text":"<p>Before you start make sure you have:</p> <ul> <li><code>docker</code> installed and configured to run as non-root by default</li> <li><code>kubectl</code> installed</li> <li><code>kind</code> installed</li> <li>Clone the <code>kepler-operator</code> repository</li> <li>Sign in as <code>kubeadmin</code> or a user with <code>cluster-admin</code> role</li> </ul> <p>Note</p> <p>Your controller will automatically use the current context in your kubeconfig file (i.e. whatever cluster kubectl cluster-info shows).</p>"},{"location":"archive/installation/kepler-operator/#run-a-kind-cluster-locally","title":"Run a kind cluster locally","text":"<pre><code>cd kepler-operator\nmake cluster-up\n</code></pre>"},{"location":"archive/installation/kepler-operator/#run-kepler-operator","title":"Run kepler-operator","text":"<ul> <li> <p>You can use the image from quay.io to deploy kepler-operator.</p> <pre><code>make deploy OPERATOR_IMG=quay.io/sustainable_computing_io/kepler-operator:[VERSION]\nkubectl apply -k config/samples/\n</code></pre> </li> <li> <p>Alternatively, if you like to setup cluster, build and use your own images</p> <pre><code>make fresh\n</code></pre> <p>The above will create a kind cluster build and push operator and bundle images to local registry.</p> </li> </ul>"},{"location":"archive/installation/kepler-operator/#set-up-grafana-dashboard","title":"Set up Grafana Dashboard","text":"<p>Using <code>GRAFANA_ENABLE=true</code> and <code>PROMETHEUS_ENABLE=true</code> when running <code>make cluster-up</code> configures the <code>kube-prometheus</code> monitoring stack in the namespace <code>monitoring</code>. To access the Grafana Console locally on the browser port-forward on 3000 using the following command:</p> <pre><code>kubectl port-forward svc/grafana 3000:3000 -n monitoring\n</code></pre> <p>Note</p> <p>Grafana Console can be accessed on http://localhost:3000</p>"},{"location":"archive/installation/kepler-operator/#service-monitor","title":"Service Monitor","text":"<p>For <code>kube-prometheus</code> to scrape <code>kepler-exporter</code> service endpoint you need to configure a service monitor.</p> <p>Note</p> <p>By default <code>kube-prometheus</code> does not let you scrape services deployed in namespaces other than <code>monitoring</code>. So if you are running Kepler outside <code>monitoring</code> follow this to set up Prometheus to scrape all namespaces.</p> <pre><code>kubectl apply -n monitoring -f - &lt;&lt; EOF\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kepler-exporter\n    sustainable-computing.io/app: kepler\n  name: monitor-kepler-exporter\nspec:\n  endpoints:\n  - interval: 3s\n    port: http\n    relabelings:\n    - action: replace\n      regex: (.*)\n      replacement: $1\n      sourceLabels:\n      - __meta_kubernetes_pod_node_name\n      targetLabel: instance\n    scheme: http\n  jobLabel: app.kubernetes.io/name\n  namespaceSelector:\n    matchNames:\n    any: true\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: exporter\n      app.kubernetes.io/name: kepler-exporter\nEOF\n</code></pre>"},{"location":"archive/installation/kepler-operator/#grafana-dashboard","title":"Grafana Dashboard","text":"<p>To set up the Grafana dashboard follow these steps:</p> <ul> <li>Sign in localhost:3000 using <code>admin:admin</code></li> <li> <p>Import default dashboard from Kepler operator repository</p> <p></p> </li> </ul>"},{"location":"archive/installation/kepler-operator/#uninstall-the-operator","title":"Uninstall the operator","text":"<p>To delete the CRDs, roles, roleBindings etc from the cluster:</p> <pre><code>make undeploy\n</code></pre>"},{"location":"archive/installation/kepler-operator/#troubleshooting","title":"Troubleshooting","text":""},{"location":"archive/installation/kepler-operator/#scrape-all-namespaces","title":"Scrape all namespaces","text":"<p>kube-prometheus by default does not let you scrape services in namespaces outside <code>monitoring</code>. This is controlled by RBAC. The clusterrole <code>prometheus-k8s</code> should have below policy to scrape services in all namespaces.</p> <pre><code>kubectl describe clusterrole prometheus-k8s\nName:         prometheus-k8s\nLabels:       app.kubernetes.io/component=prometheus\n              app.kubernetes.io/instance=k8s\n              app.kubernetes.io/name=prometheus\n              app.kubernetes.io/part-of=kube-prometheus\n              app.kubernetes.io/version=2.45.0\nAnnotations:  &lt;none&gt;\nPolicyRule:\n  Resources                    Non-Resource URLs  Resource Names  Verbs\n  ---------                    -----------------  --------------  -----\n  endpoints                    []                 []              [get list watch]\n  pods                         []                 []              [get list watch]\n  services                     []                 []              [get list watch]\n  ingresses.networking.k8s.io  []                 []              [get list watch]\n                               [/metrics]         []              [get]\n  nodes/metrics                []                 []              [get]\n</code></pre> <ul> <li> <p>To customize the Prometheus after creating local cluster follow kube-prometheus documentation on Customizing Kube-Prometheus</p> </li> <li> <p>Make sure you apply this jsonnet to ensure Prometheus scrapes services in all namespaces.</p> </li> </ul>"},{"location":"archive/installation/kepler-rpm/","title":"Install Kepler as RPM","text":""},{"location":"archive/installation/kepler-rpm/#versions-0710-and-newer","title":"Versions 0.7.10 and newer","text":"<p>The current rpm release is a systemd unit that starts a podman container.</p> <p>Download the latest stable release from the Kepler release URL download</p> <pre><code>tar xvzf kepler.rpm.tar.gz\nyum install RPMS/noarch/container-kepler-0.7.10-1.noarch.rpm\nsystemctl enable container-kepler --now\n</code></pre> <p>Verify that podman starts a kepler container via</p> <p><code>sudo podman ps</code></p> <p>then via your browser pointing to the URL below on the preconfigured port browser</p> <p>or via a curl command:</p> <p><code>curl localhost:8888/metrics | grep kepler_node_package_joules_total</code></p>"},{"location":"archive/installation/kepler-rpm/#versions-prior-to-0710","title":"Versions prior to 0.7.10","text":"<p>Older version directly install kepler as a rpm package (as opposed to as a container in newer versions) To install the Kepler RPM download the latest stable version, unpack and install:</p> <pre><code>sudo dnf localinstall kepler-[version.arch].rpm\n\nsystemctl start kepler.service\n</code></pre> <p>Check status with</p> <pre><code>systemctl status kepler.service\n\njournalctl -f | grep kepler\n</code></pre> <p>In order to do process-level energy accounting type:</p> <pre><code>mkdir -p /etc/kepler/kepler.config\necho -n true &gt; /etc/kepler/kepler.config/ENABLE_PROCESS_METRICS\n</code></pre> <p>The kepler service runs on default port 8888.</p> <p>Use your web browser to navigate to the machine IP on port 8888.</p>"},{"location":"archive/installation/kepler/","title":"Deploy using Manifests","text":""},{"location":"archive/installation/kepler/#getting-started","title":"Getting Started","text":"<p>The following instructions work for both <code>Kind</code> and <code>Kubeadm</code> clusters.</p>"},{"location":"archive/installation/kepler/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>You have a Kubernetes cluster running.</p> <p>Note</p> <p>If you want to setup a kind cluster follow this</p> </li> <li> <p>The Monitoring stack, i.e. Prometheus with Grafana is set up. Steps here</p> <p>Note</p> <p>The default Grafana deployment can be accessed with the credentials <code>admin:admin</code>. You can expose the web-based UI locally using:</p> <pre><code>kubectl -n monitoring port-forward svc/grafana 3000\n</code></pre> </li> </ol> <p>If the perquisites are met, then please proceed to the following sections.</p>"},{"location":"archive/installation/kepler/#deploying-kepler-on-a-local-kind-cluster","title":"Deploying Kepler on a local kind cluster","text":"<p>To deploy Kepler on <code>kind</code>, we need to build it locally with specific flags. The full details of local builds are covered in the section below. To deploy on a local <code>kind</code> cluster, you need to build using the <code>PROMETHEUS_DEPLOY</code> flag.</p> <pre><code>git clone --depth 1 git@github.com:sustainable-computing-io/kepler.git\ncd ./kepler\nmake build-manifest OPTS=\"PROMETHEUS_DEPLOY\"\nkubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre>"},{"location":"archive/installation/kepler/#deploying-kepler-on-a-baremetal-kubeadm-cluster","title":"Deploying Kepler on a baremetal Kubeadm cluster","text":"<p>To deploy Kepler on Kubeadm, we need to build it locally with specific flags. The full details of local builds are covered in the section below. To deploy on a local <code>Kubeadm</code> cluster, you need to use the <code>BM_DEPLOY</code> and <code>PROMETHEUS_DEPLOY</code> flags.</p> <pre><code>git clone --depth 1 git@github.com:sustainable-computing-io/kepler.git\ncd ./kepler\nmake build-manifest OPTS=\"BM_DEPLOY PROMETHEUS_DEPLOY\"\nkubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre>"},{"location":"archive/installation/kepler/#dashboard-access","title":"Dashboard access","text":"<p>The deployment steps above will create a Kepler service listening on port <code>9102</code>.</p> <p>If you followed the Kepler dashboard deployment steps, you can access the Kepler dashboard by navigating to http://localhost:3000/ Login using <code>admin:admin</code>. Skip the window where Grafana asks to input a new password.</p> <p></p> <p>Note</p> <p>To forward ports simply run: <pre><code>kubectl port-forward --address localhost -n kepler service/kepler-exporter 9102:9102 &amp;\nkubectl port-forward --address localhost -n monitoring service/prometheus-k8s 9090:9090 &amp;\nkubectl port-forward --address localhost -n monitoring service/grafana 3000:3000 &amp;\n</code></pre></p>"},{"location":"archive/installation/kepler/#build-manifests","title":"Build manifests","text":"<p>First, fork the kepler repository and clone it.</p> <p>If you want to use Redfish BMC and IPMI, you need to add Redfish and IPMI credentials of each of the kubelet node to the <code>redfish.csv</code> under the <code>kepler/manifests/k8s/config/exporter</code> directory. The format of the file is as follows:</p> <pre><code>kubelet_node_name_1,redfish_username_1,redfish_password_2,https://redfish_ip_or_hostname_1\nkubelet_node_name_2,redfish_username_2,redfish_password_2,https://redfish_ip_or_hostname_2\n</code></pre> <p>where, <code>kubelet_node_name</code> in the first column is the name of the node where the kubelet is running. You can get the name of the node by running the following command:</p> <pre><code>kubectl get nodes\n</code></pre> <p><code>redfish_username</code> and <code>redfish_password</code> in the second and third columns are the credentials to access the Redfish API from each node. While <code>https://redfish_ip_or_hostname</code> in the fourth column is the Redfish endpoint in IP address or hostname.</p> <p>Then, build the manifests file that suit your environment and deploy it with the following steps:</p> <pre><code>make build-manifest OPTS=\"&lt;deployment options&gt;\"\n</code></pre> <p>Minimum deployment:</p> <pre><code>make build-manifest\n</code></pre> <p>Deployment with sidecar on openshift:</p> <pre><code>make build-manifest OPTS=\"ESTIMATOR_SIDECAR_DEPLOY OPENSHIFT_DEPLOY\"\n</code></pre> <p>Manifests will be generated in  <code>_output/generated-manifest/</code> by default.</p> Deployment Option Description Dependency BM_DEPLOY baremetal deployment patched with node selector feature.node.kubernetes.io/cpu-cpuid.HYPERVISOR to not exist - OPENSHIFT_DEPLOY patch openshift-specific attribute to kepler daemonset and deploy SecurityContextConstraints - PROMETHEUS_DEPLOY patch prometheus-related resource (ServiceMonitor, RBAC role, rolebinding) require prometheus deployment which can be OpenShift integrated or custom deploy HIGH_GRANULARITY sets the Prometheus scrape interval for Kepler to 3s (default is 30s) PROMETHEUS_DEPLOY option set CLUSTER_PREREQ_DEPLOY deploy prerequisites for kepler on openshift cluster OPENSHIFT_DEPLOY option set CI_DEPLOY update proc path for kind cluster using in CI - ESTIMATOR_SIDECAR_DEPLOY patch estimator sidecar and corresponding ConfigMap to kepler daemonset - MODEL_SERVER_DEPLOY deploy model server and corresponding ConfigMap to kepler daemonset - TRAINER_DEPLOY patch online-trainer sidecar to model server MODEL_SERVER_DEPLOY option set DEBUG_DEPLOY patch KEPLER_LOG_LEVEL for debugging - QAT_DEPLOY update proc path for Kepler to enable accelerator QAT Intel QAT installed DCGM_DEPLOY Enable <code>hostNetwork: true</code> in Kepler container to access local DCGM service; use <code>latest-dcgm</code> Kepler container image to load DCGM library and dependencies NVIDIA DCGM service must be installed on the node <p>Following options are available for Redfish client, you can set them as environment variables of kepler-exporter. They affect all of Redfish access from Kepler Exporter.</p> Option Default value Description REDFISH_PROBE_INTERVAL_IN_SECONDS 60 Interval in seconds to get power consumption via Redfish. REDFISH_SKIP_SSL_VERIFY true <code>true</code> if TLS verification is disabled on connecting to Redfish endpoint. <p><code>build-manifest</code> requirements:</p> <ul> <li>kubectl v1.21+</li> <li>make</li> <li>go</li> </ul>"},{"location":"archive/installation/kepler/#deploy-the-prometheus-operator","title":"Deploy the Prometheus operator","text":"<p>If Prometheus is already installed in the cluster, skip this step. Otherwise, follow these steps to install it.</p> <ol> <li> <p>Clone the kube-prometheus project to   your local folder, and enter the <code>kube-prometheus</code> directory.</p> <pre><code>git clone --depth 1 https://github.com/prometheus-operator/kube-prometheus; cd kube-prometheus;\n</code></pre> </li> <li> <p>This step is optional. You can later manually add the Kepler Grafana dashboard through the   Grafana UI. To automatically do that, fetch the <code>kepler-exporter</code> Grafana dashboard and inject in   the Prometheus Grafana deployment.</p> <pre><code>$ KEPLER_EXPORTER_GRAFANA_DASHBOARD_JSON=`curl -fsSL https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/grafana-dashboards/Kepler-Exporter.json | sed '1 ! s/^/         /'`\n$ mkdir -p grafana-dashboards\n$ cat - &gt; ./grafana-dashboards/kepler-exporter-configmap.yaml &lt;&lt; EOF\napiVersion: v1\ndata:\n    kepler-exporter.json: |-\n        $KEPLER_EXPORTER_GRAFANA_DASHBOARD_JSON\nkind: ConfigMap\nmetadata:\n    labels:\n        app.kubernetes.io/component: grafana\n        app.kubernetes.io/name: grafana\n        app.kubernetes.io/part-of: kube-prometheus\n        app.kubernetes.io/version: 9.5.3\n    name: grafana-dashboard-kepler-exporter\n    namespace: monitoring\nEOF\n</code></pre> <p>Note</p> <p>The next step uses yq, a YAML processor.</p> <pre><code>yq -i e '.items += [load(\"./grafana-dashboards/kepler-exporter-configmap.yaml\")]' ./manifests/grafana-dashboardDefinitions.yaml\nyq -i e '.spec.template.spec.containers.0.volumeMounts += [ {\"mountPath\": \"/grafana-dashboard-definitions/0/kepler-exporter\", \"name\": \"grafana-dashboard-kepler-exporter\", \"readOnly\": false} ]' ./manifests/grafana-deployment.yaml\nyq -i e '.spec.template.spec.volumes += [ {\"configMap\": {\"name\": \"grafana-dashboard-kepler-exporter\"}, \"name\": \"grafana-dashboard-kepler-exporter\"} ]' ./manifests/grafana-deployment.yaml\n</code></pre> </li> <li> <p>Finally, apply the objects in the <code>manifests</code> directory. This will create the <code>monitoring</code> namespace and CRDs, and then wait for them to be available before creating the remaining resources. During the <code>until</code> loop, a response of <code>No resources found</code> is to be expected. This statement checks whether the resource API is created but doesn't expect the resources to be there.</p> <pre><code>kubectl apply --server-side -f manifests/setup\nuntil kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo \"\"; done\nkubectl apply -f manifests/\n</code></pre> <p>Note</p> <p>It takes a short time (in a Kind cluster), for all the pods and services to reach a <code>running</code> state.</p> </li> </ol>"},{"location":"archive/installation/kepler.zh-qc/","title":"Translation Quality Check Report: kepler.zh.md","text":""},{"location":"archive/installation/kepler.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>kepler.md</code> is excellent with high technical accuracy and near-complete content preservation.</p>"},{"location":"archive/installation/kepler.zh-qc/#content-completeness","title":"Content Completeness","text":"<ul> <li>Original: 204 lines</li> <li>Chinese: 201 lines</li> <li>Difference: 3 lines (~1.5% difference) - EXCELLENT retention rate</li> </ul>"},{"location":"archive/installation/kepler.zh-qc/#differences-found","title":"Differences Found","text":""},{"location":"archive/installation/kepler.zh-qc/#minor-link-reference-changes","title":"Minor Link Reference Changes","text":"<ol> <li>Internal Anchor Links:</li> <li>Original: <code>#build-manifests</code></li> <li>Chinese: <code>#_1</code></li> <li> <p>Impact: Minimal - May be due to markdown processing, functionality preserved</p> </li> <li> <p>Cross-Reference Links:</p> </li> <li>Original: <code>./local-cluster.md#install-kind</code></li> <li>Chinese: <code>./local-cluster.zh.md#kind</code></li> <li> <p>Impact: None - Correctly updated to point to Chinese version</p> </li> <li> <p>Section Header:</p> </li> <li>Original: \"Getting Started\"</li> <li>Chinese: \"\u5165\u95e8\u6307\u5357\"</li> <li>Reverse: \"Getting Started Guide\"</li> <li>Impact: None - Improved clarity</li> </ol>"},{"location":"archive/installation/kepler.zh-qc/#language-flow-improvements","title":"Language Flow Improvements","text":"<ol> <li>Prerequisites Section:</li> <li>Original: \"If the perquisites are met, then please proceed to the following sections\"</li> <li>Chinese: \"\u5982\u679c\u6ee1\u8db3\u5148\u51b3\u6761\u4ef6\uff0c\u8bf7\u7ee7\u7eed\u6267\u884c\u4ee5\u4e0b\u90e8\u5206\"</li> <li>Reverse: \"If the prerequisites are met, please proceed with the following sections\"</li> <li>Impact: None - More natural phrasing</li> </ol>"},{"location":"archive/installation/kepler.zh-qc/#strengths-outstanding-quality","title":"Strengths - Outstanding Quality","text":""},{"location":"archive/installation/kepler.zh-qc/#perfect-technical-preservation","title":"\u2705 Perfect Technical Preservation","text":"<ul> <li>Command blocks: All kubectl, git, make commands preserved exactly</li> <li>File paths: All paths maintained correctly (_output/generated-manifest/deployment.yaml)</li> <li>Flags: Technical flags (PROMETHEUS_DEPLOY, BM_DEPLOY) preserved</li> <li>URLs: All GitHub links and reference links intact</li> </ul>"},{"location":"archive/installation/kepler.zh-qc/#excellent-structure-maintenance","title":"\u2705 Excellent Structure Maintenance","text":"<ul> <li>Admonition blocks: All <code>!!! note</code> blocks properly formatted and translated</li> <li>Code syntax: Console commands with proper syntax highlighting</li> <li>Markdown elements: Headers, bullet points, links all correct</li> <li>Reference section: Numbered references [1], [2] properly maintained</li> </ul>"},{"location":"archive/installation/kepler.zh-qc/#technical-terminology-excellence","title":"\u2705 Technical Terminology Excellence","text":"<ul> <li>Deployment methods: \"manifests\" (\u6e05\u5355), \"bare metal\" (\u88f8\u673a) accurately translated</li> <li>Kubernetes concepts: Clusters, pods, services, namespaces properly handled</li> <li>Monitoring stack: Prometheus, Grafana concepts well explained</li> <li>Installation procedures: Step-by-step instructions clearly translated</li> </ul>"},{"location":"archive/installation/kepler.zh-qc/#user-experience-optimization","title":"\u2705 User Experience Optimization","text":"<ul> <li>Cross-references: Updated to point to Chinese versions where appropriate</li> <li>Credential information: Important details like <code>admin:admin</code> preserved</li> <li>Port forwarding: Technical procedures accurately explained</li> <li>Prerequisites: Clear explanation of setup requirements</li> </ul>"},{"location":"archive/installation/kepler.zh-qc/#translation-quality-score-9810","title":"Translation Quality Score: 9.8/10","text":"<p>Minimal deductions for: - Minor anchor link variation (-0.2)</p>"},{"location":"archive/installation/kepler.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/installation/kepler.zh-qc/#status-approved-outstanding","title":"Status: APPROVED - OUTSTANDING \u2705","text":"<p>This translation represents exceptional quality and demonstrates:</p> <ul> <li>Mastery of Kubernetes deployment concepts</li> <li>Perfect preservation of technical commands and procedures</li> <li>Excellent adaptation of cross-references for Chinese documentation</li> <li>Clear user guidance maintaining original instructional intent</li> </ul> <p>No revisions required - This translation exceeds professional standards and provides excellent user experience for Chinese-speaking Kubernetes administrators.</p>"},{"location":"archive/installation/local-cluster/","title":"Local cluster setup","text":"<p>Kepler runs on Kubernetes. If you already have access to a cluster, you can skip this section. To deploy a local cluster, you can use kind. <code>kind</code> is a tool for running local Kubernetes clusters using Docker container \"nodes\". It was primarily designed for testing Kubernetes itself, but may be used for local development or CI.</p>"},{"location":"archive/installation/local-cluster/#install-kind","title":"Install kind","text":"<p>To install <code>kind</code>, please see the instructions here.</p> <p>We need to configure our cluster to run Kepler. Specifically, we need to mount <code>/proc</code> (to expose information about processes running on the host) and <code>/usr/src</code> (to expose kernel headers allowing dynamic eBPF program compilation - this dependency might be removed in future releases into the node containers. Below is a minimal single-node example configuration:</p> <pre><code>$ cat - &gt; ./local-cluster-config.yaml &lt;&lt; EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: my-cluster\nnodes:\n- role: control-plane\n  image: kindest/node:v1.27.3@sha256:3966ac761ae0136263ffdb6cfd4db23ef8a83cba8a463690e98317add2c9ba72\n  extraMounts:\n  - hostPath: /proc\n    containerPath: /proc-host\n  - hostPath: /usr/src\n    containerPath: /usr/src\nEOF\n</code></pre> <p>We can then spin up a cluster with either:</p> <pre><code>export CLUSTER_NAME=\"my-cluster\"  # we can use the --name flag to override the name in our config\nkind create cluster --name=$CLUSTER_NAME --config=./local-cluster-config.yaml\n</code></pre> <p>or simply by running:</p> <pre><code>make cluster-up\n</code></pre> <p>Note that <code>kind</code> automatically switches your current <code>kubeconfig</code> context to the newly created cluster.</p>"},{"location":"archive/installation/strategy/","title":"Installation Strategies","text":"<p>While you are free to explore any deployments but the recommended strategies are :</p> OCP 4.13 Microshift RHEL ROSA Kind kepler-operator Manifests RPM Manifests Helm Charts, Manifests, kepler-operator"},{"location":"archive/installation/strategy/#requirements","title":"Requirements","text":"<ul> <li>Kernel 4.18+</li> <li><code>kubectl</code> v1.21.0+</li> <li><code>docker</code> installed non-root by default</li> </ul>"},{"location":"archive/installation/strategy.zh-qc/","title":"Translation Quality Check Report: strategy.zh.md","text":""},{"location":"archive/installation/strategy.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>strategy.md</code> is excellent with high accuracy and complete content preservation.</p>"},{"location":"archive/installation/strategy.zh-qc/#content-completeness","title":"Content Completeness","text":"<ul> <li>Original: 14 lines</li> <li>Chinese: 13 lines</li> <li>Difference: 1 line (~7% difference) - Likely due to formatting/spacing</li> </ul>"},{"location":"archive/installation/strategy.zh-qc/#differences-found","title":"Differences Found","text":""},{"location":"archive/installation/strategy.zh-qc/#minor-language-improvements","title":"Minor Language Improvements","text":"<ol> <li>Translation Enhancement:</li> <li>Original: \"any deployments\"</li> <li>Chinese: \"\u4efb\u4f55\u90e8\u7f72\u65b9\u5f0f\"</li> <li>Reverse: \"any deployment methods\"</li> <li> <p>Impact: None - Improved clarity</p> </li> <li> <p>Last Requirement:</p> </li> <li>Original: \"<code>docker</code> installed non-root by default\"</li> <li>Chinese: \"\u9ed8\u8ba4\u4ee5\u975e root \u7528\u6237\u5b89\u88c5 <code>docker</code>\"</li> <li>Reverse: \"<code>docker</code> installed by non-root user by default\"</li> <li>Impact: None - Clearer phrasing</li> </ol>"},{"location":"archive/installation/strategy.zh-qc/#strengths","title":"Strengths","text":"<ul> <li>\u2705 Complete content: All information preserved</li> <li>\u2705 Technical accuracy: All technical terms correctly maintained</li> <li>\u2705 Table preservation: Complex table with platform names intact</li> <li>\u2705 Version numbers: Exact version requirements preserved (4.18+, v1.21.0+)</li> <li>\u2705 Code formatting: Backticks and technical commands properly formatted</li> <li>\u2705 Platform names: All platform names (OCP, Microshift, RHEL, ROSA, Kind) correctly preserved</li> </ul>"},{"location":"archive/installation/strategy.zh-qc/#technical-translation-quality","title":"Technical Translation Quality","text":"<ul> <li>Installation methods: Proper translation of technical deployment terms</li> <li>Requirements section: Clear translation maintaining technical specifications</li> <li>Mixed content: Excellent handling of both Chinese text and English technical terms</li> </ul>"},{"location":"archive/installation/strategy.zh-qc/#translation-quality-score-9710","title":"Translation Quality Score: 9.7/10","text":"<p>Minor deductions only for: - Very slight structural variation (-0.3)</p>"},{"location":"archive/installation/strategy.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/installation/strategy.zh-qc/#status-approved","title":"Status: APPROVED \u2705","text":"<p>This translation meets high quality standards for technical documentation. Despite its brevity, it demonstrates: - Accurate technical terminology - Complete content preservation - Proper formatting maintenance - Clear Chinese expression</p> <p>No revisions required - This translation is suitable for publication.</p>"},{"location":"archive/kepler_model_server/api/","title":"Kepler Model Server API","text":""},{"location":"archive/kepler_model_server/api/#getting-powers-from-estimator","title":"Getting Powers from Estimator","text":"<p>module: estimator (src/estimate/estimator.py)</p> <pre><code>/tmp/estimator.socket\n</code></pre>"},{"location":"archive/kepler_model_server/api/#parameters-of-powerrequest","title":"Parameters of PowerRequest","text":"key value description metrics list of string list of available input features (measured metrics) output_type either of the following values: AbsPower (for node-level power model), DynPower (for container-level power model) the requested model type trainer_name (optional) string filter model with trainer name filter (optional) string expression in the form attribute1:threshold1; attribute2:threshold2"},{"location":"archive/kepler_model_server/api/#getting-power-models-from-model-server","title":"Getting Power Models from Model Server","text":"<p>module: server (src/server/model_server.py)</p> <pre><code>:8100/model\nPOST\n</code></pre>"},{"location":"archive/kepler_model_server/api/#parameters-of-modelrequest","title":"Parameters of ModelRequest","text":"key value description metrics list of string list of available input features (measured metrics) output_type either of the following values: AbsPower (for node-level power model), DynPower (for container-level power model) the requested model type weight boolean return model weights in json format if true. Otherwise, return model in zip file format. trainer_name (optional) string filter model with trainer name. node_type (optional) string filter model with node type. filter (optional) string expression in the form attribute1:threshold1; attribute2:threshold2."},{"location":"archive/kepler_model_server/api/#offline-trainer","title":"Offline Trainer","text":"<p>module: offline trainer (src/train/offline_trainer.py)</p> <pre><code>:8102/train\nPOST\n</code></pre>"},{"location":"archive/kepler_model_server/api/#parameters-of-trainrequest","title":"Parameters of TrainRequest","text":"key value description name string pipeline/model name energy_source valid key in PowerSourceMap target energy source to train for trainer TrainAttribute attributes for training prome_response json prom response with workload for power model training"},{"location":"archive/kepler_model_server/api/#trainattribute","title":"TrainAttribute","text":"key value description abs_trainers list of available trainer class names trainer classes in the pipeline to train for absolute power dyn_trainers list of available trainer class names trainer classes in the pipeline to train for dynamic power isolator valid isolator class name isolator class of the pipeline to isolate the target data to train for dynamic power isolator_args dict mapping between isolator-specific argument name and value"},{"location":"archive/kepler_model_server/api/#posting-model-weights-wip","title":"Posting Model Weights [WIP]","text":"<p>module: server (src/server/model_server.py)</p> <pre><code>/metrics\nGET\n</code></pre>"},{"location":"archive/kepler_model_server/api/#online-trainer-wip","title":"Online Trainer [WIP]","text":"<p>module: online trainer (src/train/online_trainer.py) running as a sidecar to server</p> <pre><code>periodically query prometheus metric server on SAMPLING INTERVAL\n</code></pre>"},{"location":"archive/kepler_model_server/api/#profiler-wip","title":"Profiler [WIP]","text":"<p>module: profiler (src/profile/profiler.py)</p>"},{"location":"archive/kepler_model_server/architecture/","title":"Kepler Model Server Architecture","text":"<p>Kepler model server is a supplementary project of Kepler that facilitates power model training and serving. This provides an ecosystem of Kepler to collect metrics from one environment, train a power model with pipeline framework, and serve back to another environment that a power meter (energy measurement) is not available.</p> <p></p> <p>Pipeline Input: Prometheus query results during the training workload war running.</p> <p>Pipeline Output: A directory that contains archived absolute and dynamic power models trained by each available feature group which is labeled by each available energy source.</p> <pre><code>[Pipeline name]/[Energy source]/[Model type]/[Feature group]/[Archived model]\n</code></pre> <ul> <li>Pipeline name a unique name for different composition of modeling approach such as different extractor, isolator, set of trainers, supported feature groups, and supported energy sources.</li> <li>Energy/Power source a power meter source of power label.</li> <li>Model type a type of model with or without background isolation.</li> <li>Feature group a utilization metric source of model input.</li> <li>Archived model a folder and zip file in the format<code>[trainer name]_[node type]</code> where trainer is a name of training solution such as <code>GradientBoostingRegressor</code> and <code>node_type</code> is a categorized profile of the server used for training. The folder contains</li> <li>metadata.json</li> <li>model files</li> <li>weight.json (model weight for local estimator supported models such as linear regression (LR))</li> <li>feature engineering (fe) files</li> </ul> <p>Check out the project on GitHub \u27a1\ufe0f Kepler Model Server.</p>"},{"location":"archive/kepler_model_server/get_started/","title":"Get Started with Kepler Model Server","text":"<p>Model server project facilitates tools for power model training, exporting, serving, and utilizing based on Kepler-exporting energy-related metrics. Check the following steps to get started with the project.</p>"},{"location":"archive/kepler_model_server/get_started/#step-1-learn-about-pipeline","title":"Step 1: Learn about Pipeline","text":"<p>The first step is to understand about power model building concept from training pipeline.</p>"},{"location":"archive/kepler_model_server/get_started/#step-2-learn-how-to-use-the-power-model","title":"Step 2: Learn how to use the power model","text":""},{"location":"archive/kepler_model_server/get_started/#select-estimator","title":"Select estimator","text":"<p>There are two ways to use the models regarding the model format. If the model format can be processed directly inside the Kepler exporter such as Linear Regression weight in <code>json</code> format. There is no extra cofiguration.</p> <p>However, if the model is in the general format archived in <code>zip</code>, It is needed to enable the estimator sidecar via environment variable or Kepler config map.</p> <pre><code>export NODE_COMPONENTS_ESTIMATOR=true\n</code></pre> <p>or</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        NODE_COMPONENTS_ESTIMATOR=true\n</code></pre>"},{"location":"archive/kepler_model_server/get_started/#select-power-model","title":"Select power model","text":"<p>There are two ways to obtain power model: static and dynamic.</p>"},{"location":"archive/kepler_model_server/get_started/#static-configuration","title":"Static configuration","text":"<p>A static way is to download the model directly from <code>INIT_URL</code>. It can be set via environment variable directly or via <code>kepler-cfm</code> Kepler config map. For example,</p> <pre><code>export NODE_COMPONENTS_INIT_URL= &lt; Static URL &gt;\n</code></pre> <p>or</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        NODE_COMPONENTS_INIT_URL= &lt; Static URL &gt;\n</code></pre> <p>The static URL from provided pipeline v0.7 are listed here.</p>"},{"location":"archive/kepler_model_server/get_started/#dynamic-via-server-api","title":"Dynamic via server API","text":"<p>A dynamic way is to enable the model server to auto select the power model which has the best accuracy and supported the running cluster environment. Similarly, It can be set via the environment variable or set it via Kepler config map.</p> <pre><code>export MODEL_SERVER_ENABLE=true\n</code></pre> <p>or</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        MODEL_SERVER_ENABLE: \"true\"\n</code></pre> <p>See more in Kepler Power Estimation Deployment</p>"},{"location":"archive/kepler_model_server/get_started/#step-3-learn-how-to-train-the-power-model-and-give-back-to-the-community","title":"Step 3: Learn how to train the power model and give back to the community","text":"<p>As you may be aware, it's essential to tailor power models to specific machine types rather than relying on a single generic model. We eagerly welcome contributions from the community to help build alternative power models on your machine through the model server project.</p> <p>For detailed guidance on model training, please refer to our model training guidelines here.</p>"},{"location":"archive/kepler_model_server/node_profile/","title":"Node Profile","text":"<p>We form a group of machines (nodes) called node type based on processor model, the number of cores, the number of chips, memory size, and maximum CPU frequency. When collecting the data from the bare metal machine, these attributes are automatically extracted and kept as a machine spec in json format.</p> <p>A power model will be built per node type. For each group of node type, we make a profile composing of background power when the resource usage is almost constant without user workload, minimum, maximum power for each power components (e.g., core, uncore, dram, package, platform), and normalization scaler (i.e., MinMaxScaler), standardization scaler (i.e., StandardScaler) for each feature group.</p> <p>Node specification is composed of:</p> <ul> <li>processor - CPU processor model name</li> <li>cores - Number of CPU cores</li> <li>chips - Number of chips</li> <li>memory_gb - Memory size in GB</li> <li>cpu_freq_mhz - Maximum CPU frequency in MHz</li> </ul>"},{"location":"archive/kepler_model_server/pipeline/","title":"Training Pipeline","text":"<p>Model server can provide various power models for different context and learning methods. Training pipeline is an abstract of power model training that applies a set of learning methods to a different combination of energy sources, power isolation methods, available energy-related metrics.</p>"},{"location":"archive/kepler_model_server/pipeline/#pipeline","title":"Pipeline","text":"<p><code>pipeline</code> is composed of three steps, <code>extract</code>, <code>isolate</code>, and <code>train</code>, as shown below. Kepler exports energy-related metrics as Prometheus counter, which provides accumulated number over time.</p> <p>The <code>extract</code> step is to convert the counter metrics to gauge metrics, similarly to the Prometheus <code>rate()</code> function, giving per-second values. The extract step also clean up the data separately for each <code>feature group</code>.</p> <p>The power consumption retrieved from the Prometheus query is the measured power which is composed of the power portion which is varied by the workload called dynamic power and the power portion which is consumed even if in the idling state called idle power.</p> <p>The <code>isolate</code> step is to calculate the idle power and isolate the dynamic power consumption of each <code>energy source</code>.</p> <p>The <code>train</code> step is to apply each <code>trainer</code> to create multiple choices of power models based on the preprocessed data.</p> <p>We have a roadmap to apply a pipeline to build power models separately for each node/machine type. Find more in Node Type section.</p> <p></p> <ul> <li>Learn more about <code>energy source</code> from Energy source section.</li> <li>Learn more about <code>feature group</code> from Feature groups section.</li> <li>Learn more about the <code>isolate</code> step and corresponding concepts of <code>AbsPower</code>, and <code>DynPower</code> power models from Power isolation section.</li> <li>Check available <code>trainer</code> in Trainer section.</li> </ul>"},{"location":"archive/kepler_model_server/pipeline/#energy-source","title":"Energy source","text":"<p><code>energy source</code> or <code>source</code> refers to the source (power meter) that provides an energy number. Each source provides one or more <code>energy components</code>. Currently supported source are shown as below.</p> Energy/power source Energy/power components rapl package, core, uncore, dram acpi platform"},{"location":"archive/kepler_model_server/pipeline/#feature-group","title":"Feature group","text":"<p><code>feature group</code> is an abstraction of the available features based on the infrastructure context since some environments might not expose some metrics. For example, on the virtual machine in private cloud environment, hardware counter metrics are typically not available. Therefore, the models are trained for each defined resource utilization metric group as below.</p> Group Name Features Kepler Metric Source(s) CounterOnly COUNTER_FEATURES Hardware Counter BPFOnly BPF_FEATURES BPF IRQOnly IRQ_FEATURES IRQ AcceleratorOnly ACCELERATOR_FEATURES Accelerator CounterIRQCombined COUNTER_FEATURES, IRQ_FEATURES BPF and Hardware Counter Basic COUNTER_FEATURES, BPF_FEATURES All except IRQ and node information WorkloadOnly COUNTER_FEATURES, BPF_FEATURES, IRQ_FEATURES, ACCELERATOR_FEATURES All except node information Full WORKLOAD_FEATURES, SYSTEM_FEATURES All <p>Node information refers to value from kepler_node_info metric.</p>"},{"location":"archive/kepler_model_server/pipeline/#power-isolation","title":"Power isolation","text":"<p>The power consumption retrieved from the Prometheus query is the absolute power, which is the sum of idle and dynamic power (where idle represents the system at rest, dynamic is the incremental power with resource utilization, and absolute is idle + dynamic). Additionally, this power is also the total power consumption of all process, including the users' workload, background and OS processes.</p> <p>The <code>isolate</code> step applies a mechanism to separate idle power from absolute power, resulting in dynamic power  It also covers an implementation to separate the dynamic power consumed by background and OS processes (referred to as <code>system_processes</code>).</p> <p>It's important to note that both the idle and dynamic <code>system_processes</code> power are higher than zero, even when the metric utilization of the users' workload is zero.</p> <p>The <code>isolate</code> step applies a mechanism to separate idle power from absolute power, resulting in dynamic power. It also covers an implementation to separate the dynamic power consumed by background and OS processes (referred to as <code>system_processes</code>).</p> <p>It's important to note that both the idle and dynamic <code>system_processes</code> power are higher than zero, even when the metric utilization of the users' workload is zero.</p> <p>There are two common available <code>isolators</code>: ProfileIsolator and MinIdleIsolator.</p> <p>We refer to models trained using the isolate step as <code>DynPower</code> models. Meanwhile, models trained without the isolate step are called <code>AbsPower</code> models. Currently, the <code>DynPower</code> model does not include idle power information, but we plan to incorporate it in the future.</p> <p>On the other hand, MinIdleIsolator identifies the minimum power consumption among all samples in the training data, assuming that this minimum power consumption represents both the idle power and <code>system_processes</code> power consumption.</p> <p>While we should also remove the minimal resource utilization from the data used to train the model, this isolation mechanism includes the resource utilization by <code>system_processes</code> in the training data. However, we plan to remove it in the future.</p> <p>ProfileIsolator relies on collecting data (e.g., power and resource utilization) for a specific period without running any user workload (referred to as profile data). This isolation mechanism also eliminates the resource utilization of <code>system_processes</code> from the data used to train the model.</p> <p>On the other hand, MinIdleIsolator identifies the minimum power consumption among all samples in the training data, assuming that this minimum power consumption represents both the idle power and <code>system_processes</code> power consumption.</p> <p>While we should also remove the minimal resource utilization from the data used to train the model, this isolation mechanism includes the resource utilization by <code>system_processes</code> in the training data. However, we plan to remove it in the future.</p> <p>If the <code>profile data</code> that matches a given <code>node_type</code> exist, the pipeline will use the ProfileIsolator to pre-process the training data. Otherwise, the the pipeline will applied another isolation mechanism, such as the MinIdleIsolator.</p> <p>(check how profiles are generated here)</p>"},{"location":"archive/kepler_model_server/pipeline/#discussion","title":"Discussion","text":"<p>The choice between using the <code>DynPower</code> or <code>AbsPower</code> model is still under investigation. In some cases, DynPower exhibits better accuracy than <code>AbsPower</code>. However, we currently utilize the <code>AbsPower</code> model to estimate node power for Platform, CPU and DRAM components, as the <code>DynPower</code> model lacks idle power information.</p> <p>It's worth mentioning that exposing idle power on a VM in a public cloud environment is not possible. This is because the host's idle power must be distributed among all running VMs on the host, and it's impossible to determine the number of VMs running on the host in a public cloud environment.</p> <p>Therefore, we can only expose idle power if there is only one VM running on the node (for a very specific scenario), or if the power model is being used in Bare Metal environments.</p>"},{"location":"archive/kepler_model_server/pipeline/#trainer","title":"Trainer","text":"<p><code>trainer</code> is an abstraction to define the learning method applies to each feature group with each given power labeling source.</p> <p>Available trainer (v0.6):</p> <ul> <li>PolynomialRegressionTrainer</li> <li>GradientBoostingRegressorTrainer</li> <li>SGDRegressorTrainer</li> <li>KNeighborsRegressorTrainer</li> <li>LinearRegressionTrainer</li> <li>SVRRegressorTrainer</li> </ul>"},{"location":"archive/kepler_model_server/pipeline/#node-type","title":"Node type","text":"<p>Kepler forms multiple groups of machines (nodes) based on its benchmark performance and trains a model separately for each group. The identified group is exported as <code>node type</code>.</p>"},{"location":"archive/kepler_model_server/power_estimation/","title":"Kepler Power Estimation Deployment","text":"<p>In Kepler, we also provide a power estimation solution from the resource usages in the system that there is no power measuring tool installed or supported. There are two alternatives of estimators.</p>"},{"location":"archive/kepler_model_server/power_estimation/#estimators","title":"Estimators","text":"<ul> <li> <p>Local Linear Regression Estimator: This estimator estimates power using the trained weights multiplied by normalized value of usage metrics (Linear Regression Model).</p> </li> <li> <p>General Estimator Sidecar: This estimator transforms the usage metrics and applies with the trained models which can be any regression models from scikit-learn library or any neuron networks from Keras (TensorFlow). To use this estimator, the Kepler estimator needs to be enabled.</p> </li> </ul> <p>On top of that, the trained models as well as weights can be updated periodically with online training routine by connecting the Kepler model server API.</p>"},{"location":"archive/kepler_model_server/power_estimation/#deployment-scenarios","title":"Deployment Scenarios","text":""},{"location":"archive/kepler_model_server/power_estimation/#minimum-deployment","title":"Minimum Deployment","text":"<p>The minimum deployment is to use local linear regression estimator in Kepler main container with only offline-trained model weights.</p> <p></p>"},{"location":"archive/kepler_model_server/power_estimation/#deployment-with-general-estimator-sidecar","title":"Deployment with General Estimator Sidecar","text":"<p>To enable general estimator for power inference, the estimator sidecar can be deployed as shown in the following figure. The connection between two containers is a unix domain socket which is lightweight and fast. Unlike the local estimator, the general estimator sidecar is instrumented with several inference-supportive libraries and dependencies. This additional overhead must be tradeoff to an increasing estimation accuracy expected from flexible choices of models.</p> <p></p>"},{"location":"archive/kepler_model_server/power_estimation/#minimum-deployment-connecting-to-kepler-model-server","title":"Minimum deployment connecting to Kepler Model Server","text":"<p>To get the updated weights which is expected to provide better estimation accuracy, Kepler may connect to remote Kepler Model Server that performs online training using data from the system with the power measuring tool as below.</p> <p></p>"},{"location":"archive/kepler_model_server/power_estimation/#full-deployment","title":"Full deployment","text":"<p>The following figure shows the deployment that Kepler General Estimator is enabled and it is also connecting to remote Kepler Model Server. The Kepler General Estimator sidecar can update the model from the Kepler Model Server on the fly and expect the most accurate model.</p> <p></p>"},{"location":"archive/kepler_model_server/power_estimation/#provided-power-models-on-kepler-model-db","title":"Provided power models on Kepler Model DB","text":"version power data source pipeline available energy sources error report 0.6 nx12 std_v0.6 rapl,acpi Link 0.7 SPECpower specpower acpi Link 0.7 Training Playbook ec2 intel_rapl Link"},{"location":"archive/usage/deep_dive/","title":"Kepler Deep Dive","text":""},{"location":"archive/usage/deep_dive/#kepler-components-and-what-they-do","title":"Kepler components and what they do","text":"<p>The Kepler stack comprises Kepler and Kepler Model Server</p>"},{"location":"archive/usage/deep_dive/#kepler","title":"Kepler","text":"<p>Kepler, Kubernetes-based Efficient Power Level Exporter, offers a way to estimate power consumption at the process, container, and Kubernetes pod levels.</p> <p>How Kepler collects data?</p> <p>Kepler uses the following to collects power data:</p>"},{"location":"archive/usage/deep_dive/#ebpf-hardware-counters","title":"EBPF, Hardware Counters","text":"<p>Kepler can utilize a BPF program integrated into the kernel's pathway to extract process-related resource utilization metrics or use metrics from Hardware Counters. The type of metrics used to build the model can differ based on the system's environment. For example, it might use hardware counters, or metrics from tools like eBPF, depending on what is available in the system that will use the model.</p>"},{"location":"archive/usage/deep_dive/#real-time-component-power-meters","title":"Real-time Component Power Meters","text":"<p>Kepler also collects real-time power consumption metrics from the node components using various APIs such as,</p> <ul> <li>Intel Running Average Power Limit (RAPL) for CPU and DRAM power</li> <li>NVIDIA Management Library (NVML) for GPU power</li> </ul>"},{"location":"archive/usage/deep_dive/#platform-power-meters","title":"Platform Power Meters","text":"<p>For platform power, i.e, the entire node power Kepler uses:</p> <ul> <li>Advanced Configuration and Power Interface (ACPI)</li> <li>Redfish/Intelligent Power Management Interface (IPMI)</li> <li>Regression-based Trained Power Models when no real-time power metrics are available in the system.</li> </ul>"},{"location":"archive/usage/deep_dive/#kepler-model-server","title":"Kepler Model Server","text":"<p>The Model Server is used to train power models, and it can be optionally deployed alongside Kepler to help Kepler select the most appropriate power model for a given environment. For example, considering the CPU model, available metrics and the required model accuracy. In the future, Kepler will also be able to select the power model with the same logic that the Model Server has.</p> <p>The Model Server trains its models using Prometheus metrics from a specific bare-metal node. It records how much energy the node consumed and the resource utilization of containers and system processes (OS and other background processes). The container metrics are obtained from running various small tests that stress different resources (CPU, memory, cache, etc.), like using a tool called <code>stress-ng</code>. When creating the power model, the Model Server uses a regression algorithm. It keeps training the model until it reaches an acceptable level of accuracy.</p> <p>Once trained, the Model Server makes these models accessible through a github repository, where any Kepler deployment can download the model from. Kepler then uses these models to calculate how much power a node (VM) consumes based on the way its resources are being used. The type of metrics used to build the model can differ based on the system's environment. For example, it might use hardware counters, or metrics from tools like eBPF, depending on what is available in the system that will use the model.</p> <p></p> <p>For details on the architecture follow the documentation on Kepler Model Server.</p>"},{"location":"archive/usage/deep_dive/#collecting-system-power-consumption-vms-versus-bms","title":"Collecting System Power Consumption \u2013 VMs versus BMs","text":"<p>Depending on the environment that Kepler was deployed in, the system power consumption metrics collection will vary. For example, consider the figure below, Kepler can be deployed either through BMs or VMs environments.</p> <p></p>"},{"location":"archive/usage/deep_dive/#direct-real-time-system-power-metrics-bare-metals","title":"Direct Real-Time System Power Metrics (Bare Metals)","text":"<p>In bare-metal environments that allow the direct collection of real-time system power metrics, Kepler can split the power consumption of a given system resource using the Ratio Power model. The APIs that expose the real-time power metrics export the absolute power, which is the sum of the dynamic and idle power. To be more specific, the dynamic power is directly related to the resource utilization and the idle power is the constant power that does not vary regardless if the system is at rest or with load. This concept is important because the idle and dynamic power are split differently across all processes.</p>"},{"location":"archive/usage/deep_dive/#estimated-system-power-metrics-virtual-machines","title":"Estimated System Power Metrics (Virtual Machines)","text":"<p>In VM environments on public clouds, there is currently no direct way to measure the power that a VM consumes. Therefore, we need to estimate the power using a trained power model, which has some limitations that impact the model accuracy.</p> <p>Kepler can estimate the dynamic power consumption of VMs using trained power models. Then, after estimating each VM's power consumption, Kepler applies the Ratio Power Model to estimate the processes' power consumption. However, since VMs usually do not provide hardware counters, Kepler uses eBPF metrics instead of hardware counters to calculate the ratios. It is important to highlight that trained power models used for VMs on a public cloud cannot split the idle power of a resource because we cannot know how many other VMs are running in the host. We provide more details in the limitation section in this blog. Therefore, Kepler does not expose the idle power of a container running on top of a VM.</p> <p>Power models are trained by performing regression analysis (like Linear or Machine Learning (ML)-based regression) on data collected during benchmark tests. This data includes both resource utilization and power consumption on a Bare-metal node, forming the foundation for the power model estimation.</p>"},{"location":"archive/usage/deep_dive/#passthrough-estimated-vm-power-metrics","title":"Passthrough Estimated VM Power Metrics","text":"<p>Kepler is first deployed in the bare-metal node (i.e. the cloud control plane), and it continuously measures the dynamic and idle power that each VM consumes using real-time power metrics from the BM. Then, Kepler exposes this power data with the VM. This information can be made available to the VM through \u201cHypervisor Hypercalls\u201d or by saving the numbers in special files that the VM can access (e.g. cGroup file mounted in the VM). Then, by using the VM power consumption, another Kepler instance within the VM can apply the Ratio Power Model to estimate the power used by processes residing in the VMs.</p> <p>Note</p> <p>The passthrough approach is still in exploratory and currently not available in Kepler.</p>"},{"location":"archive/usage/deep_dive/#ratio-power-model-explained","title":"Ratio Power Model Explained","text":"<p>As explained earlier the dynamic power is directly related to the resource utilization and the idle power is the constant power that does not vary regardless if the system is at rest or with load. This concept is important because the idle and dynamic power are split differently across all processes. Now we can describe the Ratio Power model, which divides the dynamic power across all processes.</p> <p>The Ratio Power model calculates the ratio of a process's resource utilization to the entire system's resource utilization and then multiplying this ratio by the dynamic power consumption of a resource. This allows us to accurately estimate power usage based on actual resource utilization, ensuring that if, for instance, a program utilizes 10% of the CPU, it consumes 10% of the total CPU power.</p> <p>The idle power estimation follows the GreenHouse Gas (GHG) protocol guideline, which defines that the constant host idle power should be split among processes/containers based on their size (relative to the total size of other containers running on the host). Additionally, it's important to note that different resource utilizations are estimated differently in Kepler. We utilize hardware counters to assess resource utilization in bare-metal environments, using CPU instructions to estimate CPU utilization, collecting cache misses for memory utilization, and assessing Streaming Multiprocessor (SM) utilization for GPUs utilization.</p>"},{"location":"archive/usage/deep_dive/#how-is-the-power-consumption-attribution-done","title":"How is the power consumption attribution done?","text":"<p>Now that we have explained how Kepler gathers data and train model and the Ratio Power Model let's dig into the power consumption attribution.</p> <p>Once all the data that is related to energy consumption and resource utilization are collected, Kepler can calculate the energy consumed by each process. This is done by dividing the power used by a given resource based on the ratio of the process and system resource utilization. We will detail this model later on in this blog. Then, with the power consumption of the processes, Kepler aggregates the power into containers and Kubernetes Pods levels. The data collected and estimated for the container are then stored by Prometheus.</p> <p>Kepler finds which container a process belongs to by using the Process ID (PID) information collected in the BPF program, and then using the container ID, we can correlate it to the pods' name. More specifically, the container ID comes from <code>/proc/PID/cgroup</code>, and Kepler uses the Kubernetes APIServer to keep an updated list of pods that are created and removed from the node. The Process IDs that do not correlate with a Kubernetes container are classified as <code>system processes</code> (including PID 0).</p> <p>In the future, processes that run VMs will be associated with VM IDs so that Kepler can also export VM metrics.</p>"},{"location":"archive/usage/deep_dive/#pre-trained-power-model-limitations","title":"Pre-trained Power Model Limitations","text":"<p>It's important to note that pre-trained power models have their limitations when compared to power models using real-time power metrics.</p> <ul> <li> <p>System-Specific Models: Pre-trained power models are system-specific and vary based on CPU models and architectures. While not perfect, generic models can offer insights into application power consumption, aiding energy-efficient decisions.</p> </li> <li> <p>Overestimation in VM Power Consumption: Using bare-metal power models for single VMs can lead to overestimation as these models might not reflect the actual power usage when multiple VMs share a node. The power curve might show reduced power consumption when more CPUs are in use, impacting accurate estimation.</p> </li> <li> <p>Challenges with Idle Power Allocation: Dividing idle power among VMs based on their size relative to others on the host is challenging in public cloud environments where the number of concurrently running VMs on a host is not determinable. Estimating idle power for each VM accurately becomes complex due to this limitation.</p> </li> <li> <p>Dependency on Hypervisor Reporting: Pre-trained power models for VMs rely on accurate reporting of CPU register values by the hypervisor. Overprovisioning of resources in certain public cloud VMs can impact the accuracy of resource utilization metrics, affecting the reliability of these power models.</p> </li> </ul> <p>Note</p> <p>For more detailed explanation on the limitations of pre-trained power model read the blog by Kepler's maintainers.</p> <ul> <li> Explain the models. How the models are different and is there a right use case/scenario for when to apply a particular model over another?</li> <li> AbsComponentModelWeight</li> <li> AbsComponentPower</li> <li> AbsModelWeight</li> <li> AbsPower</li> <li> DynComponentModelWeight</li> <li> DynComponentPower</li> <li> XGBoost</li> </ul>"},{"location":"archive/usage/general_config/","title":"Configuration","text":"<p>This is a list of configurable values of Kepler System. The configuration can be also applied by defining the following CR spec if Kepler Operator is installed.</p> Point of Configuration Spec Description Default Kepler CR (single item: default) Kepler DaemonSet Deployment daemon.exporter.image Kepler main image quay.io/sustainable_computing_io/kepler:latest Kepler DaemonSet Deployment daemon.exporter.port Metric exporter port 9102 Kepler DaemonSet Deployment daemon.estimator-sidecar.enabled Kepler Estimator Sidecar patch false Kepler DaemonSet Deployment daemon.estimator-sidecar.image Kepler estimator sidecar image - Kepler DaemonSet Deployment daemon.estimator-sidecar.mnt-path Mount path between main container and the sidecar for unix domain socket /tmp Kepler DaemonSet Environment (METRIC_PATH) daemon.exporter.path Path to export metrics /metrics Kepler DaemonSet Environment (MODEL_SERVER_ENABLE) model-server.enabled Kepler Model Server Pod connection false model-server.enabled Model Server Pod Pod Environment (MODEL_SERVER_PORT) model-server.port Model serving port of model server 8100 Model Server Pod Pod Environment (PROM_SERVER) model-server.prom Endpoint to Prometheus metric server <code>http://prometheus-k8s.monitoring.svc.cluster.local:9090</code> Model Server Pod Pod Environment (MODEL_PATH) model-server.model-path Path to keep models models Kepler DaemonSet Environment (MODEL_SERVER_ENDPOINT) daemon.model-server Endpoint to server container of model server <code>http://kepler-model-server.monitoring.cluster.local:[model-server.port]/model</code> Model Server Pod Deployment model-server.trainer Model online trainer patch false model-server.trainer Model Server Pod Environment (PROM_QUERY_INTERVAL) model-server.prom_interval Interval to execute training pipelines in seconds 20 Model Server Pod Environment (PROM_QUERY_STEP) model-server.prom-step Step of query data point in training pipelines in seconds 3 Model Server Pod Environment (PROM_HEADERS) model-server.prom-header For specify required header (such as authentication) - Model Server Pod Environment (PROM_SSL_DISABLE) model-server.prom-ssl Disable ssl in Prometheus connection true Model Server Pod Environment (INITIAL_MODELS_LOC) model-server.init-loc Root URL of offline models to use as initial models <code>https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models</code> Model Server Pod Environment (INITIAL_MODEL_NAMES.[<code>MODEL_TYPE</code>]) model-server.[<code>MODEL_TYPE</code>] Name of default pipeline for each model type - CollectMetric CR (single item: default) Kepler DaemonSet Environment (COUNTER_METRICS) counter List of performance metrics to enable from counter source * (enable all available metrics from counter source) Kepler DaemonSet Environment (BPF_METRICS) bpf List of performance metrics to enable from bpf (aka. eBPF) source * (enable all available metrics from bpf source) Kepler DaemonSet Environment (GPU_METRICS) gpu List of performance metrics to enable from gpu source * (enable all available metrics from gpu source) ExportMetric CR (single item: default) Kepler DaemonSet Environment (PERF_METRICS) perf List of performance metrics to export * (enable all collected performance metrics) Kepler DaemonSet Environment (EXPORT_NODE_TOTAL_POWER) node_total_power Toggle whether to export node total power true Kepler DaemonSet Environment (EXPORT_NODE_COMPONENT_POWERS) node_component_powers Toggle whether to export node powers by components true Kepler DaemonSet Environment (EXPORT_POD_TOTAL_POWER) pod_total_power Toggle whether to export pod total power true Kepler DaemonSet Environment (EXPORT_POD_COMPONENT_POWERS) pod_component_powers Toggle whether to export pod powers by components true EstimatorConfig CR (multiple items: node-total-power, node-component-powers, pod-total-power, pod-component-powers) Kepler DaemonSet Environment (MODEL_CONFIG.[<code>MODEL_ITEM</code>]_ESTIMATOR) use-sidecar Toggle whether to use estimator sidecar for power estimation false Kepler DaemonSet Environment (MODEL_CONFIG.[<code>MODEL_ITEM</code>]_MODEL) fixed-model Specify model name (auto-selected) Kepler DaemonSet Environment (MODEL_CONFIG.[<code>MODEL_ITEM</code>]_FILTERS) filters Specify model filter conditions in string (auto-selected) Kepler DaemonSet Environment (MODEL_CONFIG.[<code>MODEL_ITEM</code>]_INIT_URL) init-url URL to initial model location - RatioConfig CR (single items: default) Kepler DaemonSet Environment (CORE_USAGE_METRIC) core_metric Specify metric for compute core (mostly cpu) component of pod power by ratio modeling cpu_instr Kepler DaemonSet Environment (DRAM_USAGE_METRIC) dram_metric Specify metric for computing dram component of pod power by ratio modeling cache_miss Kepler DaemonSet Environment (UNCORE_USAGE_METRIC) uncore_metric Specify metric for computing uncore component of pod power by ratio modeling (evenly divided) Kepler DaemonSet Environment (GENERAL_USAGE_METRIC) general_metric Specify metric for computing uncategorized component (pkg-core-uncore) of pod power by ratio modeling cpu_instr Kepler DaemonSet Environment (GPU_USAGE_METRIC) core_metric Specify metric for computing gpu component of pod power by ratio modeling - <p>Remarks:</p> <ul> <li>[<code>MODEL_ITEM</code>] can be either of the following values corresponding to item names: <code>NODE_TOTAL</code>, <code>NODE_COMPONENT</code>, <code>POD_TOTAL</code>, <code>POD_COMPONENTS</code>.</li> <li>[<code>MODEL_TYPE</code>] is a concatenation of [<code>MODEL_ITEM</code>] and [<code>OUTPUT_FORMAT</code>] which can be either <code>POWER</code> for archived model or <code>MODEL_WEIGHT</code> for weights in json.</li> </ul> <p>For example:</p> <ul> <li><code>NODE_TOTAL_POWER</code>: archived model to estimate node total power used by estimator sidecar</li> <li><code>POD_COMPONENTS_MODEL_WEIGHT</code>: model weight to estimate pod component powers used by linear regressor embedded in Kepler main component.</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/","title":"Translation Quality Check Report: general_config.zh.md","text":""},{"location":"archive/usage/general_config.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>The Chinese translation of <code>general_config.md</code> is excellent with outstanding technical accuracy and complete content preservation in a complex configuration table format.</p>"},{"location":"archive/usage/general_config.zh-qc/#content-completeness","title":"Content Completeness","text":"<ul> <li>Original: 59 lines with comprehensive configuration table</li> <li>Chinese: 59 lines - 100% content retention</li> <li>Complex Table: 49 configuration entries across 6 major CR categories</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/#differences-found","title":"Differences Found","text":""},{"location":"archive/usage/general_config.zh-qc/#minor-language-improvements","title":"Minor Language Improvements","text":"<ol> <li>Table Headers:</li> <li>Original: \"Point of Configuration\"</li> <li>Chinese: \"\u914d\u7f6e\u70b9\"</li> <li>Reverse: \"Configuration Point\"</li> <li> <p>Impact: None - Clear and concise translation</p> </li> <li> <p>Cross-Reference Links:</p> </li> <li>Original: Links to <code>./../kepler_model_server/get_started.md</code></li> <li>Chinese: Updated to <code>./../kepler_model_server/get_started.zh.md</code></li> <li> <p>Impact: Positive - Correctly points to Chinese documentation</p> </li> <li> <p>Technical Phrasing:</p> </li> <li>Original: \"aka. eBPF\"</li> <li>Chinese: \"\u5373 eBPF\"</li> <li>Reverse: \"i.e., eBPF\"</li> <li>Impact: None - Appropriate translation of abbreviation</li> </ol>"},{"location":"archive/usage/general_config.zh-qc/#strengths-outstanding-quality","title":"Strengths - Outstanding Quality","text":""},{"location":"archive/usage/general_config.zh-qc/#perfect-technical-preservation","title":"\u2705 Perfect Technical Preservation","text":"<ul> <li>Environment Variables: All 25+ env vars preserved exactly (METRIC_PATH, MODEL_SERVER_ENABLE, etc.)</li> <li>CR Names: All Custom Resource names maintained (Kepler CR, CollectMetric CR, EstimatorConfig CR)</li> <li>Configuration Keys: All dot notation preserved (daemon.exporter.image, model-server.port)</li> <li>URLs and Paths: All endpoints, file paths, and URLs intact</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/#exceptional-table-structure","title":"\u2705 Exceptional Table Structure","text":"<ul> <li>Complex Formatting: 4-column table with nested categories perfectly preserved</li> <li>Bold Headers: All section headers (Kepler CR, model-server.enabled) maintained</li> <li>Variable Placeholders: [<code>MODEL_ITEM</code>], [<code>MODEL_TYPE</code>], [<code>OUTPUT_FORMAT</code>] preserved exactly</li> <li>Default Values: All default configurations accurately translated</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/#advanced-configuration-expertise","title":"\u2705 Advanced Configuration Expertise","text":"<ul> <li>Kubernetes Concepts: DaemonSet, Pod, sidecar, environment variables properly translated</li> <li>Monitoring Terms: Prometheus endpoints, metric exporters, training pipelines accurately handled</li> <li>Model Server: Power estimation, model weights, linear regressor concepts clearly explained</li> <li>Network Configuration: Unix domain sockets, SSL, authentication headers correctly translated</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/#user-experience-excellence","title":"\u2705 User Experience Excellence","text":"<ul> <li>Toggle Descriptions: Clear explanations for boolean configuration options</li> <li>Technical Examples: Model type examples with precise explanations</li> <li>Contextual Help: Links updated to point to Chinese documentation versions</li> <li>Operational Clarity: Clear distinction between deployment vs. environment configurations</li> </ul>"},{"location":"archive/usage/general_config.zh-qc/#complex-technical-features-handled","title":"Complex Technical Features Handled","text":"Configuration Category Items Translation Quality Kepler CR Deployment 6 items \u2705 Excellent Model Server Environment 8 items \u2705 Excellent Metric Collection 3 items \u2705 Excellent Export Configuration 4 items \u2705 Excellent Estimator Configuration 4 items \u2705 Excellent Ratio Modeling 5 items \u2705 Excellent"},{"location":"archive/usage/general_config.zh-qc/#translation-quality-score-9910","title":"Translation Quality Score: 9.9/10","text":"<p>Outstanding performance in: - Complete technical accuracy across 49 configuration parameters - Perfect table structure preservation in complex nested format - Excellent documentation linking updated for Chinese users - Clear operational guidance for Kubernetes administrators</p>"},{"location":"archive/usage/general_config.zh-qc/#recommendations","title":"Recommendations","text":""},{"location":"archive/usage/general_config.zh-qc/#status-approved-exemplary","title":"Status: APPROVED - EXEMPLARY \u2705","text":"<p>This translation represents exceptional quality for complex technical configuration documentation. The translator demonstrates:</p> <ul> <li>Mastery of Kubernetes Operator patterns and Custom Resources</li> <li>Deep understanding of power monitoring and model server architecture</li> <li>Perfect balance between technical precision and Chinese readability</li> <li>Excellent user experience optimization with updated cross-references</li> </ul> <p>No revisions required - This translation sets the standard for technical configuration documentation and is ready for immediate production use by Chinese-speaking DevOps teams.</p>"},{"location":"archive/usage/kepler_daemon/","title":"Kepler DaemonSet Customization","text":"<p>Kepler enables a function to hybrid read environment variable from attributes directly (container.env) and from the ConfigMap. Note that, all steps will be operated by Kepler Operator if the operator is installed.</p> <p>To set environments by ConfigMap:</p> <ol> <li> <p>Create/Generate ConfigMap</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kepler-cfm\n  namespace: kepler-system\ndata:\n  MODEL_SERVER_ENABLE: true\n  COUNTER_METRICS: '*'\n  BPF_METRICS: '*'\n  # KUBELET_METRICS: ''\n  # GPU_METRICS: ''\n  PERF_METRICS: '*'\n  MODEL_CONFIG: |\n    POD_COMPONENT_ESTIMATOR=true\n    POD_COMPONENT_INIT_URL=https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models/DynComponentPower/CgroupOnly/ScikitMixed.zip\n</code></pre> </li> <li> <p>Mount the ConfigMap to DaemonSet:</p> <pre><code>  spec:\n    containers:\n      - name: kepler-exporter\n        volumeMounts:\n        - name: cfm\n          mountPath: /etc/config\n          readOnly: true\n      volumes:\n      - name: cfm\n        configMap:\n          name: kepler-cfm\n</code></pre> </li> </ol>"},{"location":"archive/usage/trouble_shooting/","title":"Trouble Shooting","text":""},{"location":"archive/usage/trouble_shooting/#kepler-pod-failed-to-start","title":"Kepler Pod failed to start","text":""},{"location":"archive/usage/trouble_shooting/#background","title":"Background","text":"<p>Kepler uses eBPF to obtain performance counter readings and processes stats. Since eBPF requires kernel headers, Kepler will fail to start up when the kernel headers are missing.</p>"},{"location":"archive/usage/trouble_shooting/#diagnose","title":"Diagnose","text":"<p>To confirm, check the Kepler Pod logs with the following command and look for message <code>not able to load eBPF modules</code>.</p> <pre><code>kubectl logs -n kepler daemonset/kepler-exporter\n</code></pre>"},{"location":"archive/usage/trouble_shooting/#solution","title":"Solution","text":"<p>Installing kernel headers on each node can be done manually using the following command</p> <pre><code># Fedora/RHEL based distro\ndnf install kernel-devel-`uname -r` -y\n# Debian/Ubuntu distro\napt install linux-headers-$(uname -r)\n</code></pre> <p>On OpenShift, install the MachineConfiguration here</p>"},{"location":"kepler/design/metrics/","title":"Kepler Metrics","text":"<p>This document describes the metrics exported by Kepler for monitoring energy consumption at various levels (node, container, process, VM).</p>"},{"location":"kepler/design/metrics/#overview","title":"Overview","text":"<p>Kepler exports metrics in Prometheus format that can be scraped by Prometheus or other compatible monitoring systems.</p>"},{"location":"kepler/design/metrics/#metric-types","title":"Metric Types","text":"<ul> <li>COUNTER: A cumulative metric that only increases over time</li> <li>GAUGE: A metric that can increase and decrease</li> </ul>"},{"location":"kepler/design/metrics/#metrics-reference","title":"Metrics Reference","text":""},{"location":"kepler/design/metrics/#node-metrics","title":"Node Metrics","text":"<p>These metrics provide energy and power information at the node level.</p>"},{"location":"kepler/design/metrics/#kepler_node_cpu_active_joules_total","title":"kepler_node_cpu_active_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu in active state at node level in joules</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_active_watts","title":"kepler_node_cpu_active_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu in active state at node level in watts</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_idle_joules_total","title":"kepler_node_cpu_idle_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu in idle state at node level in joules</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_idle_watts","title":"kepler_node_cpu_idle_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu in idle state at node level in watts</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_info","title":"kepler_node_cpu_info","text":"<ul> <li>Type: GAUGE</li> <li>Description: CPU information from procfs</li> <li>Labels:</li> <li><code>processor</code></li> <li><code>vendor_id</code></li> <li><code>model_name</code></li> <li><code>physical_id</code></li> <li><code>core_id</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_joules_total","title":"kepler_node_cpu_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu at node level in joules</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_usage_ratio","title":"kepler_node_cpu_usage_ratio","text":"<ul> <li>Type: GAUGE</li> <li>Description: CPU usage ratio of a node (value between 0.0 and 1.0)</li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_node_cpu_watts","title":"kepler_node_cpu_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu at node level in watts</li> <li>Labels:</li> <li><code>zone</code></li> <li><code>path</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#container-metrics","title":"Container Metrics","text":"<p>These metrics provide energy and power information for containers.</p>"},{"location":"kepler/design/metrics/#kepler_container_cpu_joules_total","title":"kepler_container_cpu_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu at container level in joules</li> <li>Labels:</li> <li><code>container_id</code></li> <li><code>container_name</code></li> <li><code>runtime</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li><code>pod_id</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_container_cpu_watts","title":"kepler_container_cpu_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu at container level in watts</li> <li>Labels:</li> <li><code>container_id</code></li> <li><code>container_name</code></li> <li><code>runtime</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li><code>pod_id</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#process-metrics","title":"Process Metrics","text":"<p>These metrics provide energy and power information for individual processes.</p>"},{"location":"kepler/design/metrics/#kepler_process_cpu_joules_total","title":"kepler_process_cpu_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu at process level in joules</li> <li>Labels:</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>state</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_process_cpu_seconds_total","title":"kepler_process_cpu_seconds_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Total user and system time of cpu at process level in seconds</li> <li>Labels:</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_process_cpu_watts","title":"kepler_process_cpu_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu at process level in watts</li> <li>Labels:</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>state</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#virtual-machine-metrics","title":"Virtual Machine Metrics","text":"<p>These metrics provide energy and power information for virtual machines.</p>"},{"location":"kepler/design/metrics/#kepler_vm_cpu_joules_total","title":"kepler_vm_cpu_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu at vm level in joules</li> <li>Labels:</li> <li><code>vm_id</code></li> <li><code>vm_name</code></li> <li><code>hypervisor</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_vm_cpu_watts","title":"kepler_vm_cpu_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu at vm level in watts</li> <li>Labels:</li> <li><code>vm_id</code></li> <li><code>vm_name</code></li> <li><code>hypervisor</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#pod-metrics","title":"Pod Metrics","text":"<p>These metrics provide energy and power information for pods.</p>"},{"location":"kepler/design/metrics/#kepler_pod_cpu_joules_total","title":"kepler_pod_cpu_joules_total","text":"<ul> <li>Type: COUNTER</li> <li>Description: Energy consumption of cpu at pod level in joules</li> <li>Labels:</li> <li><code>pod_id</code></li> <li><code>pod_name</code></li> <li><code>pod_namespace</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#kepler_pod_cpu_watts","title":"kepler_pod_cpu_watts","text":"<ul> <li>Type: GAUGE</li> <li>Description: Power consumption of cpu at pod level in watts</li> <li>Labels:</li> <li><code>pod_id</code></li> <li><code>pod_name</code></li> <li><code>pod_namespace</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>Constant Labels:</li> <li><code>node_name</code></li> </ul>"},{"location":"kepler/design/metrics/#other-metrics","title":"Other Metrics","text":"<p>Additional metrics provided by Kepler.</p>"},{"location":"kepler/design/metrics/#kepler_build_info","title":"kepler_build_info","text":"<ul> <li>Type: GAUGE</li> <li>Description: A metric with a constant '1' value labeled with version information</li> <li>Labels:</li> <li><code>arch</code></li> <li><code>branch</code></li> <li><code>revision</code></li> <li><code>version</code></li> <li><code>goversion</code></li> </ul> <p>This documentation was automatically generated by the gen-metric-docs tool.</p>"},{"location":"kepler/design/metrics.zh-qc/","title":"Translation Quality Check Report: Kepler Metrics Reference","text":"<p>Original: <code>docs/kepler/design/metrics.md</code> Translation: <code>docs/kepler/design/metrics.zh.md</code> Reverse Translation: <code>docs/kepler/design/metrics.rev.md</code></p>"},{"location":"kepler/design/metrics.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation demonstrates perfect accuracy for Prometheus metrics documentation. This highly structured technical reference maintains precision across all metric definitions, types, and descriptions.</p>"},{"location":"kepler/design/metrics.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler/design/metrics.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Prometheus Metrics Terminology:</li> <li>\"COUNTER/GAUGE\" \u2192 \"COUNTER/GAUGE\" (correctly preserved as technical terms)</li> <li>\"Cumulative metric\" \u2192 \"\u7d2f\u79ef\u6307\u6807\" (accurate monitoring concept)</li> <li>\"Energy consumption\" \u2192 \"\u80fd\u8017\" (precise measurement term)</li> <li> <p>\"Power consumption\" \u2192 \"\u529f\u8017\" (correct electrical engineering term)</p> </li> <li> <p>Metric Classification Excellence:</p> </li> <li>\"Node/Container/Process/VM/Pod metrics\" \u2192 \"\u8282\u70b9/\u5bb9\u5668/\u8fdb\u7a0b/\u865a\u62df\u673a/Pod \u6307\u6807\" (accurate system hierarchy)</li> <li>\"Active/Idle state\" \u2192 \"\u6d3b\u52a8/\u7a7a\u95f2\u72b6\u6001\" (precise CPU state terminology)</li> <li> <p>\"Joules/Watts\" \u2192 \"\u7126\u8033/\u74e6\u7279\" (correct SI units preserved)</p> </li> <li> <p>Label and Metadata Accuracy:</p> </li> <li>All metric names preserved exactly (<code>kepler_node_cpu_watts</code>, etc.)</li> <li>All label names unchanged (<code>container_id</code>, <code>pod_namespace</code>, etc.)</li> <li>Constant labels properly distinguished from variable labels</li> </ol>"},{"location":"kepler/design/metrics.zh-qc/#technical-reference-excellence","title":"\ud83d\udcdd Technical Reference Excellence","text":"<ol> <li>Structured Documentation:</li> <li>Consistent formatting across all metric definitions</li> <li>Type/Description/Labels structure maintained perfectly</li> <li> <p>Hierarchical organization preserved (node \u2192 container \u2192 process \u2192 VM \u2192 pod)</p> </li> <li> <p>Measurement Units and Values:</p> </li> <li>\"Between 0.0 and 1.0\" \u2192 \"\u503c\u5728 0.0 \u548c 1.0 \u4e4b\u95f4\" (precise range specification)</li> <li>\"Total user and system time\" \u2192 \"\u603b\u7528\u6237\u548c\u7cfb\u7edf\u65f6\u95f4\" (accurate CPU time concept)</li> <li> <p>\"Constant '1' value\" \u2192 \"\u5e38\u91cf\u503c\u4e3a '1'\" (exact metric behavior description)</p> </li> <li> <p>System Integration Concepts:</p> </li> <li>\"Procfs\" correctly preserved as Linux filesystem term</li> <li>\"Hypervisor\" appropriately maintained for virtualization context</li> <li>\"Runtime\" preserved as container runtime concept</li> </ol>"},{"location":"kepler/design/metrics.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All metric names unchanged (critical for API compatibility)</li> <li>\u2705 All label names preserved exactly</li> <li>\u2705 Metric types (COUNTER/GAUGE) maintained</li> <li>\u2705 Units of measurement accurate (joules, watts, seconds)</li> <li>\u2705 Value ranges and constraints preserved</li> </ul>"},{"location":"kepler/design/metrics.zh-qc/#documentation-structure","title":"\ud83d\udcca Documentation Structure","text":"<ol> <li>Reference Format: Perfect consistency in metric documentation structure</li> <li>Categorization: Clear separation of metric types by workload level</li> <li>Generation Note: Tool attribution properly translated</li> </ol>"},{"location":"kepler/design/metrics.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler/design/metrics.zh-qc/#approved-for-prometheus-metrics-reference","title":"\u2705 APPROVED FOR PROMETHEUS METRICS REFERENCE","text":"<p>This translation achieves the highest standards for technical API reference documentation. The translation maintains complete compatibility with Prometheus metric conventions while providing clear Chinese explanations.</p>"},{"location":"kepler/design/metrics.zh-qc/#notes","title":"Notes","text":"<ul> <li>Perfect preservation of all technical identifiers critical for monitoring system integration</li> <li>Excellent balance between technical accuracy and Chinese readability</li> <li>Structured format ideal for reference documentation use</li> <li>No risk of API compatibility issues due to unchanged metric/label names</li> <li>Suitable for technical teams implementing Kepler monitoring in Chinese environments</li> </ul> <p>This represents a gold standard for translating structured technical reference documentation.</p>"},{"location":"kepler/developer/dev-docs/","title":"Developer Documentation","text":""},{"location":"kepler/developer/dev-docs/#location-of-developer-documentation","title":"\ud83d\udccd Location of Developer Documentation","text":"<p>Developer documentation for Kepler and related projects is maintained within each project's repository under the <code>docs/developer/</code> directory.</p>"},{"location":"kepler/developer/dev-docs/#kepler-developer-documentation","title":"\ud83d\udd17 Kepler Developer Documentation","text":"<p>For comprehensive developer documentation including architecture, development workflows, testing strategies, and contribution guidelines, please visit:</p> <p>\ud83d\ude80 Kepler Developer Documentation</p>"},{"location":"kepler/developer/dev-docs/#what-youll-find-there","title":"What You'll Find There","text":"<ul> <li>Architecture Overview - Service-oriented design patterns and component structure</li> <li>Development Environment Setup - Docker Compose, local builds, and testing</li> <li>Power Attribution Guide - Deep dive into energy measurement and attribution algorithms</li> <li>Pre-commit Hooks - Code quality and automated checks setup</li> <li>Release Workflow - How releases are created and managed</li> <li>Testing Strategy - Unit tests, integration tests, and race detection</li> <li>Service Interfaces - Understanding the service framework and lifecycle management</li> <li>Configuration Management - YAML hierarchy and CLI flag systems</li> </ul>"},{"location":"kepler/developer/dev-docs/#quick-developer-setup","title":"\ud83d\udee0\ufe0f Quick Developer Setup","text":"<p>For immediate development setup, the key commands are:</p> <pre><code># Clone and build\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\nmake build\n\n# Development with Docker Compose (includes Grafana + Prometheus)\ncd compose/dev\ndocker compose up -d\n\n# Run tests\nmake test\n\n# Local development\nsudo ./bin/kepler --config.file hack/config.yaml\n</code></pre>"},{"location":"kepler/developer/dev-docs/#related-project-documentation","title":"\ud83d\udcda Related Project Documentation","text":"<p>For other projects in the Kepler ecosystem, check their respective repositories:</p> <ul> <li>Kepler Operator: sustainable-computing-io/kepler-operator</li> <li>Kepler Model Server: sustainable-computing-io/kepler-model-server</li> </ul>"},{"location":"kepler/developer/dev-docs/#contributing","title":"\ud83e\udd1d Contributing","text":"<p>Before contributing to Kepler, please review:</p> <ol> <li>Developer Documentation - Technical implementation details</li> <li>Contributing Guide - General contribution process</li> <li>Code of Conduct - Community guidelines</li> </ol>"},{"location":"kepler/developer/dev-docs/#developer-support","title":"\ud83d\udcac Developer Support","text":"<ul> <li>GitHub Issues: Report bugs or request features</li> <li>GitHub Discussions: Ask questions and share ideas</li> <li>Slack Channel: #kepler in CNCF Slack</li> <li>Community session recordings:</li> <li>youtube</li> <li>bilibili, in case you don't have access to youtube</li> </ul> <p>Developer documentation is actively maintained in the project repository to ensure it stays current with the codebase.</p>"},{"location":"kepler/developer/dev-docs.zh-qc/","title":"Translation Quality Check Report: Developer Documentation Index","text":"<p>Original: <code>docs/kepler/developer/dev-docs.md</code> Translation: <code>docs/kepler/developer/dev-docs.zh.md</code> Reverse Translation: <code>docs/kepler/developer/dev-docs.rev.md</code></p>"},{"location":"kepler/developer/dev-docs.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation perfectly serves as a developer documentation index, maintaining clear navigation while providing appropriate Chinese technical terminology for development concepts.</p>"},{"location":"kepler/developer/dev-docs.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler/developer/dev-docs.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Developer-Oriented Language:</li> <li>\"Developer Documentation\" \u2192 \"\u5f00\u53d1\u8005\u6587\u6863\" (standard technical role term)</li> <li>\"Development workflows\" \u2192 \"\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b\" (accurate DevOps terminology)</li> <li>\"Testing strategies\" \u2192 \"\u6d4b\u8bd5\u7b56\u7565\" (appropriate software engineering term)</li> <li> <p>\"Contribution guidelines\" \u2192 \"\u8d21\u732e\u6307\u5357\" (correct open-source community term)</p> </li> <li> <p>Technical Development Concepts:</p> </li> <li>\"Service-oriented design patterns\" \u2192 \"\u9762\u5411\u670d\u52a1\u7684\u8bbe\u8ba1\u6a21\u5f0f\" (accurate architecture term)</li> <li>\"Pre-commit hooks\" \u2192 \"Pre-commit Hook\" (correctly preserved as technical term)</li> <li>\"Race detection\" \u2192 \"\u7ade\u6001\u68c0\u6d4b\" (precise concurrent programming concept)</li> <li> <p>\"Lifecycle management\" \u2192 \"\u751f\u547d\u5468\u671f\u7ba1\u7406\" (standard software architecture term)</p> </li> <li> <p>Development Environment Setup:</p> </li> <li>All command-line instructions preserved exactly</li> <li>Docker Compose, make, git commands unchanged</li> <li>File paths and repository URLs intact</li> </ol>"},{"location":"kepler/developer/dev-docs.zh-qc/#navigation-and-structure-excellence","title":"\ud83d\udcdd Navigation and Structure Excellence","text":"<ol> <li>Documentation Navigation:</li> <li>Clear pointers to actual developer documentation location</li> <li>Appropriate explanation of distributed documentation structure</li> <li> <p>Cross-references properly maintained with Chinese versions</p> </li> <li> <p>Quick Start Guide:</p> </li> <li>Development setup commands perfectly preserved</li> <li>Code comments appropriately translated in context</li> <li> <p>Local development instructions clear and accurate</p> </li> <li> <p>Community Integration:</p> </li> <li>GitHub Issues/Discussions properly explained</li> <li>CNCF Slack channel information maintained</li> <li>Community interaction guidelines clearly communicated</li> </ol>"},{"location":"kepler/developer/dev-docs.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All Git commands and repository URLs preserved</li> <li>\u2705 Docker Compose setup instructions unchanged</li> <li>\u2705 Make targets preserved exactly</li> <li>\u2705 File paths and directory structures intact</li> <li>\u2705 External links and references maintained</li> </ul>"},{"location":"kepler/developer/dev-docs.zh-qc/#developer-experience-features","title":"\ud83d\udcca Developer Experience Features","text":"<ol> <li>Ecosystem Overview: Related projects properly introduced with correct repository links</li> <li>Contribution Process: Clear workflow from documentation to contribution to support</li> <li>Technical Scope: Appropriate balance of overview vs detailed implementation guidance</li> </ol>"},{"location":"kepler/developer/dev-docs.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler/developer/dev-docs.zh-qc/#approved-for-developer-community-use","title":"\u2705 APPROVED FOR DEVELOPER COMMUNITY USE","text":"<p>This translation effectively serves Chinese-speaking developers as an entry point to Kepler development, maintaining technical accuracy while providing clear navigation to detailed resources.</p>"},{"location":"kepler/developer/dev-docs.zh-qc/#notes","title":"Notes","text":"<ul> <li>Excellent handling of mixed English/Chinese technical terminology</li> <li>Perfect preservation of all development commands and procedures</li> <li>Clear communication about distributed documentation structure</li> <li>Appropriate level of detail for an index/navigation document</li> <li>Effective integration with broader open-source community resources</li> </ul> <p>This represents an ideal approach to translating technical navigation documents that bridge to detailed implementation resources.</p>"},{"location":"kepler/installation/guide/","title":"Kepler Installation Guide","text":"<p>This guide covers different methods to install and run Kepler (Kubernetes-based Efficient Power Level Exporter) for monitoring energy consumption metrics.</p>"},{"location":"kepler/installation/guide/#prerequisites","title":"Prerequisites","text":"<ul> <li>For Local Installation: Go 1.21+ and sudo access for hardware sensor access</li> <li>For Kubernetes: Kubernetes cluster (v1.20+) with kubectl configured</li> <li>For Helm: Helm 3.0+ installed</li> </ul>"},{"location":"kepler/installation/guide/#installation-methods","title":"Installation Methods","text":""},{"location":"kepler/installation/guide/#1-helm-chart-installation-recommended-for-kubernetes","title":"1. Helm Chart Installation (Recommended for Kubernetes)","text":""},{"location":"kepler/installation/guide/#prerequisites-for-helm","title":"Prerequisites for Helm","text":"<ul> <li>Helm 3.0+</li> <li>Kubernetes cluster with kubectl configured</li> </ul>"},{"location":"kepler/installation/guide/#install-from-release-recommended","title":"Install from Release (Recommended)","text":"<pre><code># Install from GitHub release (replace VERSION with desired version, e.g., v0.10.2)\nhelm install kepler \\\n  https://github.com/sustainable-computing-io/kepler/releases/download/VERSION/kepler-helm-VERSION.tgz \\\n  --namespace kepler \\\n  --create-namespace\n\n# Example with specific version:\n# helm install kepler \\\n#   https://github.com/sustainable-computing-io/kepler/releases/download/v0.10.2/kepler-helm-0.10.2.tgz \\\n#   --namespace kepler \\\n#   --create-namespace\n</code></pre>"},{"location":"kepler/installation/guide/#install-from-source","title":"Install from Source","text":"<pre><code># Clone the repository\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\n\n# Install Kepler using Helm\nhelm install kepler manifests/helm/kepler/ \\\n  --namespace kepler \\\n  --create-namespace \\\n  --set namespace.create=false\n</code></pre>"},{"location":"kepler/installation/guide/#customizing-the-installation","title":"Customizing the Installation","text":"<p>Create a <code>values.yaml</code> file to customize the installation:</p> <pre><code># values.yaml\nimage:\n  repository: quay.io/sustainable_computing_io/kepler\n  tag: \"v0.10.0\"\n  pullPolicy: IfNotPresent\n\nresources:\n  limits:\n    cpu: 100m\n    memory: 400Mi\n  requests:\n    cpu: 100m\n    memory: 200Mi\n\ntolerations:\n  - operator: Exists\n\nnodeSelector:\n  kubernetes.io/os: linux\n\n# Enable ServiceMonitor for Prometheus\nserviceMonitor:\n  enabled: true\n  interval: 30s\n</code></pre> <p>Install with custom values:</p> <pre><code>helm install kepler manifests/helm/kepler/ \\\n  --namespace kepler \\\n  --create-namespace \\\n  --set namespace.create=false \\\n  --values values.yaml\n</code></pre>"},{"location":"kepler/installation/guide/#helm-management-commands","title":"Helm Management Commands","text":"<pre><code># Check installation status\nhelm status kepler -n kepler\n\n# List releases\nhelm list -n kepler\n\n# Upgrade release\nhelm upgrade kepler manifests/helm/kepler/ -n kepler\n\n# Uninstall\nhelm uninstall kepler -n kepler\n</code></pre>"},{"location":"kepler/installation/guide/#2-local-installation","title":"2. Local Installation","text":""},{"location":"kepler/installation/guide/#building-from-source","title":"Building from Source","text":"<pre><code># Clone the repository\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\n\n# Build Kepler\nmake build\n\n# Run Kepler (requires sudo for hardware access)\nsudo ./bin/kepler --config.file hack/config.yaml\n</code></pre>"},{"location":"kepler/installation/guide/#configuration","title":"Configuration","text":"<p>Kepler can be configured using YAML files or CLI flags. The default configuration is in <code>hack/config.yaml</code>:</p> <pre><code># Run with custom configuration\nsudo ./bin/kepler --config.file /path/to/your/config.yaml\n\n# Run with CLI flags\nsudo ./bin/kepler --log.level=debug --exporter.stdout\n</code></pre> <p>Access Points:</p> <ul> <li>Metrics: http://localhost:28282/metrics</li> </ul>"},{"location":"kepler/installation/guide/#3-docker-compose-recommended-for-development","title":"3. Docker Compose (Recommended for Development)","text":"<p>The Docker Compose setup provides a complete monitoring stack with Kepler, Prometheus, and Grafana:</p> <pre><code>cd compose/dev\n\n# Start the complete stack\ndocker compose up -d\n\n# View logs\ndocker compose logs -f kepler\n\n# Stop the stack\ndocker compose down\n</code></pre> <p>Access Points:</p> <ul> <li>Kepler Metrics: http://localhost:28283/metrics</li> <li>Prometheus: http://localhost:29090</li> <li>Grafana: http://localhost:23000 (admin/admin)</li> </ul>"},{"location":"kepler/installation/guide/#4-kubernetes-with-kustomize","title":"4. Kubernetes with Kustomize","text":""},{"location":"kepler/installation/guide/#quick-setup-with-kind","title":"Quick Setup with Kind","text":"<pre><code># Create a local cluster with monitoring stack\nmake cluster-up\n\n# Deploy Kepler\nmake deploy\n\n# Clean up\nmake cluster-down\n</code></pre>"},{"location":"kepler/installation/guide/#manual-kubernetes-deployment","title":"Manual Kubernetes Deployment","text":"<pre><code># Deploy using kustomize\nkubectl kustomize manifests/k8s | \\\n  sed -e \"s|&lt;KEPLER_IMAGE&gt;|quay.io/sustainable_computing_io/kepler:latest|g\" | \\\n  kubectl apply --server-side --force-conflicts -f -\n\n# Check deployment status\nkubectl get pods -n kepler\n\n# Access metrics (port-forward)\nkubectl port-forward -n kepler svc/kepler 28282:28282\n</code></pre>"},{"location":"kepler/installation/guide/#custom-image-deployment","title":"Custom Image Deployment","text":"<pre><code># Build and push custom image\nmake image push IMG_BASE=your-registry.com/yourorg VERSION=v1.0.0\n\n# Deploy with custom image\nmake deploy IMG_BASE=your-registry.com/yourorg VERSION=v1.0.0\n</code></pre>"},{"location":"kepler/installation/guide/#verification","title":"Verification","text":""},{"location":"kepler/installation/guide/#check-deployment-status","title":"Check Deployment Status","text":"<pre><code># Check pods\nkubectl get pods -n kepler\n\n# Check DaemonSet\nkubectl get daemonset -n kepler\n\n# Check services\nkubectl get svc -n kepler\n\n# View logs\nkubectl logs -n kepler -l app.kubernetes.io/name=kepler\n</code></pre>"},{"location":"kepler/installation/guide/#access-metrics","title":"Access Metrics","text":"<pre><code># Port forward to access metrics locally\nkubectl port-forward -n kepler svc/kepler 28282:28282\n\n# Test metrics endpoint\ncurl http://localhost:28282/metrics\n</code></pre>"},{"location":"kepler/installation/guide/#verify-metrics-collection","title":"Verify Metrics Collection","text":"<p>Look for key metrics like:</p> <ul> <li><code>kepler_node_cpu_watts</code></li> <li><code>kepler_container_cpu_watts</code></li> <li><code>kepler_process_cpu_watts</code></li> </ul>"},{"location":"kepler/installation/guide/#configuration-options","title":"Configuration Options","text":""},{"location":"kepler/installation/guide/#helm-chart-values","title":"Helm Chart Values","text":"<p>Key configuration options in <code>values.yaml</code>:</p> <pre><code># Image configuration\nimage:\n  repository: quay.io/sustainable_computing_io/kepler\n  tag: \"latest\"\n  pullPolicy: IfNotPresent\n\n# DaemonSet configuration\ndaemonset:\n  hostPID: true\n  securityContext:\n    privileged: true\n\n# Resource limits\nresources:\n  limits:\n    cpu: 100m\n    memory: 400Mi\n  requests:\n    cpu: 100m\n    memory: 200Mi\n\n# Node scheduling\ntolerations:\n  - operator: Exists\n\nnodeSelector:\n  kubernetes.io/os: linux\n\n# Monitoring\nserviceMonitor:\n  enabled: true\n  interval: 30s\n  scrapeTimeout: 10s\n</code></pre>"},{"location":"kepler/installation/guide/#environment-specific-settings","title":"Environment-Specific Settings","text":"<ul> <li>Development: Use fake CPU meter when RAPL unavailable</li> <li>Production: Ensure nodes have Intel RAPL support</li> <li>Cloud: May need different privilege configurations</li> </ul>"},{"location":"kepler/installation/guide/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kepler/installation/guide/#common-issues","title":"Common Issues","text":"<ol> <li>Permission Denied: Ensure privileged security context is enabled</li> <li>No Metrics: Check if nodes support Intel RAPL sensors</li> <li>Pod Crashes: Review logs for hardware access issues</li> <li>ServiceMonitor Not Found: Ensure Prometheus Operator is installed</li> </ol>"},{"location":"kepler/installation/guide/#debug-commands","title":"Debug Commands","text":"<pre><code># Check pod logs\nkubectl logs -n kepler -l app.kubernetes.io/name=kepler\n\n# Describe pod for events\nkubectl describe pod -n kepler -l app.kubernetes.io/name=kepler\n\n# Check node hardware\nkubectl exec -n kepler -it &lt;pod-name&gt; -- ls /sys/class/powercap/intel-rapl\n\n# Test with fake meter (development)\nhelm upgrade kepler manifests/helm/kepler/ -n kepler \\\n  --set env.KEPLER_FAKE_CPU_METER=true\n</code></pre>"},{"location":"kepler/installation/guide/#getting-help","title":"Getting Help","text":"<ul> <li>Documentation: https://sustainable-computing.io/kepler/</li> <li>Issues: https://github.com/sustainable-computing-io/kepler/issues</li> <li>Discussions: https://github.com/sustainable-computing-io/kepler/discussions</li> <li>Slack: #kepler channel in CNCF Slack</li> </ul>"},{"location":"kepler/installation/guide/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Set up Prometheus: Configure scraping of Kepler metrics</li> <li>Install Grafana: Use pre-built dashboards for visualization</li> <li>Configure Alerts: Set up energy consumption alerts</li> <li>Explore Metrics: Learn about available energy metrics</li> <li>Optimize Workloads: Use insights to improve energy efficiency</li> </ol>"},{"location":"kepler/installation/guide.zh-qc/","title":"Translation Quality Check Report: Kepler Installation Guide","text":"<p>Original: <code>docs/kepler/installation/guide.md</code> Translation: <code>docs/kepler/installation/guide.zh.md</code> Reverse Translation: <code>docs/kepler/installation/guide.rev.md</code></p>"},{"location":"kepler/installation/guide.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation demonstrates high accuracy with proper technical terminology, complete preservation of code blocks, and appropriate adaptation to Chinese language conventions.</p>"},{"location":"kepler/installation/guide.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler/installation/guide.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Technical Accuracy: All technical terms properly translated</li> <li>\"Kubernetes-based Efficient Power Level Exporter\" \u2192 \"\u57fa\u4e8e Kubernetes \u7684\u9ad8\u6548\u529f\u7387\u7ea7\u522b\u5bfc\u51fa\u5668\"</li> <li> <p>\"energy consumption metrics\" \u2192 \"\u80fd\u8017\u6307\u6807\"</p> </li> <li> <p>Code Preservation: All code blocks, commands, and URLs preserved exactly</p> </li> <li>Bash commands unchanged</li> <li>YAML configurations intact</li> <li> <p>GitHub URLs preserved</p> </li> <li> <p>Structure Maintenance: Document structure and formatting maintained</p> </li> <li>Headers properly translated</li> <li>Lists and bullet points preserved</li> <li> <p>Admonition blocks (warning) properly formatted</p> </li> <li> <p>Contextual Translation: Proper adaptation for Chinese audience</p> </li> <li>\"\u5148\u51b3\u6761\u4ef6\" instead of literal \"\u524d\u63d0\u6761\u4ef6\"</li> <li>\"\u6545\u969c\u6392\u9664\" for troubleshooting</li> <li>\"\u540e\u7eed\u6b65\u9aa4\" for next steps</li> </ol>"},{"location":"kepler/installation/guide.zh-qc/#minor-differences","title":"\ud83d\udcdd Minor Differences","text":"<ol> <li> <p>Translation Disclaimer: Chinese version includes machine translation warning (expected)</p> </li> <li> <p>Terminology Consistency:</p> </li> <li>\"Repository\" consistently translated as \"\u4ed3\u5e93\"</li> <li>\"Deploy/Deployment\" consistently as \"\u90e8\u7f72\"</li> <li>\"Configuration\" consistently as \"\u914d\u7f6e\"</li> </ol>"},{"location":"kepler/installation/guide.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All Helm commands preserved</li> <li>\u2705 Kubernetes resource names unchanged</li> <li>\u2705 Port numbers and URLs intact</li> <li>\u2705 File paths preserved</li> <li>\u2705 Environment variables maintained</li> <li>\u2705 YAML syntax correct</li> </ul>"},{"location":"kepler/installation/guide.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler/installation/guide.zh-qc/#approved-for-production-use","title":"\u2705 APPROVED FOR PRODUCTION USE","text":"<p>This translation meets professional standards for technical documentation. The translation accurately conveys all technical information while being accessible to Chinese-speaking users.</p>"},{"location":"kepler/installation/guide.zh-qc/#notes","title":"Notes","text":"<ul> <li>Translation includes appropriate disclaimer about AI translation</li> <li>All cross-references and internal links properly maintained</li> <li>Technical context preserved throughout document</li> <li>No loss of critical information identified</li> </ul>"},{"location":"kepler/usage/configuration/","title":"\u2699\ufe0f Kepler Configuration Guide","text":"<p>Kepler supports configuration through both command-line flags and a configuration file. This guide outlines all available configuration options for configuring Kepler.</p>"},{"location":"kepler/usage/configuration/#configuration-methods","title":"\ud83d\udee0\ufe0f Configuration Methods","text":"<p>Kepler supports two primary methods for configuration:</p> <ol> <li>Command-line flags: For quick adjustments and one-time settings</li> <li>Configuration file: For persistent and comprehensive configuration</li> </ol> <p>\u26a1 Tip: Command-line flags take precedence over configuration file settings when both are specified.</p>"},{"location":"kepler/usage/configuration/#command-line-flags","title":"\ud83d\udda5\ufe0f Command-line Flags","text":"<p>You can configure Kepler by passing flags when starting the service. The following flags are available:</p> Flag Description Default Values <code>--config.file</code> Path to YAML configuration file Any valid file path <code>--log.level</code> Logging level <code>info</code> <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code> <code>--log.format</code> Output format for logs <code>text</code> <code>text</code>, <code>json</code> <code>--host.sysfs</code> Path to sysfs filesystem <code>/sys</code> Any valid directory path <code>--host.procfs</code> Path to procfs filesystem <code>/proc</code> Any valid directory path <code>--monitor.interval</code> Monitor refresh interval <code>5s</code> Any valid duration <code>--monitor.max-terminated</code> Maximum number of terminated workloads to keep in memory until exported <code>500</code> Negative number indicates <code>unlimited</code> and <code>0</code> disables the feature <code>--web.config-file</code> Path to TLS server config file <code>\"\"</code> Any valid file path <code>--web.listen-address</code> Web server listen addresses (can be specified multiple times) <code>:28282</code> Any valid host:port or :port format <code>--debug.pprof</code> Enable pprof debugging endpoints <code>false</code> <code>true</code>, <code>false</code> <code>--exporter.stdout</code> Enable stdout exporter <code>false</code> <code>true</code>, <code>false</code> <code>--exporter.prometheus</code> Enable Prometheus exporter <code>true</code> <code>true</code>, <code>false</code> <code>--metrics</code> Metrics levels to export (can be specified multiple times) <code>node,process,container,vm,pod</code> <code>node</code>, <code>process</code>, <code>container</code>, <code>vm</code>, <code>pod</code> <code>--kube.enable</code> Monitor kubernetes <code>false</code> <code>true</code>, <code>false</code> <code>--kube.config</code> Path to a kubeconfig file <code>\"\"</code> Any valid file path <code>--kube.node-name</code> Name of kubernetes node on which kepler is running <code>\"\"</code> Any valid node name"},{"location":"kepler/usage/configuration/#examples","title":"\ud83d\udca1 Examples","text":"<pre><code># Run with debug logging\nkepler --log.level=debug\n\n# Use a different procfs path and JSON logging\nkepler --host.procfs=/custom/proc --log.format=json\n\n# Load configuration from file\nkepler --config.file=/path/to/config.yaml\n\n# Use custom listen addresses\nkepler --web.listen-address=:8080 --web.listen-address=localhost:9090\n\n# Enable stdout exporter and disable Prometheus exporter\nkepler --exporter.stdout=true --exporter.prometheus=false\n\n# Enable Kubernetes monitoring with specific kubeconfig and node name\nkepler --kube.enable=true --kube.config=/path/to/kubeconfig --kube.node-name=my-node\n\n# Export only node and container level metrics\nkepler --metrics=node --metrics=container\n\n# Export only process level metrics\nkepler --metrics=process\n\n# Set maximum terminated workloads to 1000\nkepler --monitor.max-terminated=1000\n\n# Disable terminated workload tracking\nkepler --monitor.max-terminated=0\n\n# Unlimited terminated workload tracking\nkepler --monitor.max-terminated=-1\n</code></pre>"},{"location":"kepler/usage/configuration/#configuration-file","title":"\ud83d\uddc2\ufe0f Configuration File","text":"<p>Kepler can load configuration from a YAML file. The configuration file offers more extensive options than command-line flags.</p>"},{"location":"kepler/usage/configuration/#sample-configuration-file","title":"\ud83e\uddfe Sample Configuration File","text":"<pre><code>log:\n  level: debug  # debug, info, warn, error (default: info)\n  format: text  # text or json (default: text)\n\nmonitor:\n  interval: 5s        # Monitor refresh interval (default: 5s)\n  staleness: 1000ms   # Duration after which data is considered stale (default: 1000ms)\n  maxTerminated: 500  # Maximum number of terminated workloads to keep in memory (default: 500)\n  minTerminatedEnergyThreshold: 10  # Minimum energy threshold for terminated workloads (default: 10)\n\nhost:\n  sysfs: /sys   # Path to sysfs filesystem (default: /sys)\n  procfs: /proc # Path to procfs filesystem (default: /proc)\n\nrapl:\n  zones: []     # RAPL zones to be enabled, empty enables all default zones\n\nexporter:\n  stdout:       # stdout exporter related config\n    enabled: false # disabled by default\n  prometheus:   # prometheus exporter related config\n    enabled: true\n    debugCollectors:\n      - go\n      - process\n    metricsLevel:\n      - node\n      - process\n      - container\n      - vm\n      - pod\n\ndebug:          # debug related config\n  pprof:        # pprof related config\n    enabled: true\n\nweb:\n  configFile: \"\" # Path to TLS server config file\n  listenAddresses: # Web server listen addresses\n    - \":28282\"\n\nkube:           # kubernetes related config\n  enabled: false    # Enable kubernetes monitoring (default: false)\n  config: \"\"        # Path to kubeconfig file (optional if running in-cluster)\n  nodeName: \"\"      # Name of the kubernetes node (required when enabled)\n\n# WARN: DO NOT ENABLE THIS IN PRODUCTION - for development/testing only\ndev:\n  fake-cpu-meter:\n    enabled: false\n    zones: []  # Zones to be enabled, empty enables all default zones\n</code></pre>"},{"location":"kepler/usage/configuration/#configuration-options-in-detail","title":"\ud83e\udde9 Configuration Options in Detail","text":""},{"location":"kepler/usage/configuration/#logging-configuration","title":"\ud83d\udcdd Logging Configuration","text":"<pre><code>log:\n  level: info   # Logging level\n  format: text  # Output format\n</code></pre> <ul> <li>level: Controls the verbosity of logging</li> <li><code>debug</code>: Very verbose, includes detailed operational information</li> <li><code>info</code>: Standard operational information</li> <li><code>warn</code>: Only warnings and errors</li> <li> <p><code>error</code>: Only errors</p> </li> <li> <p>format: Controls the output format of logs</p> </li> <li><code>text</code>: Human-readable format</li> <li><code>json</code>: JSON format, suitable for log processing systems</li> </ul>"},{"location":"kepler/usage/configuration/#monitor-configuration","title":"\ud83d\udcca Monitor Configuration","text":"<pre><code>monitor:\n  interval: 5s\n  staleness: 1000ms\n  maxTerminated: 500\n  minTerminatedEnergyThreshold: 10\n</code></pre> <ul> <li> <p>interval: The monitor's refresh interval. All processes with a lifetime less than this interval will be ignored. Setting to 0s disables monitor refreshes.</p> </li> <li> <p>staleness: Duration after which data computed by the monitor is considered stale and recomputed when requested again. Especially useful when multiple Prometheus instances are scraping Kepler, ensuring they receive the same data within the staleness window. Should be shorter than the monitor interval.</p> </li> <li> <p>maxTerminated: Maximum number of terminated workloads (processes, containers, VMs, pods) to keep in memory until the data is exported. This prevents unbounded memory growth in high-churn environments. Set 0 to disable. When the limit is reached, the least power consuming terminated workloads are removed first.</p> </li> <li> <p>minTerminatedEnergyThreshold: Minimum energy consumption threshold (in joules) for terminated workloads to be tracked. Only terminated workloads with energy consumption above this threshold will be included in the tracking. This helps filter out short-lived processes that consume minimal energy. Default is 10 joules.</p> </li> </ul>"},{"location":"kepler/usage/configuration/#host-configuration","title":"\ud83d\uddc4\ufe0f Host Configuration","text":"<pre><code>host:\n  sysfs: /sys    # Path to sysfs\n  procfs: /proc  # Path to procfs\n</code></pre> <p>These settings specify where Kepler should look for system information. In containerized environments, you might need to adjust these paths.</p>"},{"location":"kepler/usage/configuration/#rapl-zones-configuration","title":"\ud83d\udd0b RAPL Zones Configuration","text":"<pre><code>rapl:\n  zones: []  # RAPL zones to be enabled\n</code></pre> <p>Running Average Power Limiting (RAPL) is Intel's power capping mechanism. By default, Kepler enables all available zones. You can restrict to specific zones by listing them.</p> <p>Example with specific zones:</p> <pre><code>rapl:\n  zones: [\"package\", \"core\", \"uncore\"]\n</code></pre>"},{"location":"kepler/usage/configuration/#exporter-configuration","title":"\ud83d\udce6 Exporter Configuration","text":"<pre><code>exporter:\n  stdout:       # stdout exporter related config\n    enabled: false # disabled by default\n  prometheus:   # prometheus exporter related config\n    enabled: true\n    debugCollectors:\n      - go\n      - process\n    metricsLevel:\n      - node\n      - process\n      - container\n      - vm\n      - pod\n</code></pre> <ul> <li>stdout: Configuration for the stdout exporter</li> <li> <p><code>enabled</code>: Enable or disable the stdout exporter (default: false)</p> </li> <li> <p>prometheus: Configuration for the Prometheus exporter</p> </li> <li><code>enabled</code>: Enable or disable the Prometheus exporter (default: true)</li> <li><code>debugCollectors</code>: List of debug collectors to enable (available: \"go\", \"process\")</li> <li><code>metricsLevel</code>: List of metric levels to expose. Controls the granularity of metrics exported:<ul> <li><code>node</code>: Node-level metrics (system-wide power consumption)</li> <li><code>process</code>: Process-level metrics (per-process power consumption)</li> <li><code>container</code>: Container-level metrics (per-container power consumption)</li> <li><code>vm</code>: Virtual machine-level metrics (per-VM power consumption)</li> <li><code>pod</code>: Pod-level metrics (per-pod power consumption in Kubernetes)</li> </ul> </li> </ul>"},{"location":"kepler/usage/configuration/#debug-configuration","title":"\ud83d\udc1e Debug Configuration","text":"<pre><code>debug:\n  pprof:\n    enabled: true\n</code></pre> <ul> <li>pprof: Configuration for pprof debugging</li> <li><code>enabled</code>: When enabled, this exposes pprof debug endpoints that can be used for profiling Kepler (default: true)</li> </ul>"},{"location":"kepler/usage/configuration/#web-configuration","title":"\ud83c\udf10 Web Configuration","text":"<pre><code>web:\n  configFile: \"\"  # Path to TLS server config file\n  listenAddresses: # Web server listen addresses\n    - \":28282\"\n</code></pre> <ul> <li>configFile: Path to a TLS server configuration file for securing Kepler's web endpoints</li> <li>listenAddresses: List of addresses where the web server should listen (default: [\":28282\"])</li> <li>Supports both host:port format (e.g., \"localhost:8080\", \"0.0.0.0:9090\") and port-only format (e.g., \":8080\")</li> <li>Multiple addresses can be specified for listening on different interfaces or ports</li> <li>IPv6 addresses are supported using bracket notation (e.g., \"[::1]:8080\")</li> </ul> <p>Example TLS server configuration file content:</p> <pre><code># TLS server configuration\ntls_server_config:\n  cert_file: /path/to/cert.pem  # Path to the certificate file\n  key_file: /path/to/key.pem    # Path to the key file\n</code></pre>"},{"location":"kepler/usage/configuration/#kubernetes-configuration","title":"\ud83d\udc33 Kubernetes Configuration","text":"<pre><code>kube:\n  enabled: false    # Enable kubernetes monitoring\n  config: \"\"        # Path to kubeconfig file\n  nodeName: \"\"      # Name of the kubernetes node\n</code></pre> <ul> <li>enabled: Enable or disable Kubernetes monitoring (default: false)</li> <li> <p>When enabled, Kepler will monitor Kubernetes resources and expose pod level information</p> </li> <li> <p>config: Path to a kubeconfig file (optional)</p> </li> <li>Required when running Kepler outside of a Kubernetes cluster</li> <li>When running inside a cluster, Kepler can use the in-cluster configuration</li> <li> <p>Must be a valid and readable kubeconfig file</p> </li> <li> <p>nodeName: Name of the Kubernetes node on which Kepler is running (required when enabled)</p> </li> <li>This helps Kepler identify which node it's monitoring</li> <li>Must match the actual node name in the Kubernetes cluster</li> <li>Required when <code>enabled</code> is set to <code>true</code></li> </ul>"},{"location":"kepler/usage/configuration/#development-configuration","title":"\ud83e\uddd1\u200d\ud83d\udd2c Development Configuration","text":"<pre><code>dev:\n  fake-cpu-meter:\n    enabled: false\n    zones: []\n</code></pre> <p>\u26a0\ufe0f WARNING: This section is for development and testing only. Do not enable in production.</p> <ul> <li>fake-cpu-meter: When enabled, uses a fake CPU meter instead of real hardware metrics</li> <li><code>enabled</code>: Set to <code>true</code> to enable fake CPU meter</li> <li><code>zones</code>: Specific zones to enable, empty enables all</li> </ul>"},{"location":"kepler/usage/configuration/#further-reading","title":"\ud83d\udcd6 Further Reading","text":"<p>For more details see the config file example in the main Kepler repository at <code>hack/config.yaml</code></p> <p>Happy configuring! \ud83c\udf89</p>"},{"location":"kepler/usage/configuration.zh-qc/","title":"Translation Quality Check Report: Kepler Configuration Guide","text":"<p>Original: <code>docs/kepler/usage/configuration.md</code> Translation: <code>docs/kepler/usage/configuration.zh.md</code> Reverse Translation: <code>docs/kepler/usage/configuration.rev.md</code></p>"},{"location":"kepler/usage/configuration.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation demonstrates exceptional technical accuracy while maintaining perfect formatting and code preservation. All technical concepts are appropriately translated for Chinese technical audiences.</p>"},{"location":"kepler/usage/configuration.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler/usage/configuration.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Technical Terminology Excellence:</li> <li>\"Configuration\" \u2192 \"\u914d\u7f6e\" (standard technical term)</li> <li>\"Command-line flags\" \u2192 \"\u547d\u4ee4\u884c\u6807\u5fd7\" (accurate technical translation)</li> <li>\"Monitoring\" \u2192 \"\u76d1\u63a7\" (correct industry standard)</li> <li> <p>\"Workloads\" \u2192 \"\u5de5\u4f5c\u8d1f\u8f7d\" (proper Kubernetes terminology)</p> </li> <li> <p>Complex Table Translation:</p> </li> <li>Configuration flags table fully translated with technical accuracy</li> <li>Parameter descriptions maintained</li> <li> <p>Default values and formats preserved exactly</p> </li> <li> <p>Code Block Preservation:</p> </li> <li>All YAML configurations unchanged</li> <li>Command-line examples preserved</li> <li> <p>Code comments properly translated in context</p> </li> <li> <p>Emoji and Formatting:</p> </li> <li>All emojis (\u2699\ufe0f\ud83d\udee0\ufe0f\ud83d\udda5\ufe0f\ud83d\udca1\ud83d\uddc2\ufe0f\ud83e\uddfeetc.) preserved</li> <li>Markdown headers and structure maintained</li> <li>Admonition blocks properly formatted</li> </ol>"},{"location":"kepler/usage/configuration.zh-qc/#translation-highlights","title":"\ud83d\udcdd Translation Highlights","text":"<ol> <li>Context-Aware Translation:</li> <li>\"Staleness\" \u2192 \"\u8fc7\u65f6\" (appropriate for caching context)</li> <li>\"Terminated workloads\" \u2192 \"\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\" (precise technical meaning)</li> <li> <p>\"Debug endpoints\" \u2192 \"\u8c03\u8bd5\u7aef\u70b9\" (correct networking terminology)</p> </li> <li> <p>Consistent Technical Vocabulary:</p> </li> <li>\"Exporter\" consistently as \"\u5bfc\u51fa\u5668\"</li> <li>\"Metrics\" consistently as \"\u6307\u6807\"</li> <li> <p>\"Threshold\" consistently as \"\u9608\u503c\"</p> </li> <li> <p>Cultural Adaptation:</p> </li> <li>\"Happy configuring! \ud83c\udf89\" \u2192 \"\u914d\u7f6e\u6109\u5feb\uff01\ud83c\udf89\" (natural Chinese expression)</li> <li>Warning messages appropriately formal in Chinese</li> </ol>"},{"location":"kepler/usage/configuration.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All command-line flags preserved exactly</li> <li>\u2705 YAML syntax and indentation maintained</li> <li>\u2705 Parameter names unchanged (e.g., <code>--log.level</code>, <code>--host.sysfs</code>)</li> <li>\u2705 File paths and URLs intact</li> <li>\u2705 Default values preserved</li> <li>\u2705 Technical specifications accurate</li> </ul>"},{"location":"kepler/usage/configuration.zh-qc/#advanced-features","title":"\ud83d\udcca Advanced Features","text":"<ol> <li>Complex Configuration Sections: Each configuration section (logging, monitoring, RAPL, etc.) properly explained in Chinese</li> <li>Warning Blocks: Development warnings appropriately emphasized</li> <li>Cross-References: Links to external documentation maintained</li> </ol>"},{"location":"kepler/usage/configuration.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler/usage/configuration.zh-qc/#approved-for-production-use","title":"\u2705 APPROVED FOR PRODUCTION USE","text":"<p>This translation achieves professional-grade quality suitable for technical documentation in enterprise environments. The translator demonstrates deep understanding of both Kubernetes ecosystem terminology and Chinese technical writing conventions.</p>"},{"location":"kepler/usage/configuration.zh-qc/#notes","title":"Notes","text":"<ul> <li>Translation maintains perfect balance between technical accuracy and readability</li> <li>All emoji indicators and formatting preserved for user experience</li> <li>Complex nested YAML structures properly documented in Chinese</li> <li>No technical information loss identified in any section</li> </ul>"},{"location":"kepler/usage/power-attribution/","title":"Understanding Kepler Power Attribution","text":"<p>This guide explains how Kepler measures and attributes power consumption to processes, containers, VMs, and pods running on your system.</p>"},{"location":"kepler/usage/power-attribution/#how-power-attribution-works","title":"How Power Attribution Works","text":""},{"location":"kepler/usage/power-attribution/#the-big-picture","title":"The Big Picture","text":"<p>Modern systems lack per-workload energy metering, providing only aggregate power consumption at the hardware level. Kepler addresses this attribution challenge through proportional distribution based on resource utilization:</p> <ol> <li>Hardware Energy Collection - Intel RAPL sensors provide cumulative    energy counters at package, core, DRAM, and uncore levels</li> <li>System Activity Analysis - CPU utilization metrics from <code>/proc/stat</code>    determine the ratio of active vs idle system operation</li> <li>Power Domain Separation - Total energy is split into active power    (proportional to workload activity) and idle power (baseline consumption)</li> <li>Proportional Attribution - Active power is distributed to workloads    based on their CPU time consumption ratios</li> </ol>"},{"location":"kepler/usage/power-attribution/#core-philosophy","title":"Core Philosophy","text":"<p>Kepler implements a CPU-time-proportional energy attribution model that distributes hardware-measured energy consumption to individual workloads based on their computational resource usage patterns.</p> <p>The fundamental principle recognizes that system power consumption has two distinct components:</p> <ul> <li>Active Power: Energy consumed by computational work, proportional to CPU   utilization and scalable with workload activity</li> <li>Idle Power: Fixed baseline energy for maintaining system operation,   including memory refresh, clock distribution, and idle core power states</li> </ul>"},{"location":"kepler/usage/power-attribution/#attribution-formula","title":"Attribution Formula","text":"<p>All workload types use the same proportional attribution formula:</p> <pre><code>Workload Power = (Workload CPU Time \u0394 / Node CPU Time \u0394) \u00d7 Active Power\n</code></pre> <p>This ensures energy conservation - the sum of attributed power remains proportional to measured hardware consumption while maintaining fairness based on actual resource utilization.</p> <p></p> <p>Figure 1: Power attribution flow showing how total measured power is decomposed into active and idle components, with active power distributed proportionally based on workload CPU time deltas.</p>"},{"location":"kepler/usage/power-attribution/#understanding-energy-vs-power","title":"Understanding Energy vs Power","text":"<ul> <li>Energy: Measured in microjoules (\u03bcJ) as cumulative counters from hardware</li> <li>Power: Calculated as rate in microwatts (\u03bcW) using <code>Power = \u0394Energy / \u0394time</code></li> </ul>"},{"location":"kepler/usage/power-attribution/#energy-zones","title":"Energy Zones","text":"<p>Hardware energy is read from different zones:</p> <ul> <li>Package: CPU package-level energy consumption</li> <li>Core: Individual CPU core energy</li> <li>DRAM: Memory subsystem energy</li> <li>Uncore: Integrated graphics and other uncore components</li> <li>PSys: Platform-level energy (most comprehensive when available)</li> </ul>"},{"location":"kepler/usage/power-attribution/#attribution-examples","title":"Attribution Examples","text":""},{"location":"kepler/usage/power-attribution/#example-1-basic-power-split","title":"Example 1: Basic Power Split","text":"<p>System State:</p> <ul> <li>Hardware reports: 40W total system power</li> <li>Node CPU usage: 25% utilization ratio</li> <li>Power split: 40W \u00d7 25% = 10W active, 30W idle</li> </ul> <p>Workload Attribution: If a container used 20% of total node CPU time during the measurement interval:</p> <ul> <li>Container power = (20% CPU usage) \u00d7 10W active = 2W</li> </ul>"},{"location":"kepler/usage/power-attribution/#example-2-multi-workload-scenario","title":"Example 2: Multi-Workload Scenario","text":"<p>System State:</p> <ul> <li>Total power: 60W</li> <li>CPU usage ratio: 33.3% (1/3)</li> <li>Active power: 20W, Idle power: 40W</li> <li>Node total CPU time: 1000ms</li> </ul> <p>Process-Level CPU Usage:</p> <ul> <li>Process 1 (standalone): 100ms CPU time</li> <li>Process 2 (in container-A): 80ms CPU time</li> <li>Process 3 (in container-A): 70ms CPU time</li> <li>Process 4 (in container-B): 60ms CPU time</li> <li>Process 5 (QEMU hypervisor): 200ms CPU time</li> <li>Process 6 (in container-C, pod-X): 90ms CPU time</li> <li>Process 7 (in container-D, pod-X): 110ms CPU time</li> </ul> <p>Hierarchical CPU Time Aggregation:</p> <ul> <li>Container-A CPU time: 80ms + 70ms = 150ms</li> <li>Container-B CPU time: 60ms</li> <li>Container-C CPU time: 90ms (part of pod-X)</li> <li>Container-D CPU time: 110ms (part of pod-X)</li> <li>Pod-X CPU time: 90ms + 110ms = 200ms</li> <li>VM CPU time: 200ms (QEMU hypervisor process)</li> </ul> <p>Independent Power Attribution (each from node active power):</p> <ul> <li>Process 1: (100ms / 1000ms) \u00d7 20W = 2W</li> <li>Container-A: (150ms / 1000ms) \u00d7 20W = 3W</li> <li>Container-B: (60ms / 1000ms) \u00d7 20W = 1.2W</li> <li>Pod-X: (200ms / 1000ms) \u00d7 20W = 4W</li> <li>VM: (200ms / 1000ms) \u00d7 20W = 4W</li> </ul> <p>Note: Each workload type calculates power independently from node active power based on its own CPU time, not by inheriting from constituent workloads.</p>"},{"location":"kepler/usage/power-attribution/#example-3-container-with-multiple-processes","title":"Example 3: Container with Multiple Processes","text":"<p>Container \"web-server\":</p> <ul> <li>Process 1 (nginx): 100ms CPU time</li> <li>Process 2 (worker): 50ms CPU time</li> <li>Container total: 150ms CPU time</li> </ul> <p>If node total CPU time is 1000ms:</p> <ul> <li>Container CPU ratio: 150ms / 1000ms = 15%</li> <li>Container power: 15% \u00d7 active power</li> </ul>"},{"location":"kepler/usage/power-attribution/#example-4-pod-with-multiple-containers","title":"Example 4: Pod with Multiple Containers","text":"<p>Pod \"frontend\":</p> <ul> <li>Container 1 (nginx): 200ms CPU time</li> <li>Container 2 (sidecar): 50ms CPU time</li> <li>Pod total: 250ms CPU time</li> </ul> <p>If node total CPU time is 1000ms:</p> <ul> <li>Pod CPU ratio: 250ms / 1000ms = 25%</li> <li>Pod power: 25% \u00d7 active power</li> </ul>"},{"location":"kepler/usage/power-attribution/#limitations-and-considerations","title":"Limitations and Considerations","text":""},{"location":"kepler/usage/power-attribution/#when-cpu-attribution-works-well","title":"When CPU Attribution Works Well","text":"<ul> <li>CPU-bound workloads with similar instruction mixes</li> <li>Steady-state workloads without significant frequency scaling</li> <li>Relative comparisons between similar workload types</li> <li>Trend analysis over longer time periods</li> </ul>"},{"location":"kepler/usage/power-attribution/#when-to-exercise-caution","title":"When to Exercise Caution","text":"<ul> <li>Mixed workload environments with varying compute vs I/O patterns</li> <li>High-performance computing workloads using specialized instructions</li> <li>Absolute power budgeting decisions based solely on Kepler metrics</li> <li>Fine-grained optimization requiring precise per-process power measurement</li> </ul>"},{"location":"kepler/usage/power-attribution/#workload-specific-characteristics","title":"Workload-Specific Characteristics","text":""},{"location":"kepler/usage/power-attribution/#compute-vs-memory-bound-workloads","title":"Compute vs Memory-Bound Workloads","text":"<pre><code>Example Scenario:\n- Process A: 50% CPU, compute-intensive (high frequency, active execution)\n- Process B: 50% CPU, memory-bound (frequent stalls, lower frequency)\n\nCurrent Attribution: Both receive equal power\nReality: Process A likely consumes 2-3x more power\n</code></pre>"},{"location":"kepler/usage/power-attribution/#cpu-power-states-impact","title":"CPU Power States Impact","text":"<p>Modern CPUs implement sophisticated power management that affects attribution accuracy:</p> <ul> <li>C-States (CPU Sleep States): Different sleep behaviors affect power consumption</li> <li>P-States (Performance States): Dynamic frequency scaling affects power per CPU cycle</li> <li>Instruction-Level Variations: Vector instructions consume more power than scalar operations</li> </ul>"},{"location":"kepler/usage/power-attribution/#beyond-cpu-attribution","title":"Beyond CPU Attribution","text":""},{"location":"kepler/usage/power-attribution/#memory-and-io-considerations","title":"Memory and I/O Considerations","text":"<ul> <li>DRAM Power: Memory-intensive workloads consume more DRAM power</li> <li>Storage I/O: Triggers storage controller and device power</li> <li>Network I/O: Consumes network interface and PCIe power</li> <li>GPU Workloads: Integrated graphics power not captured by CPU metrics</li> </ul>"},{"location":"kepler/usage/power-attribution/#key-metrics","title":"Key Metrics","text":"<ul> <li><code>kepler_node_cpu_watts{}</code>: Total node power consumption</li> <li><code>kepler_process_cpu_watts{}</code>: Individual process power</li> <li><code>kepler_container_cpu_watts{}</code>: Container-level power</li> <li><code>kepler_vm_cpu_watts{}</code>: Virtual machine power</li> <li><code>kepler_pod_cpu_watts{}</code>: Kubernetes pod power</li> </ul>"},{"location":"kepler/usage/power-attribution/#conclusion","title":"Conclusion","text":"<p>Kepler's power attribution system provides practical, proportional distribution of hardware energy consumption to individual workloads. While CPU-time-based attribution has inherent limitations due to modern CPU complexity, it offers a good balance between accuracy, simplicity, and performance overhead for most monitoring and optimization use cases.</p> <p>Understanding both the capabilities and limitations helps users make informed decisions about when and how to rely on Kepler's power attribution metrics.</p>"},{"location":"kepler/usage/power-attribution.zh-qc/","title":"Translation Quality Check Report: Kepler Power Attribution Guide","text":"<p>Original: <code>docs/kepler/usage/power-attribution.md</code> Translation: <code>docs/kepler/usage/power-attribution.zh.md</code> Reverse Translation: <code>docs/kepler/usage/power-attribution.rev.md</code></p>"},{"location":"kepler/usage/power-attribution.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation demonstrates exceptional technical accuracy for complex power attribution algorithms and system architecture concepts. This is one of Kepler's most technically sophisticated documents, and the translation maintains precision throughout.</p>"},{"location":"kepler/usage/power-attribution.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler/usage/power-attribution.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Advanced Technical Concepts:</li> <li>\"Power attribution\" \u2192 \"\u529f\u7387\u5f52\u56e0\" (precise technical term)</li> <li>\"CPU-time-proportional energy attribution model\" \u2192 \"\u57fa\u4e8e CPU \u65f6\u95f4\u6bd4\u4f8b\u7684\u80fd\u91cf\u5f52\u56e0\u6a21\u578b\" (accurate algorithm description)</li> <li>\"Proportional distribution\" \u2192 \"\u6bd4\u4f8b\u5206\u914d\" (correct mathematical concept)</li> <li> <p>\"Energy conservation\" \u2192 \"\u80fd\u91cf\u5b88\u6052\" (proper physics principle)</p> </li> <li> <p>Hardware Architecture Terminology:</p> </li> <li>\"Intel RAPL sensors\" \u2192 \"Intel RAPL \u4f20\u611f\u5668\" (correctly preserved technical name)</li> <li>\"Package, core, DRAM, uncore\" \u2192 \"\u5c01\u88c5\u3001\u5185\u6838\u3001DRAM \u548c\u975e\u5185\u6838\" (accurate hardware component terms)</li> <li>\"Cumulative energy counters\" \u2192 \"\u7d2f\u79ef\u80fd\u91cf\u8ba1\u6570\u5668\" (precise hardware measurement concept)</li> <li> <p>\"P-States/C-States\" \u2192 \"P \u72b6\u6001/C \u72b6\u6001\" (correctly preserved CPU terminology)</p> </li> <li> <p>Mathematical and Algorithmic Precision:</p> </li> <li>Attribution formula preserved exactly with Chinese explanation</li> <li>Complex calculations maintained (150ms / 1000ms \u00d7 20W = 3W)</li> <li>Hierarchical aggregation concepts accurately explained</li> <li>Energy vs Power distinction clearly maintained (\u03bcJ vs \u03bcW)</li> </ol>"},{"location":"kepler/usage/power-attribution.zh-qc/#complex-system-concepts","title":"\ud83d\udcdd Complex System Concepts","text":"<ol> <li>Power Management Architecture:</li> <li>\"Active/Idle power split\" \u2192 \"\u6d3b\u52a8/\u7a7a\u95f2\u529f\u7387\u5206\u5272\" (accurate power domain concept)</li> <li>\"Baseline consumption\" \u2192 \"\u57fa\u7ebf\u6d88\u8017\" (correct system architecture term)</li> <li> <p>\"Dynamic frequency scaling\" \u2192 \"\u52a8\u6001\u9891\u7387\u7f29\u653e\" (precise CPU technology term)</p> </li> <li> <p>Workload Classification:</p> </li> <li>\"CPU-bound vs Memory-bound\" \u2192 \"CPU \u5bc6\u96c6\u578b\u4e0e\u5185\u5b58\u5bc6\u96c6\u578b\" (standard performance analysis terms)</li> <li>\"Compute-intensive\" \u2192 \"\u8ba1\u7b97\u5bc6\u96c6\u578b\" (appropriate workload characterization)</li> <li> <p>\"High-performance computing\" \u2192 \"\u9ad8\u6027\u80fd\u8ba1\u7b97\" (standard HPC terminology)</p> </li> <li> <p>Measurement Limitations:</p> </li> <li>Complex limitation scenarios properly explained in Chinese</li> <li>Technical caveats appropriately communicated</li> <li>Performance trade-offs clearly articulated</li> </ol>"},{"location":"kepler/usage/power-attribution.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All mathematical formulas preserved exactly</li> <li>\u2705 Hardware component names maintained</li> <li>\u2705 Metric names unchanged (<code>kepler_node_cpu_watts{}</code>, etc.)</li> <li>\u2705 Technical diagrams and references intact</li> <li>\u2705 Code examples and calculations accurate</li> </ul>"},{"location":"kepler/usage/power-attribution.zh-qc/#advanced-features-excellence","title":"\ud83d\udcca Advanced Features Excellence","text":"<ol> <li>Multi-Workload Scenarios: Complex hierarchical examples with containers, pods, and VMs accurately translated</li> <li>Performance Analysis: Sophisticated power management concepts properly explained</li> <li>System Architecture: Deep hardware and software interaction concepts maintained</li> </ol>"},{"location":"kepler/usage/power-attribution.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler/usage/power-attribution.zh-qc/#approved-for-technical-architecture-documentation","title":"\u2705 APPROVED FOR TECHNICAL ARCHITECTURE DOCUMENTATION","text":"<p>This translation achieves the highest level of technical accuracy for advanced system architecture documentation. The translator demonstrates deep understanding of power management, CPU architecture, and performance measurement concepts.</p>"},{"location":"kepler/usage/power-attribution.zh-qc/#notes","title":"Notes","text":"<ul> <li>Exceptional handling of complex algorithmic and mathematical concepts</li> <li>Perfect preservation of technical precision in limitation discussions</li> <li>Advanced hardware architecture terminology correctly translated</li> <li>No loss of technical depth or accuracy in any section</li> <li>Suitable for expert-level technical audiences in Chinese-speaking regions</li> </ul> <p>This represents one of the most technically challenging translations in the documentation set, and it achieves excellent quality standards throughout.</p>"},{"location":"kepler-operator/configuration/","title":"PowerMonitor Configuration Guide","text":"<p>This guide covers comprehensive configuration options for the PowerMonitor Custom Resource Definition (CRD). Use these settings to customize your Kepler deployment for different environments, security requirements, and monitoring needs.</p>"},{"location":"kepler-operator/configuration/#basic-configuration","title":"Basic Configuration","text":""},{"location":"kepler-operator/configuration/#metric-levels","title":"Metric Levels","text":"<p>Control which types of metrics Kepler exports. Choose based on your monitoring requirements and performance considerations:</p> <pre><code>spec:\n  kepler:\n    config:\n      metricLevels:\n      - node      # Node-level power consumption (recommended)\n      - pod       # Pod-level power consumption (recommended)\n      - vm        # Virtual machine power consumption\n      - process   # Process-level power consumption (high overhead)\n      - container # Container-level power consumption (high overhead)\n</code></pre> <p>Recommendations:</p> <ul> <li>Production: Use <code>node</code> and <code>pod</code> for balanced monitoring</li> <li>Development: Add <code>container</code> for detailed analysis</li> <li>Minimal overhead: Use <code>node</code> only</li> </ul>"},{"location":"kepler-operator/configuration/#timing-configuration","title":"Timing Configuration","text":"<p>Configure how frequently Kepler samples and reports metrics:</p> <pre><code>spec:\n  kepler:\n    config:\n      sampleRate: 5s      # How often to sample metrics\n      staleness: 500ms    # How long before values are considered stale\n</code></pre> <p>Performance tuning:</p> <ul> <li>Lower CPU usage: Increase <code>sampleRate</code> to <code>10s</code> or <code>15s</code></li> <li>Higher precision: Decrease <code>sampleRate</code> to <code>3s</code> (minimum recommended)</li> <li>Network optimization: Adjust <code>staleness</code> based on network latency</li> </ul>"},{"location":"kepler-operator/configuration/#logging-configuration","title":"Logging Configuration","text":"<p>Set logging levels for troubleshooting and monitoring:</p> <pre><code>spec:\n  kepler:\n    config:\n      logLevel: info  # Options: debug, info, warn, error\n</code></pre> <p>Log levels:</p> <ul> <li><code>debug</code>: Verbose logging for troubleshooting (not for production)</li> <li><code>info</code>: Standard operational logging (recommended)</li> <li><code>warn</code>: Only warnings and errors</li> <li><code>error</code>: Only error messages</li> </ul>"},{"location":"kepler-operator/configuration/#resource-management","title":"Resource Management","text":""},{"location":"kepler-operator/configuration/#terminated-workload-tracking","title":"Terminated Workload Tracking","text":"<p>Control how Kepler handles metrics for terminated pods and containers:</p> <pre><code>spec:\n  kepler:\n    config:\n      maxTerminated: 500  # Track top 500 terminated workloads by power consumption\n</code></pre> <p>Options:</p> <ul> <li><code>500</code> (default): Track top 500 terminated workloads</li> <li><code>0</code>: Disable terminated workload tracking (saves memory)</li> <li><code>-1</code>: Track unlimited terminated workloads (use with caution)</li> </ul>"},{"location":"kepler-operator/configuration/#additional-configmaps","title":"Additional ConfigMaps","text":"<p>Use external ConfigMaps for advanced configuration:</p> <pre><code>spec:\n  kepler:\n    config:\n      additionalConfigMaps:\n      - name: custom-model-config\n      - name: advanced-power-settings\n</code></pre> <p>This allows you to:</p> <ul> <li>Override power models</li> <li>Customize CPU frequency mappings</li> <li>Configure platform-specific settings</li> </ul>"},{"location":"kepler-operator/configuration/#security-configuration","title":"Security Configuration","text":""},{"location":"kepler-operator/configuration/#rbac-mode","title":"RBAC Mode","text":"<p>Configure security and service account permissions:</p> <pre><code>spec:\n  kepler:\n    deployment:\n      security:\n        mode: rbac              # Options: none, rbac\n        allowedSANames:\n        - \"monitoring-sa\"\n        - \"custom-service-account\"\n</code></pre> <p>Security modes:</p> <ul> <li><code>none</code>: No additional security restrictions (default for development)</li> <li><code>rbac</code>: Enable Role-Based Access Control (recommended for production)</li> </ul>"},{"location":"kepler-operator/configuration/#service-account-configuration","title":"Service Account Configuration","text":"<p>When using RBAC mode, specify allowed service accounts:</p> <pre><code>spec:\n  kepler:\n    deployment:\n      security:\n        mode: rbac\n        allowedSANames:\n        - \"prometheus-service-account\"\n        - \"grafana-service-account\"\n</code></pre>"},{"location":"kepler-operator/configuration/#node-selection-and-scheduling","title":"Node Selection and Scheduling","text":""},{"location":"kepler-operator/configuration/#node-selectors","title":"Node Selectors","text":"<p>Control which nodes run Kepler pods:</p> <pre><code>spec:\n  kepler:\n    deployment:\n      nodeSelector:\n        kubernetes.io/os: linux\n        node-type: worker\n        monitoring: enabled\n</code></pre> <p>Common selectors:</p> <ul> <li>OS selection: <code>kubernetes.io/os: linux</code></li> <li>Node roles: <code>node-role.kubernetes.io/worker: \"\"</code></li> <li>Custom labels: <code>monitoring: enabled</code></li> </ul>"},{"location":"kepler-operator/configuration/#tolerations","title":"Tolerations","text":"<p>Allow Kepler to run on nodes with specific taints:</p> <pre><code>spec:\n  kepler:\n    deployment:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      - key: dedicated\n        operator: Equal\n        value: monitoring\n        effect: NoSchedule\n</code></pre> <p>Common tolerations:</p> <ul> <li>Master nodes: Allow monitoring on control plane nodes</li> <li>Dedicated nodes: Run on nodes dedicated to monitoring</li> <li>Special hardware: Nodes with specific hardware requirements</li> </ul>"},{"location":"kepler-operator/configuration/#complete-configuration-examples","title":"Complete Configuration Examples","text":""},{"location":"kepler-operator/configuration/#development-environment","title":"Development Environment","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-dev\nspec:\n  kepler:\n    config:\n      logLevel: debug\n      metricLevels:\n      - node\n      - pod\n      - container\n      sampleRate: 3s\n      staleness: 200ms\n      maxTerminated: 100\n    deployment:\n      security:\n        mode: none\n</code></pre>"},{"location":"kepler-operator/configuration/#production-environment","title":"Production Environment","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-prod\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels:\n      - node\n      - pod\n      sampleRate: 10s\n      staleness: 1s\n      maxTerminated: 1000\n    deployment:\n      security:\n        mode: rbac\n        allowedSANames:\n        - \"prometheus-operator-prometheus\"\n      nodeSelector:\n        kubernetes.io/os: linux\n        node-role.kubernetes.io/worker: \"\"\n      tolerations:\n      - key: dedicated\n        operator: Equal\n        value: monitoring\n        effect: NoSchedule\n</code></pre>"},{"location":"kepler-operator/configuration/#high-performance-monitoring","title":"High-Performance Monitoring","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-hpc\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      - process\n      sampleRate: 1s\n      staleness: 100ms\n      maxTerminated: -1  # Track all terminated workloads\n      additionalConfigMaps:\n      - name: hpc-power-models\n    deployment:\n      security:\n        mode: rbac\n      nodeSelector:\n        node-type: compute-intensive\n      tolerations:\n      - key: high-performance\n        operator: Exists\n        effect: NoSchedule\n</code></pre>"},{"location":"kepler-operator/configuration/#configuration-validation","title":"Configuration Validation","text":""},{"location":"kepler-operator/configuration/#check-configuration","title":"Check Configuration","text":"<p>Verify your PowerMonitor configuration:</p> <pre><code># Check PowerMonitor status\noc get powermonitor power-monitor -o yaml\n\n# Verify conditions\noc describe powermonitor power-monitor\n\n# Check generated resources\noc get all -n power-monitor\n</code></pre>"},{"location":"kepler-operator/configuration/#common-configuration-issues","title":"Common Configuration Issues","text":"<p>Issue: Pods not scheduling on intended nodes</p> <pre><code># Check node labels\noc get nodes --show-labels\n\n# Update nodeSelector\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"nodeSelector\": {\n          \"kubernetes.io/os\": \"linux\"\n        }\n      }\n    }\n  }\n}'\n</code></pre> <p>Issue: High resource usage</p> <pre><code># Reduce metric levels and increase sample rate\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"metricLevels\": [\"node\", \"pod\"],\n        \"sampleRate\": \"10s\"\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"kepler-operator/configuration/#advanced-topics","title":"Advanced Topics","text":"<p>For more advanced configuration scenarios, see:</p> <ul> <li>Monitoring &amp; Troubleshooting - Advanced monitoring setup</li> <li>Migration Guide - Migrating from legacy configurations</li> </ul>"},{"location":"kepler-operator/configuration/index.zh-qc/","title":"Translation Quality Check Report: PowerMonitor Configuration Guide","text":"<p>Original: <code>docs/kepler-operator/configuration/index.md</code> Translation: <code>docs/kepler-operator/configuration/index.zh.md</code> Reverse Translation: <code>docs/kepler-operator/configuration/index.rev.md</code></p>"},{"location":"kepler-operator/configuration/index.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation demonstrates superior technical accuracy for Kubernetes and operator-specific terminology. Complex configuration concepts are clearly explained with appropriate Chinese technical vocabulary.</p>"},{"location":"kepler-operator/configuration/index.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"kepler-operator/configuration/index.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Kubernetes Operator Terminology:</li> <li>\"Custom Resource Definition (CRD)\" \u2192 \"\u81ea\u5b9a\u4e49\u8d44\u6e90\u5b9a\u4e49\uff08CRD\uff09\" (standard K8s term)</li> <li>\"PowerMonitor\" \u2192 \"PowerMonitor\" (correctly preserved as proper noun)</li> <li>\"DaemonSet\" \u2192 \"DaemonSet\" (correctly preserved K8s resource name)</li> <li> <p>\"Tolerations\" \u2192 \"\u5bb9\u5fcd\u5ea6\" (accurate K8s scheduling term)</p> </li> <li> <p>Technical Configuration Concepts:</p> </li> <li>\"Metric Levels\" \u2192 \"\u6307\u6807\u7ea7\u522b\" (precise technical meaning)</li> <li>\"Performance tuning\" \u2192 \"\u6027\u80fd\u8c03\u4f18\" (standard industry term)</li> <li>\"Terminated workloads\" \u2192 \"\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\" (accurate operational concept)</li> <li> <p>\"Node selectors\" \u2192 \"\u8282\u70b9\u9009\u62e9\u5668\" (correct K8s terminology)</p> </li> <li> <p>Security and RBAC Translation:</p> </li> <li>\"Role-Based Access Control\" \u2192 \"\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\" (standard security term)</li> <li>\"Service Account\" \u2192 \"\u670d\u52a1\u8d26\u6237\" (correct K8s identity concept)</li> <li>\"Security restrictions\" \u2192 \"\u5b89\u5168\u9650\u5236\" (appropriate security context)</li> </ol>"},{"location":"kepler-operator/configuration/index.zh-qc/#configuration-specific-excellence","title":"\ud83d\udcdd Configuration-Specific Excellence","text":"<ol> <li>YAML Structure Preservation:</li> <li>All configuration hierarchies maintained (<code>spec.kepler.config</code>, <code>spec.kepler.deployment</code>)</li> <li>Parameter names preserved exactly</li> <li> <p>Indentation and structure perfect</p> </li> <li> <p>Operational Guidance:</p> </li> <li>Production vs Development recommendations clearly distinguished</li> <li>Performance considerations appropriately explained</li> <li> <p>Resource management concepts well-translated</p> </li> <li> <p>Complex Scheduling Concepts:</p> </li> <li>Node affinity and anti-affinity concepts properly explained</li> <li>Taint and toleration relationships correctly described</li> <li>Control plane vs worker node distinctions maintained</li> </ol>"},{"location":"kepler-operator/configuration/index.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All Kubernetes API field names preserved</li> <li>\u2705 YAML configuration syntax maintained</li> <li>\u2705 Resource names and namespaces intact</li> <li>\u2705 Performance tuning parameters accurate</li> <li>\u2705 Security configuration options complete</li> </ul>"},{"location":"kepler-operator/configuration/index.zh-qc/#advanced-features","title":"\ud83d\udcca Advanced Features","text":"<ol> <li>Multi-Environment Configuration: Development, production, and HPC scenarios properly differentiated</li> <li>Security Models: RBAC and none modes clearly explained with use case guidance</li> <li>Resource Management: Complex memory and CPU considerations appropriately documented</li> </ol>"},{"location":"kepler-operator/configuration/index.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"kepler-operator/configuration/index.zh-qc/#approved-for-production-kubernetes-environments","title":"\u2705 APPROVED FOR PRODUCTION KUBERNETES ENVIRONMENTS","text":"<p>This translation achieves enterprise-grade quality for Kubernetes operator documentation. Technical concepts are accurately conveyed with appropriate Chinese terminology for DevOps and platform engineering teams.</p>"},{"location":"kepler-operator/configuration/index.zh-qc/#notes","title":"Notes","text":"<ul> <li>Excellent handling of nested YAML configuration structures</li> <li>Security concepts translated with appropriate formality</li> <li>Performance tuning guidance maintains technical precision</li> <li>No loss of operational knowledge in translation process</li> </ul>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/","title":"Monitoring &amp; Troubleshooting","text":"<p>This guide covers setting up monitoring for your Kepler deployment and resolving common issues. It includes OpenShift-specific monitoring configuration, Grafana integration, and systematic troubleshooting approaches.</p>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#monitoring-setup","title":"Monitoring Setup","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#enable-user-workload-monitoring","title":"Enable User Workload Monitoring","text":"<p>Ensure User Workload Monitoring is enabled in your OpenShift cluster:</p> <pre><code># Check current configuration\noc -n openshift-monitoring get configmap cluster-monitoring-config -o yaml\n</code></pre> <p>If User Workload Monitoring is not enabled, create or update the configuration:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\n</code></pre> <p>Apply the configuration:</p> <pre><code>oc apply -f cluster-monitoring-config.yaml\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#verify-servicemonitor-creation","title":"Verify ServiceMonitor Creation","text":"<p>The Kepler Operator automatically creates ServiceMonitor resources for Prometheus integration:</p> <pre><code># Check ServiceMonitor\noc get servicemonitor -n power-monitor\n\n# View ServiceMonitor configuration\noc get servicemonitor -n power-monitor -o yaml\n</code></pre> <p>Expected output:</p> <pre><code>NAME             AGE\nkepler-exporter  5m\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#access-openshift-metrics","title":"Access OpenShift Metrics","text":"<p>Navigate to Observe \u2192 Metrics in the OpenShift console to view power consumption metrics:</p> <p> OpenShift metrics dashboard showing power consumption overview</p>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#key-metrics-to-monitor","title":"Key Metrics to Monitor","text":"<p>Query these metrics in the OpenShift console:</p> <pre><code># Node power consumption\nkepler_node_power_total\n\n# Pod power consumption\nkepler_pod_power_total\n\n# Container energy consumption\nkepler_container_energy_total\n\n# Process power consumption\nkepler_process_power_total\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#test-metrics-endpoint","title":"Test Metrics Endpoint","text":"<p>Verify that metrics are being exported correctly:</p> <pre><code># Port forward to metrics endpoint\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\n\n# Test metrics endpoint (in another terminal)\ncurl http://localhost:9102/metrics | grep kepler_node_power_total\n\n# Check metrics availability\ncurl -s http://localhost:9102/metrics | grep -c \"kepler_\"\n</code></pre> <p>Expected: Should return multiple metrics starting with <code>kepler_</code>.</p>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#grafana-integration","title":"Grafana Integration","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#import-kepler-dashboard","title":"Import Kepler Dashboard","text":"<p>For advanced visualization, import the official Kepler Grafana dashboard:</p> <pre><code># Download the dashboard JSON\ncurl -O https://raw.githubusercontent.com/sustainable-computing-io/kepler-operator/v1alpha1/hack/dashboard/assets/kepler/dashboard.json\n</code></pre> <p>Then import into your Grafana instance:</p> <ol> <li>Open Grafana</li> <li>Go to Dashboards \u2192 Import</li> <li>Upload the <code>dashboard.json</code> file</li> <li>Configure data source (Prometheus)</li> </ol>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#custom-grafana-queries","title":"Custom Grafana Queries","text":"<p>Useful PromQL queries for Grafana dashboards:</p> <pre><code># Total cluster power consumption\nsum(kepler_node_power_total)\n\n# Power consumption by node\nkepler_node_power_total\n\n# Top 10 power-consuming pods\ntopk(10, kepler_pod_power_total)\n\n# Power consumption rate (watts)\nrate(kepler_node_energy_total[5m])\n\n# CPU vs Power correlation\nkepler_node_power_total / on(instance) kepler_node_cpu_usage_percentage * 100\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#issue-powermonitor-not-creating-daemonset","title":"Issue: PowerMonitor Not Creating DaemonSet","text":"<p>Symptoms:</p> <ul> <li>PowerMonitor exists but no DaemonSet is created</li> <li>Status shows conditions with errors</li> </ul> <p>Diagnosis:</p> <pre><code># Check PowerMonitor status and conditions\noc describe powermonitor power-monitor\n\n# Check operator logs\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n</code></pre> <p>Solutions:</p> <ol> <li>Check RBAC permissions:</li> </ol> <pre><code># Verify operator service account permissions\noc auth can-i create daemonsets --as=system:serviceaccount:openshift-operators:kepler-operator-controller-manager\n\n# If permissions are missing, check ClusterRole\noc describe clusterrole kepler-operator-manager-role\n</code></pre> <ol> <li>Verify resource quotas:</li> </ol> <pre><code># Check namespace resource quotas\noc describe resourcequota -n power-monitor\n\n# Check if quotas are blocking creation\noc get events -n power-monitor | grep -i quota\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#issue-pods-not-scheduling-on-nodes","title":"Issue: Pods Not Scheduling on Nodes","text":"<p>Symptoms:</p> <ul> <li>DaemonSet created but pods remain in Pending state</li> <li>Pods show FailedScheduling events</li> </ul> <p>Diagnosis:</p> <pre><code># Check pod status and events\noc get pods -n power-monitor\noc describe pods -n power-monitor\n\n# Check node labels and taints\noc get nodes --show-labels\noc describe nodes | grep -i taint\n</code></pre> <p>Solutions:</p> <ol> <li>Update node selector:</li> </ol> <pre><code># Check available node labels\noc get nodes --show-labels | grep kubernetes.io/os\n\n# Update PowerMonitor nodeSelector\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"nodeSelector\": {\n          \"kubernetes.io/os\": \"linux\"\n        }\n      }\n    }\n  }\n}'\n</code></pre> <ol> <li>Add tolerations for tainted nodes:</li> </ol> <pre><code># Add toleration for master nodes\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"tolerations\": [\n          {\n            \"key\": \"node-role.kubernetes.io/master\",\n            \"operator\": \"Exists\",\n            \"effect\": \"NoSchedule\"\n          }\n        ]\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#issue-missing-metrics-in-monitoring","title":"Issue: Missing Metrics in Monitoring","text":"<p>Symptoms:</p> <ul> <li>Pods are running but metrics don't appear in OpenShift console</li> <li>ServiceMonitor exists but no data in Prometheus</li> </ul> <p>Diagnosis:</p> <pre><code># Check ServiceMonitor configuration\noc get servicemonitor -n power-monitor -o yaml\n\n# Check service endpoints\noc get endpoints -n power-monitor\n\n# Test metrics endpoint directly\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\ncurl http://localhost:9102/metrics | head -20\n</code></pre> <p>Solutions:</p> <ol> <li>Verify User Workload Monitoring:</li> </ol> <pre><code># Check if User Workload Monitoring is enabled\noc -n openshift-monitoring get configmap cluster-monitoring-config -o yaml\n\n# Check user workload monitoring pods\noc get pods -n openshift-user-workload-monitoring\n</code></pre> <ol> <li>Check ServiceMonitor labels:</li> </ol> <pre><code># Ensure ServiceMonitor has correct labels for discovery\noc patch servicemonitor kepler-exporter -n power-monitor --type='merge' -p='\n{\n  \"metadata\": {\n    \"labels\": {\n      \"app.kubernetes.io/name\": \"kepler-exporter\"\n    }\n  }\n}'\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#issue-high-resource-usage","title":"Issue: High Resource Usage","text":"<p>Symptoms:</p> <ul> <li>Kepler pods consuming excessive CPU or memory</li> <li>Cluster performance degradation</li> </ul> <p>Diagnosis:</p> <pre><code># Check resource usage\noc top pods -n power-monitor\n\n# Check current configuration\noc get powermonitor power-monitor -o yaml | grep -A 10 config\n</code></pre> <p>Solutions:</p> <ol> <li>Reduce metric granularity:</li> </ol> <pre><code># Reduce to node and pod metrics only\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"metricLevels\": [\"node\", \"pod\"],\n        \"sampleRate\": \"10s\"\n      }\n    }\n  }\n}'\n</code></pre> <ol> <li>Limit terminated workload tracking:</li> </ol> <pre><code># Reduce terminated workload tracking\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"maxTerminated\": 100\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#advanced-debugging","title":"Advanced Debugging","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#enable-debug-logging","title":"Enable Debug Logging","text":"<p>For detailed troubleshooting, enable debug logging:</p> <pre><code># Enable debug logging\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"logLevel\": \"debug\"\n      }\n    }\n  }\n}'\n\n# View debug logs\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter -f\n</code></pre> <p>Remember to disable debug logging in production:</p> <pre><code>oc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"logLevel\": \"info\"\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#collect-diagnostic-information","title":"Collect Diagnostic Information","text":"<p>Create a diagnostic script for support:</p> <pre><code>#!/bin/bash\n# kepler-diagnostics.sh\n\necho \"=== Kepler Diagnostics ===\"\necho \"Date: $(date)\"\necho \"Cluster: $(oc cluster-info | head -1)\"\necho\n\necho \"=== PowerMonitor Status ===\"\noc get powermonitor power-monitor -o wide\necho\n\necho \"=== PowerMonitor Conditions ===\"\noc describe powermonitor power-monitor | grep -A 20 \"Conditions:\"\necho\n\necho \"=== DaemonSet Status ===\"\noc get daemonset -n power-monitor\necho\n\necho \"=== Pod Status ===\"\noc get pods -n power-monitor -o wide\necho\n\necho \"=== Recent Events ===\"\noc get events -n power-monitor --sort-by='.lastTimestamp' | tail -10\necho\n\necho \"=== ServiceMonitor ===\"\noc get servicemonitor -n power-monitor\necho\n\necho \"=== Operator Logs (last 50 lines) ===\"\noc logs -n openshift-operators deployment/kepler-operator-controller-manager --tail=50\n</code></pre> <p>Run with:</p> <pre><code>chmod +x kepler-diagnostics.sh\n./kepler-diagnostics.sh &gt; kepler-diagnostics-$(date +%Y%m%d-%H%M%S).log\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#performance-tuning","title":"Performance Tuning","text":""},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#recommended-production-settings","title":"Recommended Production Settings","text":"<p>For production environments with performance considerations:</p> <pre><code>spec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]  # Avoid process/container levels\n      sampleRate: 10s            # Reduce sampling frequency\n      maxTerminated: 500         # Limit memory usage\n    deployment:\n      nodeSelector:\n        node-role.kubernetes.io/worker: \"\"  # Avoid master nodes\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#resource-limits","title":"Resource Limits","text":"<p>Set resource limits for Kepler pods:</p> <pre><code>spec:\n  kepler:\n    deployment:\n      resources:\n        limits:\n          cpu: 200m\n          memory: 256Mi\n        requests:\n          cpu: 100m\n          memory: 128Mi\n</code></pre>"},{"location":"kepler-operator/configuration/monitoring-troubleshooting/#getting-help","title":"Getting Help","text":"<p>If you continue to experience issues:</p> <ol> <li>Check the logs with the diagnostic script above</li> <li>Search existing issues in the Kepler Operator repository</li> <li>Open a new issue with diagnostic information</li> <li>Join the community - See Support for community channels</li> </ol>"},{"location":"kepler-operator/migration/","title":"Migration Guide: Kepler CRD to PowerMonitor","text":"<p>This guide helps you migrate from the deprecated Kepler CRD to the modern PowerMonitor CRD. The PowerMonitor provides enhanced configuration options, improved resource management, and better OpenShift integration.</p>"},{"location":"kepler-operator/migration/#migration-overview","title":"Migration Overview","text":""},{"location":"kepler-operator/migration/#why-migrate","title":"Why Migrate?","text":"<p>Deprecation Notice</p> <p>The Kepler CRD is deprecated and will be removed in a future release. Migrate to PowerMonitor to ensure continued support and access to new features.</p> <p>Benefits of PowerMonitor:</p> <ul> <li>Enhanced security configurations</li> <li>Improved resource management</li> <li>Better OpenShift integration</li> <li>More granular metric control</li> <li>Active development and support</li> </ul>"},{"location":"kepler-operator/migration/#migration-impact","title":"Migration Impact","text":"<p>Zero-downtime migration: The migration process allows you to run both CRDs simultaneously during the transition, ensuring continuous monitoring.</p> <p>Configuration differences: Some configuration options have changed or been reorganized. This guide provides mapping between old and new configurations.</p>"},{"location":"kepler-operator/migration/#pre-migration-assessment","title":"Pre-Migration Assessment","text":""},{"location":"kepler-operator/migration/#step-1-inventory-current-deployment","title":"Step 1: Inventory Current Deployment","text":"<p>Document your existing Kepler CRD configuration:</p> <pre><code># List existing Kepler resources\noc get kepler --all-namespaces\n\n# Export current configuration\noc get kepler kepler -o yaml &gt; kepler-backup.yaml\n\n# Save current DaemonSet configuration for reference\noc get daemonset -n kepler -o yaml &gt; kepler-daemonset-backup.yaml\n</code></pre>"},{"location":"kepler-operator/migration/#step-2-review-configuration-mapping","title":"Step 2: Review Configuration Mapping","text":"<p>Common configuration changes:</p> Kepler CRD (Old) PowerMonitor CRD (New) <code>spec.exporter.deployment.port</code> Managed automatically <code>spec.exporter.config.logLevel</code> <code>spec.kepler.config.logLevel</code> <code>spec.nodeSelector</code> <code>spec.kepler.deployment.nodeSelector</code> <code>spec.tolerations</code> <code>spec.kepler.deployment.tolerations</code>"},{"location":"kepler-operator/migration/#migration-process","title":"Migration Process","text":""},{"location":"kepler-operator/migration/#step-1-create-equivalent-powermonitor","title":"Step 1: Create Equivalent PowerMonitor","text":""},{"location":"kepler-operator/migration/#example-migration-basic-configuration","title":"Example Migration: Basic Configuration","text":"<p>Old Kepler CRD:</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: Kepler\nmetadata:\n  name: kepler\nspec:\n  exporter:\n    deployment:\n      port: 9102\n    config:\n      logLevel: info\n  nodeSelector:\n    kubernetes.io/os: linux\n</code></pre> <p>New PowerMonitor CRD:</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n    deployment:\n      nodeSelector:\n        kubernetes.io/os: linux\n      security:\n        mode: none\n</code></pre>"},{"location":"kepler-operator/migration/#example-migration-advanced-configuration","title":"Example Migration: Advanced Configuration","text":"<p>Old Kepler CRD:</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: Kepler\nmetadata:\n  name: kepler\nspec:\n  exporter:\n    config:\n      logLevel: warn\n  nodeSelector:\n    node-role.kubernetes.io/worker: \"\"\n  tolerations:\n  - key: node-role.kubernetes.io/master\n    operator: Exists\n    effect: NoSchedule\n</code></pre> <p>New PowerMonitor CRD:</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]\n      sampleRate: 10s\n      maxTerminated: 500\n    deployment:\n      nodeSelector:\n        node-role.kubernetes.io/worker: \"\"\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      security:\n        mode: rbac\n</code></pre>"},{"location":"kepler-operator/migration/#step-2-deploy-powermonitor-alongside-existing-kepler","title":"Step 2: Deploy PowerMonitor Alongside Existing Kepler","text":"<p>Deploy the PowerMonitor while keeping the old Kepler CRD running:</p> <pre><code># Create PowerMonitor configuration\ncat &gt; power-monitor.yaml &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels: [node, pod, vm]\n      sampleRate: 5s\n    deployment:\n      security:\n        mode: none\nEOF\n\n# Apply PowerMonitor\noc apply -f power-monitor.yaml\n</code></pre>"},{"location":"kepler-operator/migration/#step-3-verify-powermonitor-functionality","title":"Step 3: Verify PowerMonitor Functionality","text":"<p>Ensure the PowerMonitor is working correctly:</p> <pre><code># Check PowerMonitor status\noc get powermonitor power-monitor -o wide\n\n# Verify DaemonSet creation\noc get daemonset -n power-monitor\n\n# Check pods are running\noc get pods -n power-monitor\n\n# Test metrics endpoint\noc port-forward -n power-monitor svc/kepler-exporter 9103:9102 &amp;\ncurl http://localhost:9103/metrics | head -10\n</code></pre>"},{"location":"kepler-operator/migration/#step-4-update-monitoring-configuration","title":"Step 4: Update Monitoring Configuration","text":"<p>If you have existing monitoring setup, update it to use the new PowerMonitor:</p>"},{"location":"kepler-operator/migration/#prometheus-servicemonitor","title":"Prometheus ServiceMonitor","text":"<p>Update or create ServiceMonitor for the new namespace:</p> <pre><code>apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: kepler-exporter\n  namespace: power-monitor\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kepler-exporter\n  endpoints:\n  - port: http\n    path: /metrics\n</code></pre>"},{"location":"kepler-operator/migration/#grafana-dashboard","title":"Grafana Dashboard","text":"<p>Update Grafana queries to use the new service:</p> <pre><code># Update queries from:\n{__name__=~\"kepler_.*\", job=\"kepler\"}\n\n# To:\n{__name__=~\"kepler_.*\", job=\"kepler-exporter\", namespace=\"power-monitor\"}\n</code></pre>"},{"location":"kepler-operator/migration/#step-5-remove-old-kepler-crd","title":"Step 5: Remove Old Kepler CRD","text":"<p>After verifying the PowerMonitor works correctly:</p> <pre><code># Remove old Kepler resource\noc delete kepler kepler\n\n# Clean up old namespace (if different)\noc delete namespace kepler\n\n# Verify cleanup\noc get kepler --all-namespaces\n</code></pre>"},{"location":"kepler-operator/migration/#configuration-migration-reference","title":"Configuration Migration Reference","text":""},{"location":"kepler-operator/migration/#complete-mapping-table","title":"Complete Mapping Table","text":"Old Configuration New Configuration Notes <code>spec.exporter.config.logLevel</code> <code>spec.kepler.config.logLevel</code> Same values <code>spec.exporter.deployment.port</code> Auto-managed Port 9102 by default <code>spec.nodeSelector</code> <code>spec.kepler.deployment.nodeSelector</code> Same format <code>spec.tolerations</code> <code>spec.kepler.deployment.tolerations</code> Same format N/A <code>spec.kepler.config.metricLevels</code> New: control metric granularity N/A <code>spec.kepler.config.sampleRate</code> New: control sampling frequency N/A <code>spec.kepler.deployment.security</code> New: RBAC and security options N/A <code>spec.kepler.config.maxTerminated</code> New: control terminated workload tracking"},{"location":"kepler-operator/migration/#migration-script","title":"Migration Script","text":"<p>Automate the migration with this script:</p> <pre><code>#!/bin/bash\n# migrate-kepler-to-powermonitor.sh\n\nset -e\n\nKEPLER_NAME=\"${1:-kepler}\"\nPOWERMONITOR_NAME=\"${2:-power-monitor}\"\n\necho \"Migrating Kepler CRD '${KEPLER_NAME}' to PowerMonitor '${POWERMONITOR_NAME}'\"\n\n# Export current Kepler configuration\necho \"Exporting current Kepler configuration...\"\noc get kepler ${KEPLER_NAME} -o yaml &gt; kepler-backup-$(date +%Y%m%d-%H%M%S).yaml\n\n# Extract configuration values\nLOG_LEVEL=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.exporter.config.logLevel}' 2&gt;/dev/null || echo \"info\")\nNODE_SELECTOR=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.nodeSelector}' 2&gt;/dev/null || echo \"{}\")\nTOLERATIONS=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.tolerations}' 2&gt;/dev/null || echo \"[]\")\n\necho \"Creating PowerMonitor with equivalent configuration...\"\n\n# Create PowerMonitor\ncat &gt; powermonitor-migration.yaml &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: ${POWERMONITOR_NAME}\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\n    migrated-from: kepler-crd\nspec:\n  kepler:\n    config:\n      logLevel: ${LOG_LEVEL}\n      metricLevels: [node, pod, vm]\n      sampleRate: 5s\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\nEOF\n\n# Add nodeSelector if it exists\nif [ \"${NODE_SELECTOR}\" != \"{}\" ]; then\n  echo \"      nodeSelector:\" &gt;&gt; powermonitor-migration.yaml\n  echo \"${NODE_SELECTOR}\" | sed 's/^/        /' &gt;&gt; powermonitor-migration.yaml\nfi\n\n# Add tolerations if they exist\nif [ \"${TOLERATIONS}\" != \"[]\" ]; then\n  echo \"      tolerations:\" &gt;&gt; powermonitor-migration.yaml\n  echo \"${TOLERATIONS}\" | sed 's/^/      /' &gt;&gt; powermonitor-migration.yaml\nfi\n\n# Apply PowerMonitor\noc apply -f powermonitor-migration.yaml\n\necho \"Waiting for PowerMonitor to be ready...\"\nsleep 10\n\n# Verify PowerMonitor\nif oc get powermonitor ${POWERMONITOR_NAME} &amp;&gt;/dev/null; then\n  echo \"PowerMonitor created successfully!\"\n  echo \"Verifying DaemonSet...\"\n\n  # Wait for DaemonSet\n  timeout 60s bash -c \"while ! oc get daemonset -n power-monitor | grep -q kepler; do sleep 2; done\"\n\n  echo \"Migration complete!\"\n  echo \"Run the following commands to verify:\"\n  echo \"  oc get powermonitor ${POWERMONITOR_NAME}\"\n  echo \"  oc get pods -n power-monitor\"\n  echo \"\"\n  echo \"After verification, remove the old Kepler CRD:\"\n  echo \"  oc delete kepler ${KEPLER_NAME}\"\nelse\n  echo \"Migration failed. Check the PowerMonitor configuration.\"\n  exit 1\nfi\n</code></pre> <p>Usage:</p> <pre><code>chmod +x migrate-kepler-to-powermonitor.sh\n./migrate-kepler-to-powermonitor.sh [kepler-name] [powermonitor-name]\n</code></pre>"},{"location":"kepler-operator/migration/#rollback-procedure","title":"Rollback Procedure","text":"<p>If you need to rollback to the Kepler CRD:</p>"},{"location":"kepler-operator/migration/#step-1-recreate-kepler-crd","title":"Step 1: Recreate Kepler CRD","text":"<pre><code># Apply your backed-up Kepler configuration\noc apply -f kepler-backup.yaml\n</code></pre>"},{"location":"kepler-operator/migration/#step-2-remove-powermonitor","title":"Step 2: Remove PowerMonitor","text":"<pre><code># Remove PowerMonitor\noc delete powermonitor power-monitor\n\n# Clean up namespace\noc delete namespace power-monitor\n</code></pre>"},{"location":"kepler-operator/migration/#step-3-verify-kepler-crd","title":"Step 3: Verify Kepler CRD","text":"<pre><code># Check Kepler status\noc get kepler kepler\noc get pods -n kepler\n</code></pre>"},{"location":"kepler-operator/migration/#post-migration-tasks","title":"Post-Migration Tasks","text":""},{"location":"kepler-operator/migration/#update-documentation","title":"Update Documentation","text":"<ul> <li>Update internal documentation to reference PowerMonitor</li> <li>Update automation scripts and CI/CD pipelines</li> <li>Train team members on new configuration options</li> </ul>"},{"location":"kepler-operator/migration/#monitoring-integration","title":"Monitoring Integration","text":"<ul> <li>Update alerting rules for new namespace and service names</li> <li>Verify metrics collection in monitoring systems</li> <li>Update dashboards with new service discovery</li> </ul>"},{"location":"kepler-operator/migration/#cleanup","title":"Cleanup","text":"<ul> <li>Remove backup files after successful migration</li> <li>Clean up old monitoring configurations</li> <li>Update Infrastructure as Code (IaC) templates</li> </ul>"},{"location":"kepler-operator/migration/#getting-help","title":"Getting Help","text":"<p>If you encounter issues during migration:</p> <ol> <li>Check logs: Use the diagnostic commands in the Troubleshooting Guide</li> <li>Community support: See Support for community channels</li> <li>Report issues: Create an issue in the Kepler Operator repository</li> </ol>"},{"location":"kepler-operator/openshift/","title":"Kepler Operator on OpenShift","text":""},{"location":"kepler-operator/openshift/#overview","title":"Overview","text":"<p>The Kepler Operator provides a streamlined way to deploy and manage Kepler (Kubernetes Efficient Power Level Exporter) on OpenShift clusters. The operator uses the modern PowerMonitor Custom Resource Definition to provide enhanced configuration options and improved resource management.</p>"},{"location":"kepler-operator/openshift/#migration-notice","title":"Migration Notice","text":"<p>Important</p> <p>The Kepler CRD is deprecated and will be removed in a future release. Please use PowerMonitor instead for all new deployments and migrate existing installations to ensure continued support.</p>"},{"location":"kepler-operator/openshift/#prerequisites","title":"Prerequisites","text":"<p>Before installing the Kepler Operator, ensure you have:</p> <ul> <li>OpenShift cluster access with <code>cluster-admin</code> privileges</li> <li>User Workload Monitoring enabled in your cluster</li> <li>Access to OperatorHub (for UI installation)</li> <li><code>oc</code> CLI tool installed (for command-line operations)</li> </ul> <p>Note</p> <p>Your operator will automatically use the current context in your kubeconfig file (i.e. whatever cluster <code>oc cluster-info</code> shows).</p>"},{"location":"kepler-operator/openshift/#installation-options","title":"Installation Options","text":"<p>Choose the installation method that best fits your workflow:</p>"},{"location":"kepler-operator/openshift/#quick-start-guide-recommended","title":"Quick Start Guide (Recommended)","text":"<p>Best for users new to the Kepler Operator who want to get up and running quickly using the OpenShift web console.</p> <ul> <li>Install via OperatorHub</li> <li>Create basic PowerMonitor instance</li> <li>Verify installation</li> <li>Access initial metrics</li> </ul>"},{"location":"kepler-operator/openshift/#cli-installation-guide","title":"CLI Installation Guide","text":"<p>Perfect for automation, scripting, or users who prefer command-line workflows.</p> <ul> <li>Install operator via command line</li> <li>Deploy PowerMonitor using YAML</li> <li>Verification commands</li> <li>Scripting examples</li> </ul>"},{"location":"kepler-operator/openshift/#post-installation","title":"Post-Installation","text":"<p>Once you have the operator installed, explore these guides:</p>"},{"location":"kepler-operator/openshift/#configuration-guide","title":"Configuration Guide","text":"<p>Learn how to customize your Kepler deployment:</p> <ul> <li>Metric levels and sampling rates</li> <li>Security configurations</li> <li>Resource management</li> <li>Node selection and tolerations</li> <li>Advanced configuration options</li> </ul>"},{"location":"kepler-operator/openshift/#monitoring-troubleshooting","title":"Monitoring &amp; Troubleshooting","text":"<p>Set up monitoring and resolve common issues:</p> <ul> <li>User Workload Monitoring setup</li> <li>OpenShift metrics dashboard</li> <li>Grafana integration</li> <li>Common troubleshooting scenarios</li> </ul>"},{"location":"kepler-operator/openshift/#migration","title":"Migration","text":""},{"location":"kepler-operator/openshift/#migration-guide","title":"Migration Guide","text":"<p>If you're upgrading from the deprecated Kepler CRD:</p> <ul> <li>Step-by-step migration process</li> <li>Configuration comparison</li> <li>Rollback procedures</li> </ul>"},{"location":"kepler-operator/openshift/#getting-help","title":"Getting Help","text":"<ul> <li>Project Resources - Additional documentation and resources</li> <li>Support - Community support and contribution guidelines</li> </ul>"},{"location":"kepler-operator/openshift/cli-installation/","title":"CLI Installation Guide","text":"<p>This guide shows how to install the Kepler Operator and create PowerMonitor instances using the OpenShift command-line interface. This approach is ideal for automation, scripting, and users who prefer terminal-based workflows.</p>"},{"location":"kepler-operator/openshift/cli-installation/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have:</p> <ul> <li><code>oc</code> CLI tool installed and configured</li> <li>Cluster admin privileges on your OpenShift cluster</li> <li>Current context pointing to target cluster (<code>oc cluster-info</code>)</li> </ul>"},{"location":"kepler-operator/openshift/cli-installation/#step-1-install-the-operator","title":"Step 1: Install the Operator","text":""},{"location":"kepler-operator/openshift/cli-installation/#create-operator-subscription","title":"Create Operator Subscription","text":"<p>Install the Kepler Operator from the community catalog:</p> <pre><code>oc apply -f - &lt;&lt; EOF\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: kepler-operator\n  namespace: openshift-operators\nspec:\n  channel: alpha\n  name: kepler-operator\n  source: community-operators\n  sourceNamespace: openshift-marketplace\nEOF\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#verify-installation","title":"Verify Installation","text":"<p>Wait for the operator to be ready:</p> <pre><code># Check subscription status\noc get subscription kepler-operator -n openshift-operators\n\n# Check ClusterServiceVersion (CSV)\noc get csv -n openshift-operators | grep kepler\n\n# Wait for operator pod to be running\noc get pods -n openshift-operators | grep kepler-operator\n</code></pre> <p>Expected output when ready:</p> <pre><code>kepler-operator-controller-manager-xxx   2/2     Running   0   2m\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#step-2-create-powermonitor-instance","title":"Step 2: Create PowerMonitor Instance","text":""},{"location":"kepler-operator/openshift/cli-installation/#basic-powermonitor-configuration","title":"Basic PowerMonitor Configuration","text":"<p>Create a PowerMonitor with default settings:</p> <pre><code>oc apply -f - &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n      staleness: 500ms\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\nEOF\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#verify-powermonitor-deployment","title":"Verify PowerMonitor Deployment","text":"<p>Check that the PowerMonitor was created and is operational:</p> <pre><code># Check PowerMonitor status\noc get powermonitor power-monitor -o wide\n\n# Check conditions\noc describe powermonitor power-monitor\n\n# Verify DaemonSet creation\noc get daemonset -n power-monitor\n\n# Check pods on all nodes\noc get pods -n power-monitor -o wide\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#step-3-verification-commands","title":"Step 3: Verification Commands","text":""},{"location":"kepler-operator/openshift/cli-installation/#check-operator-health","title":"Check Operator Health","text":"<pre><code># Operator pod status\noc get pods -n openshift-operators | grep kepler-operator\n\n# Operator logs\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#check-powermonitor-resources","title":"Check PowerMonitor Resources","text":"<pre><code># PowerMonitor status and conditions\noc get powermonitor power-monitor -o yaml\n\n# DaemonSet details\noc describe daemonset -n power-monitor\n\n# Pod logs\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#test-metrics-endpoint","title":"Test Metrics Endpoint","text":"<pre><code># Port forward to metrics endpoint\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102 &amp;\n\n# Test metrics (in another terminal)\ncurl http://localhost:9102/metrics | head -20\n\n# Stop port forwarding\npkill -f \"port-forward.*9102\"\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#automation-scripts","title":"Automation Scripts","text":""},{"location":"kepler-operator/openshift/cli-installation/#complete-installation-script","title":"Complete Installation Script","text":"<p>Save this as <code>install-kepler-operator.sh</code>:</p> <pre><code>#!/bin/bash\nset -e\n\necho \"Installing Kepler Operator...\"\n\n# Install operator\noc apply -f - &lt;&lt; EOF\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: kepler-operator\n  namespace: openshift-operators\nspec:\n  channel: alpha\n  name: kepler-operator\n  source: community-operators\n  sourceNamespace: openshift-marketplace\nEOF\n\necho \"Waiting for operator to be ready...\"\nwhile ! oc get csv -n openshift-operators | grep -q kepler.*Succeeded; do\n  echo \"Waiting for CSV to be ready...\"\n  sleep 10\ndone\n\necho \"Creating PowerMonitor instance...\"\noc apply -f - &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n    deployment:\n      security:\n        mode: none\nEOF\n\necho \"Waiting for DaemonSet to be ready...\"\nwhile ! oc get daemonset -n power-monitor 2&gt;/dev/null | grep -q kepler; do\n  echo \"Waiting for DaemonSet creation...\"\n  sleep 5\ndone\n\necho \"Installation complete!\"\necho \"Check status with: oc get powermonitor power-monitor\"\n</code></pre> <p>Make it executable and run:</p> <pre><code>chmod +x install-kepler-operator.sh\n./install-kepler-operator.sh\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#uninstall-script","title":"Uninstall Script","text":"<p>Save this as <code>uninstall-kepler-operator.sh</code>:</p> <pre><code>#!/bin/bash\nset -e\n\necho \"Removing PowerMonitor instance...\"\noc delete powermonitor power-monitor --ignore-not-found=true\n\necho \"Waiting for resources cleanup...\"\nsleep 10\n\necho \"Removing operator subscription...\"\noc delete subscription kepler-operator -n openshift-operators --ignore-not-found=true\n\necho \"Removing CSV...\"\noc delete csv -n openshift-operators $(oc get csv -n openshift-operators -o name | grep kepler) --ignore-not-found=true\n\necho \"Uninstall complete!\"\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#configuration-files","title":"Configuration Files","text":"<p>For production deployments, save configurations to files:</p>"},{"location":"kepler-operator/openshift/cli-installation/#powermonitor-basicyaml","title":"powermonitor-basic.yaml","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels: [node, pod, vm]\n      sampleRate: 5s\n    deployment:\n      security:\n        mode: none\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#powermonitor-productionyaml","title":"powermonitor-production.yaml","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]\n      sampleRate: 10s\n      staleness: 1s\n      maxTerminated: 1000\n    deployment:\n      security:\n        mode: rbac\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n</code></pre> <p>Apply with:</p> <pre><code>oc apply -f powermonitor-production.yaml\n</code></pre>"},{"location":"kepler-operator/openshift/cli-installation/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Advanced configuration options</li> <li>Monitoring Setup - Set up monitoring and troubleshooting</li> </ul>"},{"location":"kepler-operator/openshift/quickstart/","title":"Quick Start Guide: OpenShift OperatorHub","text":"<p>This guide walks you through installing the Kepler Operator using the OpenShift web console and creating your first PowerMonitor instance.</p>"},{"location":"kepler-operator/openshift/quickstart/#step-1-install-the-operator","title":"Step 1: Install the Operator","text":""},{"location":"kepler-operator/openshift/quickstart/#access-operatorhub","title":"Access OperatorHub","text":"<p>Navigate to Operators \u2192 OperatorHub in the OpenShift web console and search for \"kepler\":</p> <p> Kepler operator available in OperatorHub</p>"},{"location":"kepler-operator/openshift/quickstart/#start-installation","title":"Start Installation","text":"<p>Click Install to begin the installation process:</p> <p> Starting the Kepler operator installation</p>"},{"location":"kepler-operator/openshift/quickstart/#monitor-progress","title":"Monitor Progress","text":"<p>Watch the installation progress in the console:</p> <p> Operator installation in progress</p>"},{"location":"kepler-operator/openshift/quickstart/#verify-installation","title":"Verify Installation","text":"<p>Once the installation completes successfully:</p> <p> Operator successfully installed and ready for use</p>"},{"location":"kepler-operator/openshift/quickstart/#step-2-create-powermonitor-instance","title":"Step 2: Create PowerMonitor Instance","text":""},{"location":"kepler-operator/openshift/quickstart/#access-operator-details","title":"Access Operator Details","text":"<p>Navigate to the operator details to see available APIs:</p> <p> Kepler operator details showing PowerMonitor and deprecated Kepler APIs</p>"},{"location":"kepler-operator/openshift/quickstart/#open-powermonitor-tab","title":"Open PowerMonitor Tab","text":"<p>Click on the PowerMonitor tab to access the modern API:</p> <p> PowerMonitor API tab in operator details</p>"},{"location":"kepler-operator/openshift/quickstart/#create-powermonitor","title":"Create PowerMonitor","text":"<p>Click Create PowerMonitor to open the YAML editor:</p> <p> PowerMonitor YAML configuration in OpenShift editor</p> <p>Use this basic configuration:</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n      staleness: 500ms\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\n</code></pre>"},{"location":"kepler-operator/openshift/quickstart/#step-3-verify-deployment","title":"Step 3: Verify Deployment","text":""},{"location":"kepler-operator/openshift/quickstart/#check-powermonitor-status","title":"Check PowerMonitor Status","text":"<p>View the PowerMonitor instance details and status:</p> <p> PowerMonitor instance details and status conditions</p>"},{"location":"kepler-operator/openshift/quickstart/#verify-daemonset","title":"Verify DaemonSet","text":"<p>Check that the DaemonSet is running on your nodes:</p> <pre><code>oc get powermonitor power-monitor -o wide\noc get daemonset -n power-monitor\noc get pods -n power-monitor -o wide\n</code></pre>"},{"location":"kepler-operator/openshift/quickstart/#step-4-access-metrics","title":"Step 4: Access Metrics","text":""},{"location":"kepler-operator/openshift/quickstart/#openshift-metrics-console","title":"OpenShift Metrics Console","text":"<p>Navigate to Observe \u2192 Metrics in the OpenShift console:</p> <p> OpenShift metrics dashboard showing power consumption overview</p>"},{"location":"kepler-operator/openshift/quickstart/#view-power-metrics","title":"View Power Metrics","text":"<p>Explore detailed power consumption metrics:</p> <p> Detailed OpenShift metrics dashboard with power consumption charts and node information</p>"},{"location":"kepler-operator/openshift/quickstart/#next-steps","title":"Next Steps","text":"<p>Now that you have Kepler running, explore these guides:</p> <ul> <li>Configuration Guide - Customize your deployment</li> <li>Monitoring Setup - Advanced monitoring and Grafana</li> <li>Troubleshooting - Common issues and solutions</li> </ul>"},{"location":"kepler-operator/openshift/quickstart/#quick-reference","title":"Quick Reference","text":""},{"location":"kepler-operator/openshift/quickstart/#common-commands","title":"Common Commands","text":"<pre><code># Check PowerMonitor status\noc get powermonitor power-monitor\n\n# View operator logs\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n\n# Check Kepler pod logs\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter\n\n# Test metrics endpoint\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\ncurl http://localhost:9102/metrics\n</code></pre>"},{"location":"project/adopters/","title":"Kepler Adopters","text":""},{"location":"project/adopters/#kepler-adopters","title":"Kepler Adopters","text":"<p>Organizations below all are using Kepler.</p> <p>To join this list, please follow these instructions.</p> <p></p> <p>Kepler</p>"},{"location":"project/contributing/","title":"Contributing","text":"<p>We welcome all kinds of contributions to Kepler from the community!</p> <p>For an in-depth guide on how to get started, checkout the Contributing Guide here.</p>"},{"location":"project/contributing/#kepler-adopters","title":"Kepler Adopters","text":"<p>You and your organization are using Kepler? That's awesome. We would love to hear from you! \ud83d\udc9a</p> <p>The yaml file in here contains a list of all Kepler adopters. If you want to add your organization to Kepler's list, just add an entry there and once merged you will be found under Kepler Adopters.</p>"},{"location":"project/contributing/#rendering-adopters","title":"Rendering Adopters","text":"<p>As part of adding an organization to the Kepler Adopters page, when data/adopters.yaml is updated, gomplate must be installed. The Kepler website uses it to render the Kepler Adopters page properly.</p> <p>Note</p> <p>These steps are only needed if data/adopters.yaml is updated as part of adding an organization to the Kepler Adopters page.</p> <ol> <li> <p>Install pkgx</p> <pre><code>curl -Ssf https://pkgx.sh | sh\n</code></pre> </li> <li> <p>Install gomplate</p> <pre><code>pkgx +gomplate.ca^v3.11.7\n</code></pre> </li> <li> <p>Enter the output from the previous command to update PATH. Example:</p> <pre><code>PATH=\"$HOME/.pkgx/gomplate.ca/v3.11.7/bin${PATH:+:$PATH}\"\n</code></pre> </li> <li> <p>Update adopters page using data from data/adopters.yaml</p> <pre><code>gomplate -d adopters=./data/adopters.yaml -f templates/adopters.md -o docs/project/adopters.md\n</code></pre> </li> </ol>"},{"location":"project/contributing/#adding-your-organization","title":"Adding Your Organization","text":"<p>To do so follow these steps:</p> <ol> <li>Fork the kepler-doc repository.</li> <li>Clone it locally with <code>git clone https://github.com/&lt;YOUR-GH-USERNAME&gt;/kepler-doc.git</code>.</li> <li>(Optional) Add the logo of your organization to docs/fig/logos. Good practice is for the logo to be called e.g. MY-ORG.png (=&gt; docs/fig/logos/default.svg is the Kepler logo, it is used when no organization logo is provided.)</li> <li> <p>Add an entry to the YAML file with the name of your organization, url that links to its website, and the path to the logo. Example:</p> <pre><code>    - name: Kepler\n      url: https://sustainable-computing.io/\n      logo: logos/kepler.svg\n</code></pre> </li> <li> <p>Verify the Kepler Adopters page updated properly by running the following commands (see    Install MkDocs    for more details on how to preview the documentation from a build):</p> <pre><code>mkdocs build\nmkdocs server\n</code></pre> </li> <li> <p>When happy with the changes, add the changed files using <code>git add -A</code> and then commit using    <code>git commit -s -m \"Add MY-ORG to adopters\"</code> (commit sign-off is required, see    DCO of the kepler project).</p> </li> <li>Push the commit with <code>git push origin main</code>.</li> <li>Open a Pull Request to kepler-doc</li> </ol>"},{"location":"project/contributing/#documentation-translation","title":"Documentation Translation","text":"<p>Kepler welcomes contributions to translate our documentation into different languages to make it accessible to a global community of developers and operators!</p>"},{"location":"project/contributing/#translation-process-overview","title":"Translation Process Overview","text":"<p>Our documentation follows internationalization (i18n) conventions using language suffixes:</p> <ul> <li>English (Original): <code>docs/path/to/file.md</code></li> <li>Chinese: <code>docs/path/to/file.zh.md</code></li> <li>Other languages: <code>docs/path/to/file.[LANG_CODE].md</code></li> </ul>"},{"location":"project/contributing/#getting-started-with-translations","title":"Getting Started with Translations","text":""},{"location":"project/contributing/#1-use-the-ai-translation-agent","title":"1. Use the AI Translation Agent","text":"<p>For efficient and accurate technical translations, we recommend using our specialized AI translation prompt. This ensures:</p> <ul> <li>\u2705 Technical accuracy - Preserves API names, commands, and code blocks</li> <li>\u2705 Consistent terminology - Maintains technical terms across documents</li> <li>\u2705 Proper formatting - Keeps markdown structure and syntax highlighting</li> <li>\u2705 Quality validation - Generates quality check reports</li> </ul> <p>\ud83d\udccb Translation Agent Prompt: TRANSLATOR.md</p>"},{"location":"project/contributing/#2-quality-assurance-process","title":"2. Quality Assurance Process","text":"<p>Every translation should include a quality check report to validate accuracy:</p> <p>Generated Files for Each Translation:</p> <pre><code>docs/path/to/file.md          # Original English\ndocs/path/to/file.zh.md       # Chinese translation\ndocs/path/to/file.zh-qc.md    # Quality check report\n</code></pre> <p>The quality check report (<code>.zh-qc.md</code>) contains:</p> <ul> <li>Comparison between original and reverse-translated content</li> <li>Technical accuracy assessment</li> <li>Formatting and structure validation</li> <li>Recommendation for approval/revision</li> </ul>"},{"location":"project/contributing/#3-translation-guidelines","title":"3. Translation Guidelines","text":"<p>\u2705 DO:</p> <ul> <li>Preserve all technical identifiers (API names, commands, URLs)</li> <li>Maintain markdown formatting and code block syntax</li> <li>Keep consistent terminology within and across documents</li> <li>Include the statutory warning about AI translation</li> <li>Generate quality check reports for validation</li> </ul> <p>\u274c DON'T:</p> <ul> <li>Translate technical commands, API endpoints, or code snippets</li> <li>Modify file paths, repository URLs, or external links</li> <li>Change the document structure or heading hierarchy</li> <li>Skip quality validation steps</li> </ul>"},{"location":"project/contributing/#4-statutory-warning-requirement","title":"4. Statutory Warning Requirement","text":"<p>All translated documents must include this warning at the beginning:</p> <pre><code>!!! warning \"\u673a\u5668\u7ffb\u8bd1\u58f0\u660e\"\n    \u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 [Kepler \u6587\u6863\u9879\u76ee](https://github.com/sustainable-computing-io/kepler-doc/issues) \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002\n</code></pre>"},{"location":"project/contributing/#contributing-your-translation","title":"Contributing Your Translation","text":""},{"location":"project/contributing/#step-by-step-process","title":"Step-by-Step Process:","text":"<ol> <li>Fork and Clone</li> </ol> <pre><code>git clone https://github.com/&lt;YOUR-USERNAME&gt;/kepler-doc.git\ncd kepler-doc\n</code></pre> <ol> <li>Create Translation Branch</li> </ol> <pre><code>git checkout -b translate-[language]-[document-name]\n</code></pre> <ol> <li>Generate Translation</li> <li>Use the AI translation agent</li> <li>Follow the quality assurance process</li> <li> <p>Ensure all files are generated (<code>.zh.md</code> + <code>.zh-qc.md</code>)</p> </li> <li> <p>Review and Test</p> </li> </ol> <pre><code>mkdocs build\nmkdocs serve\n</code></pre> <p>Preview your translations at <code>http://localhost:8000</code></p> <ol> <li>Commit Changes</li> </ol> <pre><code>git add docs/path/to/file.zh.md docs/path/to/file.zh-qc.md\ngit commit -s -m \"Add Chinese translation for [document-name]\n\n- Translate docs/path/to/file.md to Chinese\n- Include quality check report for validation\n- Follow i18n conventions with .zh.md suffix\"\n</code></pre> <ol> <li>Open Pull Request</li> <li>Include both translation and quality check files</li> <li>Reference the quality check report findings in PR description</li> <li>Mention any technical terms that required special handling</li> </ol>"},{"location":"project/contributing/#translation-priority","title":"Translation Priority","text":"<p>High Priority Documents:</p> <ul> <li>Installation guides (<code>docs/kepler/installation/</code>)</li> <li>Usage documentation (<code>docs/kepler/usage/</code>)</li> <li>Configuration guides (<code>docs/kepler-operator/</code>)</li> </ul> <p>Medium Priority:</p> <ul> <li>Developer documentation (<code>docs/kepler/developer/</code>)</li> <li>Architecture and design docs (<code>docs/archive/design/</code>)</li> </ul>"},{"location":"project/contributing/#language-support","title":"Language Support","text":"<p>Currently supported languages:</p> <ul> <li>\u4e2d\u6587 (Chinese): <code>.zh.md</code> suffix</li> </ul> <p>Want to add a new language?</p> <ol> <li>Check mkdocs.yml i18n configuration</li> <li>Open an issue to discuss language code and navigation structure</li> <li>Follow the same process with appropriate language suffix</li> </ol>"},{"location":"project/contributing/#translation-maintenance","title":"Translation Maintenance","text":"<p>Translations should be updated when:</p> <ul> <li>Original English documents are significantly changed</li> <li>Technical APIs or commands are modified</li> <li>New features are added that affect documented procedures</li> </ul> <p>Pro tip: Watch the repository for changes to English files that have translations to stay up-to-date!</p>"},{"location":"project/contributing/#getting-help","title":"Getting Help","text":"<ul> <li>Questions about translation process: GitHub Discussions</li> <li>Report translation errors: GitHub Issues</li> <li>Technical content clarification: Main Kepler Repository</li> </ul> <p>Thank you for helping make Kepler documentation accessible worldwide! \ud83c\udf0d</p>"},{"location":"project/contributing.zh-qc/","title":"Translation Quality Check Report: Contributing Guide","text":"<p>Original: <code>docs/project/contributing.md</code> Translation: <code>docs/project/contributing.zh.md</code> Reverse Translation: <code>docs/project/contributing.rev.md</code></p>"},{"location":"project/contributing.zh-qc/#overall-assessment","title":"Overall Assessment","text":"<p>\u2705 EXCELLENT TRANSLATION QUALITY</p> <p>The Chinese translation perfectly captures the comprehensive contributing guide, including the newly added documentation translation section. This represents a complete community resource that maintains technical accuracy while providing clear guidance in Chinese.</p>"},{"location":"project/contributing.zh-qc/#detailed-comparison","title":"Detailed Comparison","text":""},{"location":"project/contributing.zh-qc/#strengths","title":"\u2705 Strengths","text":"<ol> <li>Community Contribution Concepts:</li> <li>\"Contributing\" \u2192 \"\u8d21\u732e\" (standard open-source community term)</li> <li>\"Adopters\" \u2192 \"\u91c7\u7528\u8005\" (appropriate user community designation)</li> <li>\"Pull Request\" \u2192 \"Pull Request\" (correctly preserved as standard Git terminology)</li> <li> <p>\"Fork\" \u2192 \"Fork\" (appropriately maintained as Git concept)</p> </li> <li> <p>Technical Documentation Process:</p> </li> <li>\"Documentation Translation\" \u2192 \"\u6587\u6863\u7ffb\u8bd1\" (clear technical process designation)</li> <li>\"Internationalization (i18n)\" \u2192 \"\u56fd\u9645\u5316 (i18n)\" (accurate localization concept)</li> <li>\"Quality Assurance Process\" \u2192 \"\u8d28\u91cf\u4fdd\u8bc1\u6d41\u7a0b\" (precise QA terminology)</li> <li> <p>\"Statutory Warning\" \u2192 \"\u6cd5\u5b9a\u8b66\u544a\" (appropriate legal/compliance term)</p> </li> <li> <p>Development Workflow Integration:</p> </li> <li>\"AI Translation Assistant\" \u2192 \"AI \u7ffb\u8bd1\u52a9\u624b\" (clear tool designation)</li> <li>\"Quality check report\" \u2192 \"\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\" (precise validation concept)</li> <li>\"Technical accuracy\" \u2192 \"\u6280\u672f\u51c6\u786e\u6027\" (accurate measurement criterion)</li> <li>\"Reverse translation\" \u2192 \"\u9006\u5411\u7ffb\u8bd1\" (correct validation methodology)</li> </ol>"},{"location":"project/contributing.zh-qc/#translation-process-documentation-excellence","title":"\ud83d\udcdd Translation Process Documentation Excellence","text":"<ol> <li>Workflow Structure:</li> <li>Step-by-step processes clearly outlined in logical sequence</li> <li>Git commands and technical procedures preserved exactly</li> <li>File naming conventions and directory structures maintained</li> <li> <p>Branch naming patterns appropriately translated while preserving technical format</p> </li> <li> <p>Quality Standards Framework:</p> </li> <li>Translation guidelines with clear DO/DON'T structure</li> <li>File generation patterns (.zh.md + .zh-qc.md) clearly explained</li> <li>Validation methodology thoroughly described</li> <li> <p>Community contribution standards well-articulated</p> </li> <li> <p>Community Integration:</p> </li> <li>GitHub interaction patterns clearly explained</li> <li>Issue reporting procedures appropriately localized</li> <li>Discussion forum guidance properly translated</li> <li>Support channel information accurately conveyed</li> </ol>"},{"location":"project/contributing.zh-qc/#technical-elements-verified","title":"\ud83d\udd0d Technical Elements Verified","text":"<ul> <li>\u2705 All Git commands preserved exactly (clone, checkout, commit, push)</li> <li>\u2705 All file paths and extensions maintained (.md, .zh.md, .zh-qc.md)</li> <li>\u2705 All repository URLs and external links intact</li> <li>\u2705 Code examples and command syntax unchanged</li> <li>\u2705 YAML structure examples preserved perfectly</li> </ul>"},{"location":"project/contributing.zh-qc/#community-contribution-features","title":"\ud83d\udcca Community Contribution Features","text":"<ol> <li>Adopter Management Process: Complete workflow from logo addition to PR submission</li> <li>Translation Contribution Workflow: Comprehensive 6-step process with quality validation</li> <li>Language Support Framework: Clear extension mechanism for additional languages</li> <li>Maintenance Guidelines: Practical advice for keeping translations current</li> </ol>"},{"location":"project/contributing.zh-qc/#recommendation","title":"Recommendation","text":""},{"location":"project/contributing.zh-qc/#approved-for-community-contribution-guidance","title":"\u2705 APPROVED FOR COMMUNITY CONTRIBUTION GUIDANCE","text":"<p>This translation provides Chinese-speaking contributors with complete, actionable guidance for both organizational adoption and documentation translation contributions. The translation maintains technical precision while ensuring accessibility for diverse contributor skill levels.</p>"},{"location":"project/contributing.zh-qc/#notes","title":"Notes","text":"<ul> <li>Exceptional handling of mixed technical and community management content</li> <li>Perfect preservation of all technical procedures and Git workflows</li> <li>Clear communication of quality standards and validation processes</li> <li>Comprehensive coverage of translation-specific contribution requirements</li> <li>Effective integration of AI-assisted translation methodology</li> <li>Excellent balance of guidance detail with practical actionability</li> </ul> <p>This represents the gold standard for translating comprehensive community contribution documentation that spans multiple contribution types and technical processes.</p>"},{"location":"project/resources/","title":"Resources","text":"<p>We really appreciate talks and demos about Kepler from the community. If you have made a presentation that demonstrated or referenced Kepler, please open a PR to add it to this page!</p> <p>To simplify the conference column, workshops and co-located events are represented by the main conference name.</p>"},{"location":"project/resources/#talkspresentations-that-demonstrate-kepler","title":"Talks/Presentations That Demonstrate Kepler","text":"<p>The list below contains talks that explain Kepler, specifically discuss Kepler, demonstrate its capabilities, and showcase how to gather energy metrics of various Kubernetes resources.</p> No. Title Speakers/Authors Conference Links 1 Sustainability the Container Native Way Huamin Chen (Red Hat) &amp; Chen Wang (IBM) OSS NA 2022 [slide] 2 Sustainability Research the Cloud Native Way Chen Wang (IBM) &amp; Huamin Chen (Red Hat) KubeCon NA 2022 [slide] 3 Sustainability in Computing: Energy Efficient Placements of Edge Workloads Parul Singh &amp; Kaiyi Liu (Red Hat) KubeCon NA 2022 [slide] 4 Green(ing) CI/CD: A Sustainability Journey with GitOps Niki Manoledaki (Weaveworks) GitOpsCon NA 2022 [slide] 5 Kepler: A framework to calculate the energy consumption of containerized applications Marcelo Amaral (IBM) &amp; Huamin Chen (RedHat) &amp; Tatsuhiro Chiba (IBM) &amp; Rina Nakazawa (IBM) &amp; Sunyanan Choochotkaew (IBM) &amp; Eun Kyung Lee (IBM) &amp; Tamar Eilam (IBM) IEEE CLOUD 2023 [paper] 6 Kepler Marcelo Amaral IEEE OSS 2023 [schedule] 7 Advancing Cloud Sustainability: A Versatile Framework for Container Power Model Training Sunyanan Choochotkaew (IBM) &amp; Chen Wang (IBM) &amp; Huamin Chen (RedHat) &amp; Tatsuhiro Chiba (IBM) &amp; Marcelo Amaral (IBM) &amp; Eun Kyung Lee (IBM) &amp; Tamar Eilam (IBM) IEEE MASCOTS 2023 [paper] 8 When Observability Meets Sustainability: A Real World Experience Marcelo Amaral (IBM), Hua Ye (IBM), Fan Jing Meng (IBM) OSS EU 2023 [session] 9 Greening the AI Cloud: Validating Power Models for Kubernetes Containers Marcelo Amaral OSS EU 2023 [recording] 10 Towards a Methodology and Framework for AI Sustainability Metrics Tamar Eilam, Pedro D. Bello-Maldonado, Bishwaranjan Bhattacharjee, Carlos Costa, Eun Kyung Lee, Asser Tantawi Hot Carbon 2023 [recording] 11 Kepler: Project Update and Deep Dive Marcelo Amaral &amp; Tatsuhiro Chiba KubeCon NA 2023 [recording] 12 Energy Observability Using Kepler: Revolutionizing Cloud Efficiency Sally OMalley &amp; Marcelo Amaral KubeCon NA 2023 [session] 13 kepler 101 Sam Yuan(IBM) KubeCon China 2023 [recording] 14 kepler deployment Sam Yuan KubeCon China 2023 [recording] 15 build kepler Sam Yuan KubeCon China 2023 [recording] 16 kepler model training Sam Yuan KubeCon China 2023 [recording] 17 \u901a\u8fc7Istio\u3001Kepler\u548c\u667a\u80fd\u8c03\u5ea6\u5b9e\u73b0\u4f18\u5316\u7684\u5fae\u670d\u52a1\u6027\u80fd\u548c\u53ef\u6301\u7eed\u6027 Towards Optimized Microservices Performance &amp; Sustainability via Istio, Kepler and Smart Scheduling Peng Hui Jiang &amp; Kevin Su (IBM) &amp; Yingchun Guo (Intel) KubeCon China 2023 [session] 18 \u5728\u7279\u5b9a\u5e73\u53f0\u4e0a\uff0c\u5f00\u666e\u52d2\u51c6\u786e\u5417\uff1fIs Kepler Accurate on Specific Platforms? Jie Ren &amp; Ken Lu (Intel) KubeCon China 2023 [session] 19 KBE Insider E27: Environmental Sustainability Marcelo Carneiro do Amaral, and Huamin Chen RedHat Developer Channel 2024 [video] 20 Optimizing Cloud Native Power Consumption using Kepler Marcelo Carneiro do Amaral Pure Performance Podcast 2024 [video] 21 Sustainable Computing: Measuring Application Energy Consumption in Kubernetes Environments with Kepler Marcelo Amaral &amp; Sunyanan Choochotkaew KubeCon EU 2024 [recording] 22 Empowering Efficiency: PEAKS - Orchestrating Power-Aware Kubernetes Scheduling Parul Singh &amp; Krishnasuri Narayanam KubeCon EU 2024 [recording] 23 Unlock Energy Consumption in the Cloud with eBPF Leonard Pahlke KubeCon EU 2024 [session] 24 Keynote: Building IT Green: A Journey of Platforms, Data, and Developer Empowerment at Deutsche Bahn Gualter Barbas Baptista (Deutsche Bahn) KubeCon EU 2024 [session] 25 Saving the Planet One Cluster at a Time: Operationalising Sustainability in Kubernetes Gabi Beyer &amp; Brendan Kamp KubeCon EU 2024 [session] 26 A Robust Power Model Training Framework for Cloud Native Runtime Energy Metric Exporter Sunyanan Choochotkaew, Chen Wang, Huamin Chen, Tatsuhiro Chiba, Marcelo Amaral, Eun Kyung Lee, Tamar Eilam Arxiv 2024 [paper] 27 Process-based Efficient Power Level Exporter Marcelo Amaral, Huamin Chen, Tatsuhiro Chiba, Rina Nakazawa, Sunyanan Choochotkaew, Eun Kyung Lee and Tamar Eilam IEEE CLOUD 2024 TBA 28 Best-Effort Power Model Serving for Energy Quantification of Cloud Instances Sunyanan Choochotkaew, Tatsuhiro Chiba, Marcelo Amaral, Rina Nakazawa, Scott Trent, Eun Kyung Lee, Umamaheswari Devi, Tamar Eilam and Huamin Chen IEEE MASCOTS 2024 TBA 29 Introduction to Monitoring Long-Term Energy Consumption and Carbon Emission With the SusQL Operator Scott Trent (IBM) Sustainability Week Local Meetup Tokyo 2024 [session] 30 Measuring the Power Consumption and Carbon Emissions of Your Local LLM on Kubernetes Akiho Miyamura Sustainability Week Local Meetup Tokyo 2024 [session]"},{"location":"project/resources/#talkspresentations-that-refer-to-kepler","title":"Talks/Presentations That Refer to Kepler","text":"<p>The list below contains talks that reference Kepler in discussions on energy efficiency and cloud-native environmental sustainability.</p> No. Title Speakers Conference Link 1 Panel Discussion: Moving Towards Environmentally Sustainable Operations with Cloud Native Tools Niki Manoledaki (Weaveworks), Chris Lavery (Weaveworks), Marlow Weston (Intel), William Caban (Red Hat) KubeCon NA 2022 [recording] 2 How to Get Involved in CNCF Environmental Sustainability TAG Marlow Weston (Intel) &amp; Huamin Chen (Red Hat) KubeCon NA 2022 [recording] 3 Smart Green Computing Cloud Native Operations William Caban &amp; Federico Rossi (Red Hat) KubeCon NA 2022 [recording] 4 Cloud Native Sustainability Efforts in the Community - TAG Environmental Sustainability Antonio Di Turi, Data Reply Gmbh &amp; Kristina Devochko KubeCon EU 2024 [session]"},{"location":"project/resources/#kepler-blogsarxiv","title":"Kepler Blogs/Arxiv","text":"<p>The list below contains blog posts or arxiv papers that describe Kepler</p> No. Title Authors Year Link 1 Exploring Kepler\u2019s potentials: unveiling cloud application power consumption Marcelo Amaral, Sunyanan Choochotkaew, Eun Kyung Lee, Huamin Chen, and Tamar Eilam 2023 [CNCF blog] 2 A Robust Power Model Training Framework for Cloud Native Runtime Energy Metric Exporter Sunyanan Choochotkaew, Chen Wang, Huamin Chen, Tatsuhiro Chiba, Marcelo Amaral, Eun Kyung Lee, Tamar Eilam 2024 [arxiv] 3 Idle Power Matters: Kepler Metrics for Public Cloud Energy Efficiency Sunyanan Choochotkaew, Marcelo Amaral, Huamin Chen 2024 [TAG ENV blog]"},{"location":"project/support/","title":"Support","text":""},{"location":"project/support/#the-best-ways-to-seek-support-are","title":"The best ways to seek support are","text":"<ol> <li> <p>Opening an issue in Kepler.</p> </li> <li> <p>Starting a discussion</p> </li> </ol>"},{"location":"zh/","title":"Kubernetes Efficient Power Level Exporter (Kepler)","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler (Kubernetes-based Efficient Power Level Exporter)\u662f\u4e00\u4e2aprometheus exportor\u3002 \u5b83\u901a\u8fc7eBPF\u6280\u672f\u4e0eCPU\u6027\u80fd\u8ba1\u6570\u5668\u4ee5\u53caLinux\u5185\u6838\u7684tracepoints\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u7279\u5b9a\u6570\u636e\u3002</p> <p>\u8fd9\u4e9b\u6570\u636e\u548c\u6765\u81eacgroup\u6216\u8005sysfs\u7684\u4fe1\u606f\u4e00\u8d77\u53ef\u4ee5\u653e\u5165\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e2d\u6765\u5bf9pod\u6216\u8fdb\u7a0b\u7684\u80fd\u8017\u8fdb\u884c\u9884\u6d4b\u3002</p> <p>\u9879\u76ee\u7684Github\u5730\u5740 \u27a1\ufe0f Kepler. \u76ee\u524d\u4e2d\u6587\u6587\u6863\u4f9d\u65e7\u5728\u65bd\u5de5\u4e2d\uff0c\u6b22\u8fce\u8d21\u732e\u3002</p> <p></p> <p> \u76ee\u524d\u8be5\u9879\u76ee\u5df2\u7ecf\u6210\u4e3aCloud Native Computing Foundation sandbox project.   </p>"},{"location":"zh/model-server-compatibility/","title":"Kepler Model Server \u517c\u5bb9\u6027\u901a\u77e5","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u26a0\ufe0f \u517c\u5bb9\u6027\u8b66\u544a \u26a0\ufe0f</p>"},{"location":"zh/model-server-compatibility/#kepler-v0100-model-server","title":"Kepler v0.10.0+ \u7684 Model Server \u72b6\u6001","text":"<p>Kepler Model Server \u4e0d\u517c\u5bb9 Kepler v0.10.0 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u8fd9\u662f\u7531\u4e8e\u91cd\u5927\u67b6\u6784\u91cd\u5199\u9020\u6210\u7684\u3002\u672c\u8282\u4e2d\u7684 Model Server \u6587\u6863\u4ec5\u9002\u7528\u4e8e Kepler v0.9.0 \u53ca\u4ee5\u4e0b\u7248\u672c\u3002</p>"},{"location":"zh/model-server-compatibility/#v0100","title":"v0.10.0 \u4e2d\u7684\u66f4\u6539","text":"<p>Kepler v0.10.0 \u5f15\u5165\u4e86\u7834\u574f Model Server \u517c\u5bb9\u6027\u7684\u6839\u672c\u6027\u53d8\u5316\uff1a</p>"},{"location":"zh/model-server-compatibility/#_1","title":"\u6307\u6807\u7ed3\u6784\u53d8\u5316","text":"<ul> <li>\u65e7\u7248\uff1a\u590d\u6742\u7684\u57fa\u4e8e\u7ec4\u4ef6\u7684\u6307\u6807\uff08core\u3001uncore\u3001package\u3001DRAM\u3001GPU\uff09</li> <li>\u65b0\u7248\uff1a\u7b80\u5316\u7684\u4ee5 CPU \u4e3a\u91cd\u70b9\u7684\u6307\u6807\uff0c\u91c7\u7528\u57fa\u4e8e\u533a\u57df\u7684\u7ec4\u7ec7\u65b9\u5f0f</li> <li>\u5f71\u54cd\uff1aModel Server \u671f\u671b\u65e7\u7684\u6307\u6807\u540d\u79f0\u548c\u7ed3\u6784</li> </ul>"},{"location":"zh/model-server-compatibility/#_2","title":"\u529f\u7387\u5f52\u56e0\u53d8\u5316","text":"<ul> <li>\u65e7\u7248\uff1a\u57fa\u4e8e\u786c\u4ef6\u8ba1\u6570\u5668\u7684\u5f52\u56e0\uff0c\u5177\u6709\u8be6\u7ec6\u7684\u7ec4\u4ef6\u5206\u89e3</li> <li>\u65b0\u7248\uff1a\u57fa\u4e8e CPU \u65f6\u95f4\u6bd4\u4f8b\u7684\u5f52\u56e0\uff0c\u5177\u6709\u6d3b\u52a8/\u7a7a\u95f2\u5206\u5272</li> <li>\u5f71\u54cd\uff1a\u6a21\u578b\u8bad\u7ec3\u6570\u636e\u683c\u5f0f\u548c\u5f52\u56e0\u903b\u8f91\u4e0d\u517c\u5bb9</li> </ul>"},{"location":"zh/model-server-compatibility/#_3","title":"\u914d\u7f6e\u7cfb\u7edf\u53d8\u5316","text":"<ul> <li>\u65e7\u7248\uff1a\u57fa\u4e8e\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\uff0cModel Server \u4e0e\u4e4b\u96c6\u6210</li> <li>\u65b0\u7248\uff1aCLI \u6807\u5fd7 + YAML \u5c42\u6b21\u7ed3\u6784\uff0c\u5177\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u7ed3\u6784</li> <li>\u5f71\u54cd\uff1aModel Server \u914d\u7f6e\u96c6\u6210\u4e0d\u518d\u5de5\u4f5c</li> </ul>"},{"location":"zh/model-server-compatibility/#_4","title":"\u5f53\u524d\u72b6\u6001","text":"<p>\ud83d\udd34 \u4e0d\u5de5\u4f5c\uff1aModel Server \u4e0e Kepler v0.10.0+ \u7684\u96c6\u6210</p> <p>\ud83d\udfe1 \u5ba1\u67e5\u4e2d\uff1a\u517c\u5bb9\u6027\u8bc4\u4f30\u548c\u6f5c\u5728\u66f4\u65b0</p> <p>\ud83d\udd35 \u672a\u6765\u8ba1\u5212\uff1a\u53ef\u80fd\u4e3a\u672a\u6765\u7248\u672c\u8ba1\u5212 Model Server \u66f4\u65b0</p>"},{"location":"zh/model-server-compatibility/#_5","title":"\u5bf9\u4e8e\u65e7\u7248\u7528\u6237","text":"<p>\u5982\u679c\u60a8\u9700\u8981\u4f7f\u7528 Model Server\uff1a</p> <ol> <li>\u4f7f\u7528 Kepler v0.9.0 \u6216\u4ee5\u4e0b\u7248\u672c\uff0c\u91c7\u7528\u65e7\u67b6\u6784</li> <li>\u53c2\u8003\u5b58\u6863\u6587\u6863\u4ee5\u4e86\u89e3\u6b63\u786e\u7684\u8bbe\u7f6e\u7a0b\u5e8f</li> <li>\u67e5\u770b\u5b58\u6863\u90e8\u5206\u4ee5\u83b7\u5f97\u65e7\u7248\u5b89\u88c5\u6307\u5357</li> </ol>"},{"location":"zh/model-server-compatibility/#_6","title":"\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848","text":"<p>\u5bf9\u4e8e\u9700\u8981\u529f\u7387\u5efa\u6a21\u7684 Kepler v0.10.0+ \u7528\u6237\uff1a</p> <ol> <li>\u76f4\u63a5\u6307\u6807\u5bfc\u51fa\uff1a\u76f4\u63a5\u4f7f\u7528\u7b80\u5316\u7684\u6307\u6807\u8fdb\u884c\u5206\u6790</li> <li>\u81ea\u5b9a\u4e49\u96c6\u6210\uff1a\u4f7f\u7528\u65b0\u7684\u6307\u6807\u7ed3\u6784\u6784\u5efa\u81ea\u5b9a\u4e49\u89e3\u51b3\u65b9\u6848</li> <li>\u7b49\u5f85\u66f4\u65b0\uff1a\u76d1\u63a7\u9879\u76ee\u4ee5\u83b7\u5f97 Model Server \u517c\u5bb9\u6027\u66f4\u65b0</li> </ol>"},{"location":"zh/model-server-compatibility/#_7","title":"\u4fdd\u6301\u66f4\u65b0","text":"<ul> <li>GitHub Issues\uff1a\u5173\u6ce8 Model Server \u517c\u5bb9\u6027\u66f4\u65b0</li> <li>\u793e\u533a\u8ba8\u8bba\uff1a\u53c2\u4e0e\u5173\u4e8e Model Server \u672a\u6765\u7684\u8ba8\u8bba</li> <li>\u53d1\u5e03\u8bf4\u660e\uff1a\u67e5\u770b\u672a\u6765\u53d1\u5e03\u8bf4\u660e\u4ee5\u83b7\u5f97\u517c\u5bb9\u6027\u516c\u544a</li> </ul> <p>\u26a0\ufe0f \u4e0d\u8981\u5c1d\u8bd5\u5c06 Model Server \u6587\u6863\u4e0e Kepler v0.10.0+ \u4e00\u8d77\u4f7f\u7528\uff0c \u56e0\u4e3a\u8fd9\u5c06\u5bfc\u81f4\u914d\u7f6e\u9519\u8bef\u548c\u4e0d\u517c\u5bb9\u7684\u96c6\u6210\u3002</p>"},{"location":"zh/archive/","title":"\u5df2\u5f52\u6863\u6587\u6863 - Kepler v0.9.0 \u53ca\u4ee5\u4e0b\u7248\u672c","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u26a0\ufe0f \u5df2\u5f03\u7528\u6587\u6863 \u26a0\ufe0f</p> <p>\u672c\u76ee\u5f55\u5305\u542b Kepler 0.9.0 \u53ca\u4ee5\u4e0b\u7248\u672c\u7684\u6587\u6863\u3002 \u8fd9\u4e9b\u6587\u6863\u5df2\u7ecf\u8fc7\u65f6\uff0c\u4ec5\u9002\u7528\u4e8e\u5728 Kepler v0.10.0+ \u7248\u672c\u4e2d\u88ab\u66ff\u6362\u7684\u65e7\u7248\u57fa\u4e8e eBPF \u7684\u67b6\u6784\u3002</p>"},{"location":"zh/archive/#v0100","title":"v0.10.0+ \u7248\u672c\u4e2d\u7684\u53d8\u5316","text":"<p>Kepler \u5728 v0.10.0 \u7248\u672c\u4e2d\u8fdb\u884c\u4e86\u91cd\u5927\u67b6\u6784\u91cd\u5199\uff0c\u5f15\u5165\u4e86\uff1a</p> <ul> <li>\u9762\u5411\u670d\u52a1\u7684\u8bbe\u8ba1 \u66ff\u4ee3\u4e86\u4ee5 eBPF \u4e3a\u4e2d\u5fc3\u7684\u67b6\u6784</li> <li>\u7b80\u5316\u7684\u914d\u7f6e \u4f7f\u7528 CLI \u6807\u5fd7 + YAML \u800c\u975e 40+ \u4e2a\u73af\u5883\u53d8\u91cf</li> <li>\u7cbe\u7b80\u7684\u6307\u6807 \u91c7\u7528\u4e13\u6ce8\u4e8e CPU \u7684\u5f52\u56e0\u65b9\u5f0f\uff0c\u800c\u975e\u590d\u6742\u7684\u7ec4\u4ef6\u5206\u89e3</li> <li>\u65b0\u7684\u5f00\u53d1\u5de5\u4f5c\u6d41 \u4f7f\u7528 Docker Compose \u73af\u5883</li> </ul>"},{"location":"zh/archive/#_1","title":"\u4f7f\u7528\u6b64\u6587\u6863","text":"<p>\u8bf7\u52ff\u5c06\u6b64\u6587\u6863\u7528\u4e8e Kepler v0.10.0+ \u7248\u672c\u3002 \u8fd9\u5c06\u5bfc\u81f4\uff1a</p> <ul> <li>\u9519\u8bef\u7684\u914d\u7f6e\u5c1d\u8bd5</li> <li>\u9519\u8bef\u7684\u6307\u6807\u540d\u79f0\u548c\u7ed3\u6784</li> <li>\u8fc7\u65f6\u7684\u5b89\u88c5\u7a0b\u5e8f</li> <li>\u5df2\u6dd8\u6c70\u7684\u6545\u969c\u6392\u9664\u6b65\u9aa4</li> </ul>"},{"location":"zh/archive/#_2","title":"\u83b7\u53d6\u5f53\u524d\u6587\u6863","text":"<p>\u8bf7\u53c2\u8003\u4e3b\u8981\u6587\u6863\u90e8\u5206\u83b7\u53d6\u6700\u65b0\u4fe1\u606f\uff1a</p> <ul> <li><code>/docs/design/</code> - \u5f53\u524d\u67b6\u6784\u548c\u8bbe\u8ba1</li> <li><code>/docs/installation/</code> - \u5f53\u524d\u5b89\u88c5\u65b9\u6cd5</li> <li><code>/docs/usage/</code> - \u5f53\u524d\u914d\u7f6e\u548c\u4f7f\u7528</li> </ul>"},{"location":"zh/archive/design/architecture/","title":"\u7ec4\u4ef6","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/design/architecture/#kepler-exporter","title":"Kepler Exporter","text":"<p>Kepler Exporter \u516c\u5f00\u4e86\u5173\u4e8e Kubernetes \u7ec4\u4ef6\uff08\u5982 Pod \u548c\u8282\u70b9\uff09\u80fd\u8017\u7684\u5404\u79cd\u6307\u6807\u3002</p> <p>\u901a\u8fc7 Kepler Exporter \u63d0\u4f9b\u7684\u6307\u6807\u76d1\u63a7\u5bb9\u5668\u529f\u8017\u3002</p> <p></p>"},{"location":"zh/archive/design/architecture/#kepler-model-server","title":"Kepler Model Server","text":"<p><code>Kepler Model Server</code> \u7684\u4e3b\u8981\u529f\u80fd\u662f\u8fd4\u56de\u4e0e\u8bf7\u6c42\u76f8\u5bf9\u5e94\u7684\u529f\u8017\u4f30\u7b97\u6a21\u578b\uff0c\u8be5\u8bf7\u6c42\u5305\u542b\u76ee\u6807\u7c92\u5ea6\uff08\u8282\u70b9\u603b\u8ba1\u3001\u8282\u70b9\u6309\u6bcf\u4e2a\u5904\u7406\u5668\u7ec4\u4ef6\u3001Pod \u603b\u8ba1\u3001Pod \u6309\u6bcf\u4e2a\u5904\u7406\u5668\u7ec4\u4ef6\uff09\u3001\u53ef\u7528\u8f93\u5165\u6307\u6807\u3001\u6a21\u578b\u8fc7\u6ee4\u5668\uff08\u5982\u51c6\u786e\u6027\uff09\u3002</p> <p>\u6b64\u5916\uff0c\u5728\u7ebf\u8bad\u7ec3\u5668\u53ef\u4ee5\u4f5c\u4e3a\u4fa7\u8f66\u5bb9\u5668\u90e8\u7f72\u5230\u670d\u52a1\u5668\uff08\u4e3b\u5bb9\u5668\uff09\u4e2d\uff0c\u4ee5\u6267\u884c\u8bad\u7ec3\u7ba1\u9053\u5e76\u5728\u529f\u8017\u6307\u6807\u53ef\u7528\u65f6\u5b9e\u65f6\u66f4\u65b0\u6a21\u578b\u3002</p> <p><code>Kepler Estimator</code> \u662f Kepler \u6a21\u578b\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u6a21\u5757\uff0c\u4f5c\u4e3a Kepler Exporter\uff08\u4e3b\u5bb9\u5668\uff09\u7684\u4fa7\u8f66\u8fd0\u884c\u3002</p> <p>\u6b64 Python \u6a21\u5757\u5c06\u901a\u8fc7 Unix \u57df\u5957\u63a5\u5b57 <code>/tmp/estimator.sock</code> \u5904\u7406\u6765\u81ea Kepler Exporter \u4e2d\u6a21\u578b\u5305\u7684 PowerRequest\uff0c\u5982 estimator.go \u4e2d\u5b9a\u4e49\u7684\u90a3\u6837\u3002</p> <p>\u5728 GitHub \u4e0a\u67e5\u770b\u6211\u4eec \u27a1\ufe0f Kepler Model Server</p>"},{"location":"zh/archive/design/ebpf_in_kepler/","title":"Kepler\u4e2d\u7684ebpf","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#_1","title":"\u80cc\u666f","text":""},{"location":"zh/archive/design/ebpf_in_kepler/#ebpf","title":"\u4ec0\u4e48\u662febpf?","text":"<p>eBPF\u662f\u4e00\u9879\u9769\u547d\u6027\u7684\u6280\u672f\uff0c\u8d77\u6e90\u4e8eLinux\u5185\u6838\uff0c\u53ef\u4ee5\u5728\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7b49\u7279\u6743\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u6c99\u76d2\u7a0b\u5e8f\u3002\u5b83\u7528\u4e8e\u5b89\u5168\u6709\u6548\u5730\u6269\u5c55\u5185\u6838\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5185\u6838\u6e90\u4ee3\u7801\u6216\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u3002[1]</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#kprobe","title":"\u4ec0\u4e48\u662fkprobe?","text":"<p>KProbes\u662fLinux\u5185\u6838\u7684\u4e00\u79cd\u8c03\u8bd5\u673a\u5236\uff0c\u4e5f\u53ef\u7528\u4e8e\u76d1\u89c6\u751f\u4ea7\u7cfb\u7edf\u5185\u7684\u4e8b\u4ef6\u3002KProbes\u4f7f\u60a8\u80fd\u591f\u52a8\u6001\u5730\u95ef\u5165\u4efb\u4f55\u5185\u6838\u4f8b\u7a0b\uff0c\u5e76\u4ee5\u65e0\u4e2d\u65ad\u7684\u65b9\u5f0f\u6536\u96c6\u8c03\u8bd5\u548c\u6027\u80fd\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728\u51e0\u4e4e\u4efb\u4f55\u5185\u6838\u4ee3\u7801\u5730\u5740\u8bbe\u7f6e\u9677\u9631\uff0c\u6307\u5b9a\u5728\u9047\u5230\u65ad\u70b9\u65f6\u8981\u8c03\u7528\u7684\u5904\u7406\u7a0b\u5e8f\u4f8b\u7a0b\u3002[2]</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#kprobes","title":"\u5982\u4f55\u67e5\u770b\u5df2\u7ecf\u6ce8\u518c\u7684kprobes?","text":"<pre><code>sudo cat /sys/kernel/debug/kprobes/list\n</code></pre>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu","title":"CPU\u786c\u4ef6\u4e8b\u4ef6\u76d1\u63a7","text":"<p>\u6027\u80fd\u8ba1\u6570\u5668\u662f\u5728\u5982\u4eca\u5927\u591a\u6570CPU\u4e0a\u5747\u5df2\u5b9e\u73b0\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u786c\u4ef6\u8ba1\u6570\u5668\u3002\u8fd9\u4e9b\u8ba1\u6570\u5668\u5728\u7edf\u8ba1\u67d0\u4e9b\u7279\u6b8a\u7c7b\u578b\u7684\u786c\u4ef6\u4e8b\u4ef6\uff1a \u4f8b\u5982\u6267\u884c\u547d\u4ee4\uff0c\u7f13\u5b58\u5931\u6548\uff0c\u6216\u5206\u652f\u9884\u6d4b\u9519\u8bef\u7684\u540c\u65f6\u5e76\u4e0d\u4f1a\u964d\u4f4e\u5185\u6838\u6216\u8005\u7a0b\u5e8f\u6267\u884c\u901f\u5ea6\u3002[4]</p> <p>\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528 <code>perf_event_open</code> [5], Linux\u7cfb\u7edf\u5141\u8bb8\u8bbe\u7f6e\u786c\u4ef6\u548c\u8f6f\u4ef6\u6027\u80fd\u7684\u6027\u80fd\u76d1\u89c6\u3002\u5b83\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6027\u80fd\u4fe1\u606f\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u4f7f\u7528 <code>pid</code> \u548c <code>cpuid</code> \u4f5c\u4e3a\u53c2\u6570. Kepler\u4f7f\u7528<code>pid == -1</code>\u548c<code>cpuid</code>\u4f5c\u4e3a\u5b9e\u9645\u7684cpuid\u3002 \u8fd9\u79cdpid\u548ccpu\u7684\u7ec4\u5408\u5141\u8bb8\u6d4b\u91cf\u6307\u5b9acpu\u4e0a\u7684\u6240\u6709\u8fdb\u7a0b/\u7ebf\u7a0b\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#linuxperf_event_open","title":"\u5982\u4f55\u68c0\u67e5Linux\u5185\u6838\u662f\u5426\u652f\u6301<code>perf_event_open</code>?","text":"<p>\u68c0\u67e5\u662f\u5426\u5b58\u5728<code>/proc/sys/kernel/perf_event_paranoid</code>\uff0c\u4ee5\u4e86\u89e3\u5185\u6838\u662f\u5426\u652f\u6301<code>perf_event_open</code>\u4ee5\u53ca\u5141\u8bb8\u6d4b\u91cf\u7684\u5185\u5bb9</p> <pre><code>   The perf_event_paranoid file can be set to restrict\n   access to the performance counters.\n\n   2      allow only user-space measurements (default since Linux 4.6).\n   1      allow both kernel and user measurements (default before Linux 4.6).\n   0      allow access to CPU-specific data but not raw tracepoint samples.\n  -1      no restrictions.\n\n\n   Measuring all process/threads required CAP_SYS_ADMIN capability or a value less than 1 in above file\n</code></pre> <p>CAP_SYS_ADMIN \u662f\u6700\u9ad8\u7ea7\u522b\u7684\u80fd\u529b\uff0c\u5b83\u53ef\u80fd\u5177\u6709\u4e00\u4e9b\u5b89\u5168\u5f71\u54cd\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#kepler","title":"kepler\u63a2\u6d4b\u5185\u6838\u8fdb\u7a0b","text":"<p>kepler\u6355\u6349\u5185\u6838\u51fd\u6570<code>finish_task_switch</code>[3], \u8be5\u51fd\u6570\u8d1f\u8d23\u5728\u4efb\u52a1\u5207\u6362\u53d1\u751f\u540e\u8fdb\u884c\u6e05\u7406\u3002\u7531\u4e8e\u63a2\u6d4b\u901a\u8fc7<code>kprobe</code>\u53d1\u751f\uff0c\u5bf9\u5b83\u7684\u8c03\u7528\u53d1\u751f\u5728\u8c03\u7528<code>finish_task_switch</code>\u4e4b\u524d\uff0c\u800c\u4e0d\u662f\u5728\u63a2\u6d4b\u51fd\u6570\u8fd4\u56de\u540e\u8c03\u7528<code>kretprobe</code>\u3002</p> <p>\u5f53\u5185\u6838\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\uff0c\u51fd\u6570<code>finish_task_switch</code>\u5728\u65b0\u8fdb\u7a0b\u8fdb\u5165CPU\u65f6\u88ab\u8c03\u7528\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u53c2\u6570\u7c7b\u578b<code>task_struct*</code>\uff0c\u8be5\u53c2\u6570\u7c7b\u578b\u5305\u542b\u6240\u6709\u5173\u4e8e\u79bb\u5f00CPU\u8fdb\u7a0b\u7684\u6240\u6709\u4fe1\u606f\u3002[3]</p> <p>kepler\u7684\u63a2\u6d4b\u51fd\u6570</p> <pre><code>int kprobe__finish_task_switch(struct pt_regs *ctx, struct task_struct *prev)\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u662f\u6307\u5411<code>pt_regs</code>\u7ed3\u6784\u7684\u6307\u9488\uff0c\u8be5\u7ed3\u6784\u6307\u7684\u662f\u5728\u5185\u6838\u51fd\u6570\u6761\u76ee\u65f6\u4fdd\u6301CPU\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u7ed3\u6784\u3002\u6b64\u7ed3\u6784\u5305\u542b\u4e0eCPU\u5bc4\u5b58\u5668\u76f8\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u4f8b\u5982\u901a\u7528\u5bc4\u5b58\u5668\uff08\u4f8b\u5982\uff0cr0\u3001r1\u7b49\uff09\u3001\u5806\u6808\u6307\u9488\uff08sp\uff09\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08pc\uff09\u548c\u5176\u4ed6\u7279\u5b9a\u4e8e\u4f53\u7cfb\u7ed3\u6784\u7684\u5bc4\u5b58\u5668\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6307\u5411<code>task_struct</code>\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u5305\u542b\u524d\u4e00\u4efb\u52a1\u7684\u4efb\u52a1\u4fe1\u606f\uff0c\u5373\u79bb\u5f00CPU\u7684\u4efb\u52a1\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#keplercpu","title":"Kepler\u76d1\u63a7CPU\u786c\u4ef6\u4e8b\u4ef6","text":"<p>Kepler\u76d1\u63a7\u4ee5\u4e0bCPU\u786c\u4ef6\u4e8b\u4ef6</p> PERF Type Perf Count Type Description Array name (in bpf program) PERF_TYPE_HARDWARE PERF_COUNT_HW_CPU_CYCLES Total CPU cycles; can get affected by CPU frequency scaling cpu_cycles_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_REF_CPU_CYCLES Total CPU cycles; not affected by CPU frequency scaling cpu_ref_cycles_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_INSTRUCTIONS Retired instructions.  Be careful, these can be affected by various issues, most notably hardware interrupt counts. cpu_instr_hc_reader PERF_TYPE_HARDWARE PERF_COUNT_HW_CACHE_MISSES Cache misses. Usually this indicates Last Level Cache misses; this is intended to be used in conjunction with the PERF_COUNT_HW_CACHE_REFERENCES event to calculate cache miss rates. cache_miss_hc_reader <p>\u6027\u80fd\u8ba1\u6570\u5668\u901a\u8fc7\u7279\u6b8a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fdb\u884c\u8bbf\u95ee\u3002\u6bcf\u4e2a\u4f7f\u7528\u7684\u865a\u62df\u8ba1\u6570\u5668\u90fd\u6709\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0e\u76f8\u5e94\u7684\u6570\u7ec4\u76f8\u5173\u8054\u3002\u5f53\u4f7f\u7528bcc\u5305\u88c5\u5668\u51fd\u6570\u65f6\uff0c\u5b83\u8bfb\u53d6\u76f8\u5e94\u7684fd\u5e76\u8fd4\u56de\u503c\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu_1","title":"\u8ba1\u7b97\u8fdb\u7a0bCPU\u8fd0\u884c\u603b\u65f6\u95f4","text":"<p>ebpf\u51fd\u6570(<code>bpfassets/perf_event/perf_event.c</code>)\u7ef4\u62a4\u4e00\u4e2a\u57fa\u4e8e\u65f6\u95f4\u6233\u5bf9\u4e8e<code>&lt;pid, cpuid&gt;</code>\u8868\u3002\u65f6\u95f4\u6233\u8868\u793a\u5728cpu\u4e0a\u8c03\u5ea6pid\u65f6\u4e3apid\u8c03\u7528<code>kprobe_finish_task_switch</code>\u7684\u65f6\u523b<code>&lt;cpuid&gt;</code></p> <p><pre><code>// &lt;Task PID, CPUID&gt; =&gt; Context Switch Start time\n\ntypedef struct pid_time_t { u32 pid; u32 cpu; } pid_time_t;\nBPF_HASH(pid_time, pid_time_t);\n// pid_time is the name of variable which if of type map\n</code></pre> \u5728\u51fd\u6570<code>get_on_cpu_time</code>\u4e2d\uff0c\u5f53\u524d\u65f6\u95f4\u6233\u4e0e<code>pid_time</code>\u6620\u5c04\u4e2d\u7684\u65f6\u95f4\u6233\u4e4b\u95f4\u7684\u5dee\u7528\u4e8e\u8ba1\u7b97\u5f53\u524dcpu\u4e0a\u5148\u524d\u4efb\u52a1\u7684<code>on_cpu_time_delta</code>\u3002</p> <p>\u6b64<code>on_cpu_time_delta</code>\u7528\u4e8e\u7d2f\u79ef\u524d\u4e00\u4efb\u52a1\u7684<code>process_run_time</code>\u5ea6\u91cf\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu_2","title":"\u8ba1\u7b97\u8fdb\u7a0bCPU\u5468\u671f","text":"<p>\u5bf9\u4e8e\u8fdb\u7a0b\u7684CPU\u5468\u671f\uff0cbpf\u7a0b\u5e8f\u7ef4\u62a4<code>cpu_cycles</code>\u6570\u7ec4\uff0c\u5e76\u901a\u8fc7<code>cpuid</code>\u4f5c\u4e3a\u7d22\u5f15\u3002\u8fd9\u4e2a\u6570\u7ec4\u5305\u542b\u6027\u80fd\u6570\u7ec4<code>cpu_cycles_hc_reader</code>\uff0c\u662f\u4e00\u4e2a\u6027\u80fd\u4e8b\u4ef6\u7684\u6570\u7ec4\u3002</p> <p>\u5728\u6bcf\u4e2a\u4efb\u52a1\u5207\u6362\u4e0a\uff0c - \u4ece\u6027\u80fd\u8ba1\u6570\u5668\u9635\u5217cpu_cycles_hc_reader\u8bfb\u53d6\u5f53\u524d\u503c - \u68c0\u7d22cpucycles\u4e2d\u7684\u4e0a\u4e00\u4e2a\u503c - delta\u662f\u901a\u8fc7\u4ece\u5f53\u524d\u503c\u51cf\u53bb\u4e4b\u524d\u7684\u503c\u6765\u8ba1\u7b97\u7684 - \u5f53\u524d\u503c\u88ab\u590d\u5236\u56decpucycles\uff0c\u7528\u4e8e\u4e0b\u4e00\u4e2a\u4efb\u52a1\u5207\u6362</p> <p>\u7531\u6b64\u8ba1\u7b97\u51fa\u7684\u589e\u91cf\u662f\u79bb\u5f00cpu\u7684\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684cpu\u5468\u671f\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu_3","title":"\u8ba1\u7b97\u8fdb\u7a0b\u53c2\u8003CPU\u5468\u671f","text":"<p>\u4e0e\u8ba1\u7b97CPU\u5468\u671f\u7684\u8fc7\u7a0b\u76f8\u540c\uff0c\u6240\u4f7f\u7528\u7684\u6027\u80fd\u6570\u7ec4\u7684\u66ff\u6362\u4e3a<code>cpu_ref_cycles_hc_reader</code>\uff0cprev\u503c\u5b58\u50a8\u5728<code>CPU_ref_cycles</code>\u4e2d</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu_4","title":"\u8ba1\u7b97\u8fdb\u7a0bCPU\u6307\u4ee4","text":"<p>\u4e0e\u8ba1\u7b97CPU\u5468\u671f\u7684\u8fc7\u7a0b\u76f8\u540c\uff0c\u6240\u4f7f\u7528\u7684\u6027\u80fd\u6570\u7ec4\u7684\u66ff\u6362\u4e3a<code>cpu_instr_hc_reader</code>\uff0cprev\u503c\u5b58\u50a8\u5728<code>cpu_instr</code>\u4e2d</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#_2","title":"\u8ba1\u7b97\u8fdb\u7a0b\u7f13\u5b58\u5931\u6548","text":"<p>\u4e0e\u8ba1\u7b97CPU\u5468\u671f\u7684\u8fc7\u7a0b\u76f8\u540c\uff0c\u6240\u4f7f\u7528\u7684\u6027\u80fd\u6570\u7ec4\u7684\u66ff\u6362\u4e3a<code>cache_miss_hc_reader</code>\uff0cprev\u503c\u5b58\u50a8\u5728<code>cache_miss</code>\u4e2d</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#cpu_5","title":"\u8ba1\u7b97CPU\u4e0a\u5e73\u5747\u9891\u7387","text":"<pre><code>avg_freq = ((on_cpu_cycles_delta * CPU_REF_FREQ) / on_cpu_ref_cycles_delta) * HZ;\n\nCPU_REF_FREQ = 2500\nHZ = 1000\n</code></pre> <p>\u6b64\u503c\u5b58\u50a8\u5728\u6570\u7ec4<code>cpu_freq_array</code>\u4e2d</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#_3","title":"\u8fdb\u7a0b\u8868","text":"<p>bpf\u7a0b\u5e8f\u7ef4\u62a4\u4e00\u4e2a\u540d\u4e3a<code>processes</code>\u7684bpf\u6563\u5217\u3002\u6b64\u6563\u5217\u7ef4\u62a4\u4e3a\u8fdb\u7a0b\u8ba1\u7b97\u7684\u6570\u636e\u3002Kepler\u4ece\u8fd9\u4e2a\u6563\u5217\u4e2d\u8bfb\u53d6\u503c\uff08\u5728bcc\u4e2d\u79f0\u4e3a<code>Table</code>\uff09\u5e76\u751f\u6210\u5ea6\u91cf\u3002</p> Key Value Description pid cgroupid Process CGroupID pid Process ID process_run_time Total time a process occupies CPU (calculated each time process leaves CPU on context switch) cpu_cycles Total CPU cycles consumed by process cpu_instr Total CPU instructions consumed by process cache_miss Total Cache miss by process vec_nr Total number of soft irq handles by process (max 10) comm Process name (max length 16) <p>\u6b64\u6563\u5217\u7531<code>container_hc_collector.go</code>\u4e2d\u7684\u5185\u6838\u6536\u96c6\u5668\u8bfb\u53d6\uff0c\u7528\u4e8e\u6536\u96c6\u6307\u6807\u3002</p>"},{"location":"zh/archive/design/ebpf_in_kepler/#_4","title":"\u53c2\u8003","text":"<p>[1] https://ebpf.io/what-is-ebpf/ , https://www.splunk.com/en_us/blog/learn/what-is-ebpf.html , https://www.tigera.io/learn/guides/ebpf/</p> <p>[2] An introduction to KProbes , Kernel Probes (Kprobes)</p> <p>[3] finish_task_switch - clean up after a task-switch</p> <p>[4] Performance Counters for Linux</p> <p>[5] perf_event_open(2) \u2014 Linux manual page</p>"},{"location":"zh/archive/design/kepler-energy-sources/","title":"Kepler \u80fd\u6e90\u6765\u6e90","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#_1","title":"\u80cc\u666f","text":""},{"location":"zh/archive/design/kepler-energy-sources/#rapl-","title":"RAPL - \u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236","text":"<p>Intel \u7684\u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236\uff08Running Average Power Limit\uff0cRAPL\uff09\u662f\u4e00\u4e2a\u786c\u4ef6\u529f\u80fd\uff0c \u5141\u8bb8\u76d1\u63a7 CPU \u82af\u7247\u4e0d\u540c\u57df\u3001\u8fde\u63a5\u7684 DRAM \u548c\u7247\u4e0a GPU \u7684\u80fd\u8017\u3002\u8be5\u529f\u80fd\u5728 Intel \u7684 Sandy Bridge \u67b6\u6784\u4e2d\u9996\u6b21\u5f15\u5165\uff0c\u5e76\u5728 Intel \u540e\u7eed\u5904\u7406\u5668\u67b6\u6784\u7248\u672c\u4e2d\u4e0d\u65ad\u6f14\u8fdb\u3002\u901a\u8fc7 RAPL\uff0c \u53ef\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u5b9e\u65f6\u83b7\u53d6 CPU \u5c01\u88c5\u53ca\u5176\u7ec4\u4ef6\u4ee5\u53ca CPU \u7ba1\u7406\u7684 DRAM \u5185\u5b58\u7684\u529f\u8017\u6570\u636e\u3002</p> <p>RAPL \u63d0\u4f9b\u4e24\u79cd\u4e0d\u540c\u7684\u529f\u80fd\uff1a</p> <ol> <li>\u5141\u8bb8\u4ee5\u975e\u5e38\u7cbe\u7ec6\u7684\u7c92\u5ea6\u548c\u9ad8\u91c7\u6837\u7387\u6d4b\u91cf\u80fd\u8017\u3002</li> <li>\u5141\u8bb8\u9650\u5236\uff08\u6216\u4e0a\u9650\uff09\u5904\u7406\u5668\u5185\u4e0d\u540c\u7ec4\u4ef6\u7684\u5e73\u5747\u529f\u8017\uff0c\u8fd9\u4e5f\u9650\u5236\u4e86\u5904\u7406\u5668\u7684\u70ed\u8f93\u51fa\u3002</li> </ol> <p>Kepler \u5229\u7528\u4e86\u80fd\u8017\u6d4b\u91cf\u529f\u80fd\u3002</p> <p>RAPL \u652f\u6301\u591a\u4e2a\u529f\u7387\u57df\u3002RAPL \u529f\u7387\u57df\u662f\u5728\u529f\u7387\u7ba1\u7406\u65b9\u9762\u5177\u6709\u7269\u7406\u610f\u4e49\u7684\u57df \uff08\u4f8b\u5982\uff0c\u5904\u7406\u5668\u5c01\u88c5\u3001DRAM \u7b49\uff09\u3002\u6bcf\u4e2a\u529f\u7387\u57df\u62a5\u544a\u8be5\u57df\u7684\u80fd\u8017\u3002</p> <p>RAPL \u4e3a\u6d4b\u91cf\u548c\u9650\u5236\u80fd\u8017\u63d0\u4f9b\u4ee5\u4e0b\u529f\u7387\u57df\uff1a</p> <ul> <li>\u5c01\u88c5\uff1a\u5c01\u88c5\uff08PKG\uff09\u57df\u6d4b\u91cf\u6574\u4e2a\u63d2\u69fd\u7684\u80fd\u8017\u3002\u5b83\u5305\u62ec\u6240\u6709\u5185\u6838\u3001\u96c6\u6210\u663e\u5361\u4ee5\u53ca   \u975e\u5185\u6838\u7ec4\u4ef6\uff08\u6700\u540e\u7ea7\u7f13\u5b58\u3001\u5185\u5b58\u63a7\u5236\u5668\uff09\u7684\u6d88\u8017\u3002</li> <li>\u529f\u7387\u5e73\u9762 0\uff08PP0\uff09\uff1a\u6d4b\u91cf\u63d2\u69fd\u4e0a\u6240\u6709\u5904\u7406\u5668\u5185\u6838\u7684\u80fd\u8017\u3002</li> <li>\u529f\u7387\u5e73\u9762 1\uff08PP1\uff09\uff1a\u6d4b\u91cf\u63d2\u69fd\u4e0a\u5904\u7406\u5668\u663e\u5361\uff08GPU\uff09\u7684\u80fd\u8017\uff08\u4ec5\u9650\u684c\u9762\u578b\u53f7\uff09\u3002</li> <li>DRAM\uff1a\u6d4b\u91cf\u8fde\u63a5\u5230\u96c6\u6210\u5185\u5b58\u63a7\u5236\u5668\u7684\u968f\u673a\u5b58\u53d6\u5185\u5b58\uff08RAM\uff09\u7684\u80fd\u8017\u3002</li> </ul> <p>\u4e0d\u540c\u529f\u7387\u57df\u7684\u652f\u6301\u56e0\u5904\u7406\u5668\u578b\u53f7\u800c\u5f02\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#_2","title":"\u8bfb\u53d6\u80fd\u91cf\u503c","text":"<p>Kepler \u6309\u4ee5\u4e0b\u4f18\u5148\u7ea7\u987a\u5e8f\u9009\u62e9\u4f7f\u7528\u4e00\u79cd\u80fd\u6e90\u6765\u6e90\uff1a</p> <ol> <li>Sysfs</li> <li>MSR</li> <li>Hwmon</li> </ol>"},{"location":"zh/archive/design/kepler-energy-sources/#rapl-sysfs","title":"\u4f7f\u7528 RAPL Sysfs","text":"<p>\u4ece Linux \u5185\u6838\u7248\u672c 3.13 \u5f00\u59cb\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\u529f\u7387\u9650\u5236\u6846\u67b6</code>[2] \u8bfb\u53d6 RAPL \u503c\u3002</p> <p>Linux \u529f\u7387\u9650\u5236\u6846\u67b6\u901a\u8fc7 sysfs \u4ee5\u5bf9\u8c61\u6811\u7684\u5f62\u5f0f\u5411\u7528\u6237\u7a7a\u95f4\u516c\u5f00\u529f\u7387\u9650\u5236\u8bbe\u5907\u3002</p> <p>\u6b64 sysfs \u6811\u6302\u8f7d\u5728 <code>/sys/class/powercap/intel-rapl</code>\u3002\u5f53 RAPL \u53ef\u7528\u65f6\uff0c \u6b64\u8def\u5f84\u5b58\u5728\uff0cKepler \u4ece\u8be5\u8def\u5f84\u8bfb\u53d6\u80fd\u91cf\u503c\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#rapl-msr","title":"\u4f7f\u7528 RAPL MSR\uff08\u6a21\u578b\u7279\u5b9a\u5bc4\u5b58\u5668\uff09","text":"<p>RAPL \u80fd\u91cf\u8ba1\u6570\u5668\u53ef\u4ee5\u901a\u8fc7\u6a21\u578b\u7279\u5b9a\u5bc4\u5b58\u5668\uff08MSR\uff09\u8bbf\u95ee\u3002\u8ba1\u6570\u5668\u662f 32 \u4f4d\u5bc4\u5b58\u5668\uff0c \u6307\u793a\u81ea\u5904\u7406\u5668\u542f\u52a8\u4ee5\u6765\u6d88\u8017\u7684\u80fd\u91cf\u3002\u8ba1\u6570\u5668\u5927\u7ea6\u6bcf\u6beb\u79d2\u66f4\u65b0\u4e00\u6b21\u3002\u80fd\u91cf\u4ee5\u6a21\u578b\u7279\u5b9a \u80fd\u91cf\u5355\u4f4d\u7684\u500d\u6570\u8ba1\u7b97\u3002Sandy Bridge \u4f7f\u7528 15.3 \u5fae\u7126\u8033\u7684\u80fd\u91cf\u5355\u4f4d\uff0c\u800c Haswell \u548c Skylake \u4f7f\u7528 61 \u5fae\u7126\u8033\u7684\u5355\u4f4d\u3002\u5728\u8fdb\u884c\u80fd\u91cf\u8ba1\u7b97\u4e4b\u524d\uff0c\u53ef\u4ee5\u4ece\u7279\u5b9a\u7684 MSR \u8bfb\u53d6\u5355\u4f4d\u3002</p> <p>\u5728 Linux \u4e0a\u53ef\u4ee5\u4f7f\u7528\u5185\u6838\u4e2d\u7684 msr \u9a71\u52a8\u7a0b\u5e8f\u76f4\u63a5\u8bbf\u95ee MSR\u3002\u76f4\u63a5\u4ece MSR \u8bfb\u53d6 RAPL \u57df\u503c\u9700\u8981\u68c0\u6d4b CPU \u578b\u53f7\u5e76\u5728\u8bfb\u53d6 RAPL \u57df\u4e4b\u524d\u8bfb\u53d6 RAPL \u80fd\u91cf\u5355\u4f4d\u3002\u4e00\u65e6\u68c0\u6d4b\u5230 CPU \u578b\u53f7\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u76f8\u5e94\u7684 <code>MSR \u72b6\u6001</code> \u5bc4\u5b58\u5668\u6309 CPU \u5c01\u88c5\u8bfb\u53d6 RAPL \u57df\u3002</p> <p>RAPL \u4e8b\u4ef6\u62a5\u544a\u57fa\u672c\u4e0a\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\uff1a \u9759\u6001\u4e8b\u4ef6\uff1a\u70ed\u89c4\u683c\u3001\u6700\u5927\u548c\u6700\u5c0f\u529f\u7387\u4e0a\u9650\u4ee5\u53ca\u65f6\u95f4\u7a97\u53e3\u3002 \u52a8\u6001\u4e8b\u4ef6\uff1a\u6765\u81ea\u82af\u7247\u7684 RAPL \u57df\u80fd\u91cf\u8bfb\u6570\uff0c\u5982 PKG\u3001PP0\u3001PP1 \u6216 DRAM</p>"},{"location":"zh/archive/design/kepler-energy-sources/#xgene-hwmon","title":"\u4f7f\u7528\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f Xgene-hwmon","text":"<p>\u4f7f\u7528 Xgene-hwmon \u9a71\u52a8\u7a0b\u5e8f\uff0cKepler \u4ece APM X-Gene SoC \u8bfb\u53d6\u529f\u7387\u3002\u5b83\u652f\u6301\u8bfb\u53d6 \u4ee5\u5fae\u74e6\u4e3a\u5355\u4f4d\u7684 CPU \u548c IO \u529f\u7387\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#ebpf-perf","title":"\u4f7f\u7528 eBpf perf \u4e8b\u4ef6","text":"<p>\u5728 Kepler \u4e2d\u672a\u4f7f\u7528\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#papi","title":"\u4f7f\u7528 PAPI \u5e93","text":"<p>\u6027\u80fd\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff08Performance Application Programming Interface\uff0cPAPI\uff09 \u5728 Kepler \u4e2d\u672a\u4f7f\u7528\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#_3","title":"\u6240\u9700\u6743\u9650","text":""},{"location":"zh/archive/design/kepler-energy-sources/#sysfspowercap","title":"Sysfs\uff08powercap\uff09","text":"<p>\u4f7f\u7528 powercap \u9a71\u52a8\u7a0b\u5e8f\u9700\u8981 root \u8bbf\u95ee\u6743\u9650\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#msr","title":"MSR","text":"<p>\u4f7f\u7528 msr \u9a71\u52a8\u7a0b\u5e8f\u9700\u8981 root \u8bbf\u95ee\u6743\u9650\u3002</p>"},{"location":"zh/archive/design/kepler-energy-sources/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<p>[1] RAPL in Action: Experiences in Using RAPL for Power Measurements</p> <p>[2] RA Power Capping Framework</p> <p>[3] RA Kernel driver xgene-hwmon</p> <p>[4] RA Performance Application Programming Interface (PAPI)</p>"},{"location":"zh/archive/design/metrics/","title":"\u4f7f\u7528 Kepler \u76d1\u63a7\u5bb9\u5668\u529f\u8017","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler Exporter \u4ee5 Prometheus \u53cb\u597d\u7684\u683c\u5f0f\u516c\u5f00\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u8be5\u683c\u5f0f\u53ef\u4ee5\u88ab\u4efb\u4f55\u7406\u89e3\u6b64\u683c\u5f0f\u7684\u6570\u636e\u5e93\u6293\u53d6\uff0c\u4f8b\u5982 Prometheus \u548c Sysdig\u3002</p> <p>Kepler \u5411 Prometheus \u5bfc\u51fa\u5404\u79cd\u5bb9\u5668\u6307\u6807\uff0c\u5176\u4e2d\u4e3b\u8981\u7684\u6307\u6807\u662f\u4e0e\u80fd\u8017\u76f8\u5173\u7684\u6307\u6807\u3002</p>"},{"location":"zh/archive/design/metrics/#kepler_1","title":"Kepler \u6307\u6807\u6982\u8ff0","text":"<p>\u6240\u6709\u7279\u5b9a\u4e8e Kepler Exporter \u7684\u6307\u6807\u90fd\u4ee5 <code>kepler</code> \u4e3a\u524d\u7f00\u3002</p>"},{"location":"zh/archive/design/metrics/#kepler_2","title":"\u5bb9\u5668\u80fd\u8017\u7684 Kepler \u6307\u6807","text":"<ul> <li> <p>kepler_container_joules_total (Counter)</p> <p>\u6b64\u6307\u6807\u662f\u7ed9\u5b9a\u5bb9\u5668\u7684 CPU\u3001dram\u3001gpus \u548c\u5176\u4ed6\u4e3b\u673a\u7ec4\u4ef6\u7684\u805a\u5408\u5c01\u88c5/\u63d2\u69fd\u80fd\u8017\u3002 \u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u5355\u72ec\u7684\u6307\u6807\uff0c\u5c06\u5728\u672c\u6587\u6863\u7684\u4e0b\u4e00\u90e8\u5206\u8be6\u7ec6\u4ecb\u7ecd\u3002</p> <p>\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u6b64\u6307\u6807\u7b80\u5316\u4e86 Prometheus \u6307\u6807\u3002\u975e\u5e38\u5927\u7684 promQL \u67e5\u8be2\u901a\u5e38\u4f1a\u7ed9 Prometheus \u5e26\u6765\u975e\u5e38\u9ad8\u7684\u5f00\u9500\u3002</p> </li> <li> <p>kepler_container_core_joules_total (Counter)</p> <p>\u8fd9\u6d4b\u91cf\u67d0\u4e2a\u5bb9\u5668\u4f7f\u7528\u7684 CPU \u5185\u6838\u7684\u603b\u80fd\u8017\u3002 \u901a\u5e38\uff0c\u5f53\u7cfb\u7edf\u53ef\u4ee5\u8bbf\u95ee RAPL \u6307\u6807\u65f6\uff0c\u6b64\u6307\u6807\u5c06\u53cd\u6620 RAPL \u529f\u7387\u8ba1\u5212 0 (PP0) \u7684\u6bd4\u4f8b\u5bb9\u5668\u80fd\u8017\uff0c\u5373\u63d2\u69fd\u4e2d\u6240\u6709 CPU \u5185\u6838\u6d88\u8017\u7684\u80fd\u91cf\u3002 \u4f46\u662f\uff0c\u6b64\u6307\u6807\u662f\u5904\u7406\u5668\u578b\u53f7\u7279\u5b9a\u7684\uff0c\u5728\u67d0\u4e9b\u670d\u52a1\u5668 CPU \u4e0a\u53ef\u80fd\u4e0d\u53ef\u7528\u3002 \u5728\u6240\u6709\u652f\u6301 RAPL \u7684\u5904\u7406\u5668\u4e0a\u90fd\u53ef\u7528\u7684 RAPL CPU \u6307\u6807\u662f\u5c01\u88c5\uff0c\u6211\u4eec\u5c06\u5728\u53e6\u4e00\u4e2a\u6307\u6807\u4e2d\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0cRAPL \u53ef\u7528\u4f46\u5185\u6838\u6307\u6807\u4e0d\u53ef\u7528\u65f6\uff0cKepler \u53ef\u80fd\u4f7f\u7528\u80fd\u8017\u5c01\u88c5\u3002 \u4f46\u8bf7\u6ce8\u610f\uff0c\u5c01\u88c5\u80fd\u8017\u4e0d\u4ec5\u6765\u81ea CPU \u5185\u6838\uff0c\u5b83\u662f\u6240\u6709\u63d2\u69fd\u80fd\u8017\u3002</p> <p>\u5982\u679c RAPL \u4e0d\u53ef\u7528\uff0cKepler \u53ef\u80fd\u4f7f\u7528\u6a21\u578b\u670d\u52a1\u5668\u4f30\u7b97\u6b64\u6307\u6807\u3002</p> </li> <li> <p>kepler_container_dram_joules_total (Counter)</p> <p>\u6b64\u6307\u6807\u63cf\u8ff0\u5bb9\u5668\u5728 DRAM \u4e2d\u82b1\u8d39\u7684\u603b\u80fd\u91cf\u3002</p> </li> <li> <p>kepler_container_uncore_joules_total (Counter)</p> <p>\u8fd9\u6d4b\u91cf\u67d0\u4e9b\u975e\u5185\u6838\u7ec4\u4ef6\u6d88\u8017\u7684\u7d2f\u79ef\u80fd\u91cf\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u901a\u5e38\u662f\u6700\u540e\u7ea7\u7f13\u5b58\u3001\u96c6\u6210 GPU \u548c\u5185\u5b58\u63a7\u5236\u5668\uff0c\u4f46\u7ec4\u4ef6\u6570\u91cf\u53ef\u80fd\u56e0\u7cfb\u7edf\u800c\u5f02\u3002 \u975e\u5185\u6838\u6307\u6807\u662f\u5904\u7406\u5668\u578b\u53f7\u7279\u5b9a\u7684\uff0c\u5728\u67d0\u4e9b\u670d\u52a1\u5668 CPU \u4e0a\u53ef\u80fd\u4e0d\u53ef\u7528\u3002</p> <p>\u5f53 RAPL \u4e0d\u53ef\u7528\u65f6\uff0c\u5982\u679c\u8282\u70b9 CPU \u652f\u6301\u975e\u5185\u6838\u6307\u6807\uff0cKepler \u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u670d\u52a1\u5668\u4f30\u7b97\u6b64\u6307\u6807\u3002</p> </li> <li> <p>kepler_container_package_joules_total (Counter)</p> <p>\u8fd9\u6d4b\u91cf CPU \u63d2\u69fd\u6d88\u8017\u7684\u7d2f\u79ef\u80fd\u91cf\uff0c\u5305\u62ec\u6240\u6709\u5185\u6838\u548c\u975e\u5185\u6838\u7ec4\u4ef6\uff08\u4f8b\u5982\u6700\u540e\u7ea7\u7f13\u5b58\u3001\u96c6\u6210 GPU \u548c\u5185\u5b58\u63a7\u5236\u5668\uff09\u3002 RAPL \u5c01\u88c5\u80fd\u91cf\u901a\u5e38\u662f PP0 + PP1\uff0c\u4f46 PP1 \u8ba1\u6570\u5668\u53ef\u80fd\u4f1a\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u8003\u8651\u975e\u5185\u6838\u7ec4\u4ef6\u7684\u6240\u6709\u80fd\u91cf\u4f7f\u7528\u3002 \u56e0\u6b64\uff0c\u5c01\u88c5\u80fd\u8017\u53ef\u80fd\u9ad8\u4e8e\u5185\u6838 + \u975e\u5185\u6838\u3002</p> <p>\u5f53 RAPL \u4e0d\u53ef\u7528\u65f6\uff0cKepler \u53ef\u80fd\u4f7f\u7528\u6a21\u578b\u670d\u52a1\u5668\u4f30\u7b97\u6b64\u6307\u6807\u3002</p> </li> <li> <p>kepler_container_other_joules_total (Counter)</p> <p>\u8fd9\u6d4b\u91cf\u9664 CPU \u548c DRAM \u4e4b\u5916\u7684\u5176\u4ed6\u4e3b\u673a\u7ec4\u4ef6\u7684\u7d2f\u79ef\u80fd\u8017\u3002 \u7edd\u5927\u591a\u6570\u4e3b\u677f\u90fd\u6709\u4e00\u4e2a\u80fd\u8017\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u5185\u6838 acpi \u6216 ipmi \u8bbf\u95ee\u3002 \u6b64\u4f20\u611f\u5668\u62a5\u544a\u6574\u4e2a\u7cfb\u7edf\u7684\u80fd\u8017\u3002 \u6b64\u5916\uff0c\u67d0\u4e9b\u5904\u7406\u5668\u67b6\u6784\u652f\u6301 RAPL \u5e73\u53f0\u57df (PSys)\uff0c\u5b83\u662f\"\u7247\u4e0a\u7cfb\u7edf\"(SOC) \u6d88\u8017\u7684\u80fd\u91cf\u3002</p> <p>\u901a\u5e38\uff0c\u6b64\u6307\u6807\u662f\u4e3b\u673a\u80fd\u8017\uff08\u6765\u81ea acpi\uff09\u51cf\u53bb RAPL \u5c01\u88c5\u548c DRAM\u3002</p> </li> <li> <p>kepler_container_gpu_joules_total (Counter)</p> <p>\u8fd9\u6d4b\u91cf\u67d0\u4e2a\u5bb9\u5668\u4f7f\u7528\u7684 GPU \u7684\u603b\u80fd\u8017\u3002 \u76ee\u524d\uff0cKepler \u4ec5\u652f\u6301 NVIDIA GPU\uff0c\u4f46\u6b64\u6307\u6807\u5c06\u6765\u4e5f\u4f1a\u53cd\u6620\u5176\u4ed6\u52a0\u901f\u5668\u3002 \u56e0\u6b64\uff0c\u5f53\u7cfb\u7edf\u6709 NVIDIA GPU \u65f6\uff0cKepler \u53ef\u4ee5\u901a\u8fc7 NVIDIA nvml \u5305\u4f7f\u7528 GPU \u7684\u8fdb\u7a0b\u80fd\u8017\u548c\u5229\u7528\u7387\u6765\u8ba1\u7b97\u5bb9\u5668\u7684 gpu \u80fd\u8017\u3002</p> </li> <li> <p>kepler_container_energy_stat (Counter)</p> <p>\u6b64\u6307\u6807\u5305\u542b\u51e0\u4e2a\u5bb9\u5668\u6307\u6807\uff0c\u6807\u8bb0\u6709\u5728\u6a21\u578b\u670d\u52a1\u5668\u4e2d\u7528\u4e8e\u9884\u6d4b\u7684\u5bb9\u5668\u8d44\u6e90\u5229\u7528\u7387 cgroup \u6307\u6807\u3002</p> <p>\u6b64\u6307\u6807\u662f\u6a21\u578b\u670d\u52a1\u5668\u7279\u5b9a\u7684\uff0c\u53ef\u80fd\u968f\u65f6\u66f4\u65b0\u3002</p> </li> </ul>"},{"location":"zh/archive/design/metrics/#kepler_3","title":"\u5bb9\u5668\u8d44\u6e90\u5229\u7528\u7387\u7684 Kepler \u6307\u6807","text":""},{"location":"zh/archive/design/metrics/#_1","title":"\u57fa\u7840\u6307\u6807","text":"<ul> <li> <p>kepler_container_bpf_cpu_time_us_total</p> <p>\u8fd9\u4f7f\u7528 BPF \u8ddf\u8e2a\u6d4b\u91cf\u5bb9\u5668\u4f7f\u7528\u7684\u603b CPU \u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u516c\u5f00\u7684\u6307\u6807\u3002</p> </li> </ul>"},{"location":"zh/archive/design/metrics/#_2","title":"\u786c\u4ef6\u8ba1\u6570\u5668\u6307\u6807","text":"<ul> <li> <p>kepler_container_cpu_cycles_total</p> <p>\u8fd9\u4f7f\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u6d4b\u91cf\u5bb9\u5668\u4f7f\u7528\u7684\u603b CPU \u5468\u671f\u3002 \u4e3a\u4e86\u652f\u6301\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387\u7684\u7ec6\u7c92\u5ea6\u5206\u6790\uff0c\u786c\u4ef6\u8ba1\u6570\u5668\u7531\u4e8e\u5176\u7c92\u5ea6\u548c\u7cbe\u5ea6\u800c\u7279\u522b\u53d7\u6b22\u8fce\u3002</p> <p>CPU \u5468\u671f\u662f\u4e0e CPU \u9891\u7387\u76f4\u63a5\u76f8\u5173\u7684\u6307\u6807\u3002 \u5728\u5904\u7406\u5668\u4ee5\u56fa\u5b9a\u9891\u7387\u8fd0\u884c\u7684\u7cfb\u7edf\u4e0a\uff0cCPU \u5468\u671f\u548c\u603b CPU \u65f6\u95f4\u5927\u81f4\u76f8\u7b49\u3002 \u5728\u5904\u7406\u5668\u4ee5\u53d8\u5316\u9891\u7387\u8fd0\u884c\u7684\u7cfb\u7edf\u4e0a\uff0cCPU \u5468\u671f\u548c\u603b CPU \u65f6\u95f4\u5c06\u6709\u4e0d\u540c\u7684\u503c\u3002</p> </li> <li> <p>kepler_container_cpu_instructions_total</p> <p>\u8fd9\u4f7f\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u6d4b\u91cf\u5bb9\u5668\u4f7f\u7528\u7684\u603b cpu \u6307\u4ee4\u3002</p> <p>CPU \u6307\u4ee4\u662f\u8ba1\u7b97 CPU \u5229\u7528\u7387\u7684\u4e8b\u5b9e\u4e0a\u7684\u6307\u6807\u3002</p> </li> <li> <p>kepler_container_cache_miss_total</p> <p>\u8fd9\u4f7f\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u6d4b\u91cf\u7ed9\u5b9a\u5bb9\u5668\u53d1\u751f\u7684\u603b\u7f13\u5b58\u5931\u6548\u3002</p> <p>\u7531\u4e8e\u6ca1\u6709\u76f4\u63a5\u6d4b\u91cf\u5185\u5b58\u8bbf\u95ee\u7684\u4e8b\u4ef6\u8ba1\u6570\u5668\uff0c\u6700\u540e\u7ea7\u7f13\u5b58\u5931\u6548\u7684\u6b21\u6570\u4e3a\u5185\u5b58\u8bbf\u95ee\u6b21\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4ee3\u7406\u3002 \u5982\u679c\u53d1\u751f LLC \u8bfb\u53d6\u5931\u6548\uff0c\u5e94\u8be5\u53d1\u751f\u5bf9\u4e3b\u5185\u5b58\u7684\u8bfb\u53d6\u8bbf\u95ee\uff08\u4f46\u8bf7\u6ce8\u610f\uff0c\u5728\u56de\u5199\u7f13\u5b58\u7b56\u7565\u4e0b\uff0cLLC \u5199\u5165\u5931\u6548\u4e0d\u4e00\u5b9a\u662f\u8fd9\u79cd\u60c5\u51b5\uff09\u3002</p> </li> </ul> <p>Note</p> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7 <code>expose-hardware-counter-metrics</code> Kepler \u6267\u884c\u9009\u9879\u6216 <code>EXPOSE_HW_COUNTER_METRICS</code> \u73af\u5883\u503c\u542f\u7528/\u7981\u7528\u8fd9\u4e9b\u6307\u6807\u7684\u516c\u5f00\u3002</p>"},{"location":"zh/archive/design/metrics/#irq","title":"IRQ \u6307\u6807","text":"<ul> <li> <p>kepler_container_bpf_net_tx_irq_total</p> <p>\u8fd9\u4f7f\u7528 BPF \u8ddf\u8e2a\u6d4b\u91cf\u5bb9\u5668\u4f20\u8f93\u5230\u7f51\u5361\u7684\u603b\u6570\u636e\u5305\u3002</p> </li> <li> <p>kepler_container_bpf_net_rx_irq_total</p> <p>\u8fd9\u4f7f\u7528 BPF \u8ddf\u8e2a\u6d4b\u91cf\u5bb9\u5668\u4ece\u7f51\u5361\u63a5\u6536\u7684\u603b\u6570\u636e\u5305\u3002</p> </li> <li> <p>kepler_container_bpf_block_irq_total</p> <p>\u8fd9\u4f7f\u7528 BPF \u8ddf\u8e2a\u6d4b\u91cf\u5bb9\u5668\u8c03\u7528\u7684\u5757 I/O\u3002</p> </li> </ul> <p>Note</p> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7 <code>EXPOSE_IRQ_COUNTER_METRICS</code> \u73af\u5883\u503c\u542f\u7528/\u7981\u7528\u8fd9\u4e9b\u6307\u6807\u7684\u516c\u5f00\u3002</p>"},{"location":"zh/archive/design/metrics/#kepler_4","title":"\u8282\u70b9\u4fe1\u606f\u7684 Kepler \u6307\u6807","text":"<ul> <li> <p>kepler_node_info (Counter)</p> <p>\u6b64\u6307\u6807\u663e\u793a\u8282\u70b9\u5143\u6570\u636e\uff0c\u5982\u8282\u70b9 CPU \u67b6\u6784\u3002</p> </li> </ul>"},{"location":"zh/archive/design/metrics/#kepler_5","title":"\u8282\u70b9\u80fd\u8017\u7684 Kepler \u6307\u6807","text":"<ul> <li> <p>kepler_node_core_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_uncore_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_dram_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_package_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_other_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_gpu_joules_total (Counter)</p> <p>\u7c7b\u4f3c\u4e8e\u5bb9\u5668\u6307\u6807\uff0c\u4f46\u8868\u793a\u5728\u8282\u70b9\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u5bb9\u5668\u7684\u805a\u5408\uff08\u5373\"system_process\"\uff09\u3002</p> </li> <li> <p>kepler_node_platform_joules_total (Counter)</p> <p>\u6b64\u6307\u6807\u8868\u793a\u4e3b\u673a\u7684\u603b\u80fd\u8017\u3002</p> <p>\u7edd\u5927\u591a\u6570\u4e3b\u677f\u90fd\u6709\u4e00\u4e2a\u80fd\u8017\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7 acpi \u6216 ipmi \u5185\u6838\u8bbf\u95ee\u3002 \u6b64\u4f20\u611f\u5668\u62a5\u544a\u6574\u4e2a\u7cfb\u7edf\u7684\u80fd\u8017\u3002 \u6b64\u5916\uff0c\u67d0\u4e9b\u5904\u7406\u5668\u67b6\u6784\u652f\u6301 RAPL \u5e73\u53f0\u57df (PSys)\uff0c\u5b83\u662f\"\u7247\u4e0a\u7cfb\u7edf\"(SOC) \u6d88\u8017\u7684\u80fd\u91cf\u3002</p> <p>\u901a\u5e38\uff0c\u6b64\u6307\u6807\u662f\u6765\u81ea Redfish BMC \u6216 acpi \u7684\u4e3b\u673a\u80fd\u8017\u3002</p> </li> <li> <p>kepler_node_energy_stat (Counter)</p> <p>\u6b64\u6307\u6807\u5305\u542b\u6765\u81ea\u8282\u70b9\u7684\u591a\u4e2a\u6307\u6807\uff0c\u6807\u8bb0\u6709\u5728\u6a21\u578b\u670d\u52a1\u5668\u4e2d\u4f7f\u7528\u7684\u5bb9\u5668\u8d44\u6e90\u5229\u7528\u7387 cgroup \u6307\u6807\u3002</p> <p>\u6b64\u6307\u6807\u662f\u6a21\u578b\u670d\u52a1\u5668\u7279\u5b9a\u7684\uff0c\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\u3002</p> </li> </ul> <p>Note</p> <p>\"system_process\" \u662f\u4e00\u4e2a\u7279\u6b8a\u6307\u793a\u7b26\uff0c\u5c06\u6240\u6709\u975e\u5bb9\u5668\u5de5\u4f5c\u8d1f\u8f7d\u805a\u5408\u5230\u7cfb\u7edf\u8fdb\u7a0b\u6d88\u8017\u6307\u6807\u4e2d\u3002</p>"},{"location":"zh/archive/design/metrics/#kepler_6","title":"\u8282\u70b9\u8d44\u6e90\u5229\u7528\u7387\u7684 Kepler \u6307\u6807","text":""},{"location":"zh/archive/design/metrics/#_3","title":"\u52a0\u901f\u5668\u6307\u6807","text":"<ul> <li> <p>kepler_node_accelerator_intel_qat</p> <p>\u8fd9\u6d4b\u91cf\u67d0\u4e2a\u8282\u70b9\u4e0a\u52a0\u901f\u5668 Intel QAT \u7684\u5229\u7528\u7387\u3002\u5f53\u7cfb\u7edf\u6709 Intel QAT \u65f6\uff0cKepler \u53ef\u4ee5\u901a\u8fc7\u9065\u6d4b\u8ba1\u7b97\u8282\u70b9 QAT \u7684\u5229\u7528\u7387\u3002</p> </li> </ul>"},{"location":"zh/archive/design/metrics/#prometheus","title":"\u901a\u8fc7 Prometheus \u8868\u8fbe\u5f0f\u63a2\u7d22\u8282\u70b9\u5bfc\u51fa\u5668\u6307\u6807","text":"<p>\u6240\u6709\u80fd\u8017\u6307\u6807\u90fd\u88ab\u5b9a\u4e49\u4e3a\u8ba1\u6570\u5668\uff0c\u9075\u5faa Prometheus \u6307\u6807\u6307\u5357 \u7684\u80fd\u6e90\u76f8\u5173\u6307\u6807\u3002</p> <p>\u7126\u8033\u7684 <code>rate()</code> \u7ed9\u51fa\u4ee5\u74e6\u7279\u4e3a\u5355\u4f4d\u7684\u529f\u7387\uff0c\u56e0\u4e3a\u901f\u7387\u51fd\u6570\u8fd4\u56de\u6bcf\u79d2\u5e73\u5747\u503c\u3002 \u56e0\u6b64\uff0c\u8981\u83b7\u53d6\u5bb9\u5668\u80fd\u8017\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\uff1a</p> <pre><code>sum by (pod_name, container_name, container_namespace, node)(irate(kepler_container_joules_total{}[1m]))\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5728\u5bb9\u5668\u6307\u6807\u4e2d\u62a5\u544a\u8282\u70b9\u6807\u7b7e\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u6307\u6807\"system_process\"\u5728\u6240\u6709\u8282\u70b9\u4e0a\u90fd\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u548c\u547d\u540d\u7a7a\u95f4\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u805a\u5408\u5b83\u4eec\u3002</p>"},{"location":"zh/archive/design/metrics/#rapl","title":"RAPL \u529f\u7387\u57df","text":"<p>RAPL \u529f\u7387\u57df\u652f\u6301\u5728\u4e00\u4e9b\u6700\u8fd1\u7684 Intel \u5fae\u67b6\u6784\u4e2d\uff08\u6d88\u8d39\u7ea7/\u670d\u52a1\u5668\u7ea7\uff09\uff1a</p> \u5fae\u67b6\u6784 Package CORE (PP0) UNCORE (PP1) DRAM Haswell Y/Y Y/N Y/N Y/Y Broadwell Y/Y Y/N Y/N Y/Y Skylake Y/Y Y/Y Y/N Y/Y Kaby Lake Y/Y Y/Y Y/N Y/Y"},{"location":"zh/archive/design/power_model/","title":"Kepler\u529f\u7387\u6a21\u578b/\u8fd0\u884c\u65b9\u5f0f","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u5728Kepler\u4e2d\uff0c\u6839\u636e\u53ef\u7528\u7684\u6d4b\u91cf\u7ed3\u679c\uff0c\u6211\u4eec\u901a\u8fc7\u4e24\u79cd\u529f\u7387\u5efa\u6a21\u65b9\u6cd5\u7684\u6df7\u5408\u63d0\u4f9b\u4e86\u63d0\u4f9bPod\u7ea7\u522b\u529f\u7387\uff1a</p>"},{"location":"zh/archive/design/power_model/#_1","title":"\u5efa\u6a21\u65b9\u6cd5","text":"<p>-\u529f\u7387\u6bd4\u5efa\u6a21\uff1a\u8be5\u5efa\u6a21\u901a\u8fc7\u529f\u7387\u603b\u548c\u7684\u4f7f\u7528\u7387\u6765\u8ba1\u7b97\u66f4\u7ec6\u7c92\u5ea6\u7684\u529f\u7387\u3002\u5f53\u603b\u529f\u7387\u5df2\u77e5\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u6b64\u5efa\u6a21\u3002</p> <p>-\u529f\u7387\u4f30\u8ba1\u5efa\u6a21\uff1a\u8be5\u5efa\u6a21\u901a\u8fc7\u4f7f\u7528\u5ea6\u91cf\u4f5c\u4e3a\u8bad\u7ec3\u6a21\u578b\u7684\u8f93\u5165\u7279\u5f81\u6765\u4f30\u8ba1\u529f\u7387\u3002\u5373\u4f7f\u4e0d\u80fd\u6d4b\u91cf\u529f\u7387\u5ea6\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6b64\u5efa\u6a21\u3002\u4f30\u8ba1\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u7ea7\u522b\uff1a\u8282\u70b9\u603b\u529f\u7387\uff08\u5305\u62ec\u98ce\u6247\u3001\u7535\u6e90\u7b49\uff09\u3001\u8282\u70b9\u5185\u90e8\u7ec4\u4ef6\u529f\u7387\uff08\u5982CPU\u3001\u5185\u5b58\uff09\u3001Pod\u529f\u7387\u3002\u53e6\u8bf7\u53c2\u9605\u5f00\u59cb\u4f7f\u7528Kepler\u6a21\u578b\u670d\u52a1\u5668</p> <p>-\u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\uff1a\u6211\u4eec\u4e3a\u4e0d\u540c\u7684\u90e8\u7f72\u573a\u666f\u63d0\u4f9b\u9884\u8bad\u7ec3\u7684\u529f\u7387\u6a21\u578b\u3002\u5f53\u524d\u7684x86_64\u9884\u8bad\u7ec3\u6a21\u578b\u662f\u5728Intel\u00ae Xeon\u00ae Processor E5-2667 v3\u4e2d\u5f00\u53d1\u7684\u3002\u5176\u4ed6\u67b6\u6784\u7684\u6a21\u578b\u5373\u5c06\u63a8\u51fa\u3002\u60a8\u53ef\u4ee5\u5728Kepler Model DB\u4e2d\u627e\u5230\u8fd9\u4e9b\u6a21\u578b\u3002\u8fd9\u4e9b\u6a21\u578b\u652f\u6301RAPL\u548cACPI\u7535\u6e90\u7684\u529f\u7387\u6bd4\u4f8b\u5efa\u6a21\u548c\u529f\u7387\u4f30\u7b97\u5efa\u6a21\u3002AbsPower\u6a21\u578b\u4f30\u7b97\u9759\u6001\u548c\u52a8\u6001\u529f\u7387\uff0c\u800cDynPower\u6a21\u578b\u53ea\u4f30\u7b97\u52a8\u6001\u529f\u7387\u3002\u8fd9\u4e9b\u6a21\u578b\u7684MAE\uff08\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff09\u4e5f\u5df2\u53d1\u5e03\u3002Kepler\u5bb9\u5668\u955c\u50cf\u5df2\u9884\u52a0\u8f7dacpi/AbsPower/BPFOnly/SGDRegressorTrainer_1.json\u6a21\u578b\u7528\u4e8e\u8282\u70b9\u80fd\u91cf\u4f30\u7b97\uff0c\u4ee5\u53carapl/AbsPower/BPFOnly/SGDRegressorTrainer_1.json\u7528\u4e8e\u5bb9\u5668\u7edd\u5bf9\u529f\u7387\u4f30\u7b97\u3002</p>"},{"location":"zh/archive/design/power_model/#_2","title":"\u4f7f\u7528\u573a\u666f","text":"Scenario Node Total Power Node Component Powers Pod Power BM (x86 with power meter) Measurement (e.g., ACPI) Measurement (RAPL) Power Ratio BM (x86 but no power meter) Power Estimation Measurement Power Ratio BM (non-x86 with power meter) Measurement Power Estimation Power Ratio BM (non-x86 and no power meter) Power Estimation Power Estimation Power Ratio VM with node info and power passthrough from BM (x86 with power meter) Measurement + VM Mapping Measurement + VM Mapping Power Ratio VM with node info and power passthrough from BM (x86 but no power meter) Power Estimation Measurement + VM Mapping Power Ratio VM with node info and power passthrough from BM (non-x86 with power meter) Measurement + VM Mapping Power Estimation Power Ratio VM with node info Power Estimation Power Estimation Power Ratio Pure VM - - Power Estimation"},{"location":"zh/archive/hardwareengagement/","title":"\u786c\u4ef6\u53c2\u4e0e","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u5728\u672c\u6587\u6863\u4e2d\uff0c\u6211\u4eec\u5c06\u5206\u4eab\u5982\u4f55\u8ba9 Kepler \u4e0e\u7279\u5b9a\u786c\u4ef6\u8bbe\u5907\u96c6\u6210\u7684\u6b65\u9aa4\u3002 \u8003\u8651\u5230\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u786c\u4ef6\u8bbe\u5907\uff0c\u6211\u4eec\u5728\u5f53\u524d\u9636\u6bb5\u53ea\u4f1a\u5199\u4e0b\u4e3b\u8981\u6b65\u9aa4\u3002 \u60a8\u53ef\u4ee5\u5c06\u6b64\u4f5c\u4e3a\u5f85\u529e\u4e8b\u9879\u5217\u8868\uff0c\u9010\u6b65\u8ba9 Kepler \u4e0e\u60a8\u81ea\u5df1\u7684\u786c\u4ef6\u8bbe\u5907\u96c6\u6210\u3002</p>"},{"location":"zh/archive/hardwareengagement/#0","title":"\u7b2c 0 \u9636\u6bb5 \u6982\u5ff5\u9a8c\u8bc1","text":"<p>\u5728\u6b64\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u4e13\u6ce8\u4e8e\u53ef\u4ee5\u901a\u8fc7 golang \u6536\u96c6\u7684\u57fa\u672c\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u6784\u5efa\u5728\u60a8\u7684 \u8bbe\u5907\u4e0a\u8fd0\u884c\u826f\u597d\u7684\u81ea\u5df1\u7684 Kepler\u3002\u4ee5\u4e0b\u6b65\u9aa4\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u3002</p>"},{"location":"zh/archive/hardwareengagement/#_2","title":"\u4e8c\u8fdb\u5236\u6784\u5efa\u548c\u5bb9\u5668\u6784\u5efa","text":"<p>\u76ee\u524d Kepler \u5bb9\u5668\u955c\u50cf\u6765\u81ea GPU \u955c\u50cf\u4ee5\u652f\u6301 GPU \u7528\u4f8b\u3002\u8003\u8651\u5230 IOT \u8bbe\u5907\u7684\u4e00\u822c\u60c5\u51b5\u3002 \u60a8\u53ef\u80fd\u9700\u8981\u4ece UBI \u955c\u50cf\u6784\u5efa Kepler\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8bbe\u7f6e\u672c\u5730\u6784\u5efa\u73af\u5883\u5e76\u5c1d\u8bd5\u6784\u5efa\u3002</p> <ol> <li>\u627e\u4e00\u4e2a Linux \u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u5b89\u88c5 Kepler \u4f9d\u8d56\u9879\uff0c\u5982 eBPF golang\uff08BCC\uff09\u3001Linux \u5934\u6587\u4ef6\u5e76\u6784\u5efa Kepler    \uff08\u4ece\u4e3b\u5206\u652f\u6216\u6700\u65b0\u53d1\u5e03\u5206\u652f\uff09\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> <li>\uff08\u53ef\u9009\uff09\u4fee\u6539 dockerfile    \u4ee5\u6784\u5efa\u5bb9\u5668\u955c\u50cf\u3002</li> </ol>"},{"location":"zh/archive/hardwareengagement/#api","title":"\u529f\u8017 API","text":"<p>\u76ee\u524d\uff0c\u6211\u4eec\u4f7f\u7528\u529f\u8017 API\uff0c\u5982 RAPL \u6216 ACPI\u3002\u5bf9\u4e8e\u67d0\u4e9b\u8bbe\u5907\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u627e\u5230\u81ea\u5df1\u7684 \u65b9\u6cd5\u6765\u83b7\u53d6\u529f\u8017\uff0c\u5e76\u5728 golang \u4e2d\u5b9e\u73b0\u4ee5\u4f9b Kepler \u4f7f\u7528\u3002 \u6709\u5173\u8fdb\u4e00\u6b65\u8ba1\u5212\uff0c\u8bf7\u53c2\u8003\u8fd9\u91cc</p>"},{"location":"zh/archive/hardwareengagement/#ebpf","title":"eBPF \u6570\u636e","text":"<p>\u76ee\u524d\uff0c\u6211\u4eec\u4f9d\u8d56 eBPF \u83b7\u53d6\u6709\u5173\u8fdb\u7a0b\u7684\u5173\u952e CPU\u3001IRQ \u548c\u6027\u80fd\u4fe1\u606f\u3002 \u56e0\u6b64\uff0c\u8bf7\u53c2\u8003 cilium/ebpf \u7684\u6587\u6863\u6765\u6d4b\u8bd5\u8fd9\u4e9b Go \u5305\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u662f\u5426\u8fd0\u884c\u826f\u597d\u3002</p> <p>\u5982\u679c\u60a8\u9700\u8981\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u8c03\u6574\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\uff01</p>"},{"location":"zh/archive/hardwareengagement/#1","title":"\u7b2c 1 \u9636\u6bb5 \u4e0e\u6bd4\u7387\u96c6\u6210","text":"<p>\u5728\u6b64\u9636\u6bb5\uff0c\u6211\u4eec\u5c06\u53c2\u8003 Kepler \u6a21\u578b\u3002\u96c6\u6210\u5e76\u5b9e\u73b0\u7279\u5b9a\u4e8e\u60a8\u7684\u8bbe\u5907\u7684\u81ea\u5df1\u7684\u903b\u8f91\uff0c \u5e76\u6df1\u5165\u7814\u7a76\u529f\u8017 API\u3002</p>"},{"location":"zh/archive/hardwareengagement/#_3","title":"\u8303\u56f4","text":"<p>\u60a8\u5e94\u8be5\u77e5\u9053\u529f\u8017 API \u7684\u8303\u56f4\u3002\u60a8\u6709\u591a\u5c11\u4e2a API\uff1f\u5b83\u662f\u5426\u6309 CPU/\u5185\u5b58/IO \u5206\u7c7b\uff1f</p>"},{"location":"zh/archive/hardwareengagement/#_4","title":"\u95f4\u9694","text":"<p>\u60a8\u5e94\u8be5\u77e5\u9053\u529f\u8017 API \u7684\u95f4\u9694\u3002\u7531\u4e8e Kepler \u9ed8\u8ba4\u6bcf 3 \u79d2\u6536\u96c6\u4e00\u6b21 eBPF \u6570\u636e\uff0c \u60a8\u5e94\u8be5\u4e86\u89e3\u95f4\u9694\u5e76\u4f7f\u5b83\u4eec\u5728\u540c\u4e00\u65f6\u9699\u4e2d\u3002</p>"},{"location":"zh/archive/hardwareengagement/#_5","title":"\u9a8c\u8bc1","text":"<p>\u60a8\u53ef\u4ee5\u4ea4\u53c9\u68c0\u67e5\u548c\u9a8c\u8bc1\u6570\u636e\u3002</p>"},{"location":"zh/archive/hardwareengagement/#2","title":"\u7b2c 2 \u9636\u6bb5 \u6a21\u578b\u8bad\u7ec3","text":"<p>\u5f85\u5b9a</p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/","title":"\u4ecb\u7ecd","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler\uff08\u57fa\u4e8e Kubernetes \u7684\u9ad8\u6548\u529f\u8017\u7ea7\u522b\u5bfc\u51fa\u5668\uff09\u662f\u4e00\u4e2a Prometheus \u5bfc\u51fa\u5668\u3002 \u5b83\u4f7f\u7528 eBPF \u63a2\u6d4b CPU \u6027\u80fd\u8ba1\u6570\u5668\u548c Linux \u5185\u6838\u8ddf\u8e2a\u70b9 [1]\uff0c \u800c Telegraf \u662f\u4e00\u4e2a\u6536\u96c6\u3001\u5904\u7406\u3001\u805a\u5408\u548c\u5199\u5165\u6307\u6807\u7684\u4ee3\u7406\u3002 [2] \u672c\u6587\u6863\u6db5\u76d6\u4e86\u5c06 Telegraf \u4e0e Kepler \u96c6\u6210\u7684\u6b65\u9aa4\u3002</p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#telegraf-kepler","title":"\u5c06 Telegraf \u4e0e Kepler \u96c6\u6210\u7684\u597d\u5904","text":"<p>\u5c06 Telegraf \u4e0e Kepler \u96c6\u6210\u6709\u52a9\u4e8e\u7528\u6237\u5728 Kepler \u6307\u6807\u4e4b\u4e0a\u6536\u96c6\u989d\u5916\u7684\u5e73\u53f0\u7ea7\u6307\u6807\u3002 Kepler \u63d0\u4f9b\u6709\u7528\u7684\u5bb9\u5668\u548c\u8282\u70b9\u6307\u6807\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u901a\u8fc7 Telegraf\uff0c\u53ef\u4ee5\u4f7f\u7528 IPMI \u4f20\u611f\u5668 \u63d2\u4ef6\u6536\u96c6\u8bf8\u5982\u7535\u6e90\u4f9b\u5e94\u7535\u6d41\u8f93\u51fa\uff08%\uff09\u7b49\u6307\u6807\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u6536\u96c6\u5f53\u524d\u901a\u8fc7 Kepler \u65e0\u6cd5\u5b9e\u73b0\u7684 DPDK \u76f8\u5173\u6307\u6807\u3002\u901a\u8fc7\u5173\u8054\u6765\u81ea Kepler \u7684\u529f\u8017\u548c CPU \u4f7f\u7528\u6307\u6807\u4ee5\u53ca\u6765\u81ea Telegraf \u7684 DPDK \u6307\u6807\uff0c\u7528\u6237\u5c06\u66f4\u597d\u5730\u4e86\u89e3\u5176\u6570\u636e\u5305\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u8017\u4f7f\u7528\u60c5\u51b5\uff0c \u5e76\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u89c1\u89e3\u7528\u4f5c\u8bc6\u522b\u529f\u8017\u4f18\u5316\u673a\u4f1a\u7684\u8f93\u5165\u3002\u56e0\u6b64\uff0cKepler \u548c Telegraf \u6307\u6807 \u4e00\u8d77\u53ef\u4ee5\u670d\u52a1\u4e8e\u5e2e\u52a9\u6700\u7ec8\u7528\u6237\u7406\u89e3\u548c\u4f18\u5316\u5176\u5404\u79cd\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u529f\u8017\u4f7f\u7528\u7684\u7528\u4f8b\u3002</p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#_2","title":"\u8bbe\u7f6e","text":""},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#_3","title":"\u8bbe\u7f6e\u8be6\u60c5","text":"<p>\u63a7\u5236\u5e73\u9762\u670d\u52a1\u5668\u8be6\u60c5\u5982\u4e0b\uff1a</p> \u7ec4\u4ef6 \u8be6\u60c5 \u578b\u53f7 Intel(R) Xeon(R) Gold 6230N CPU @ 2.30GHz \u63d2\u69fd 2 \u6bcf\u63d2\u69fd\u5185\u6838\u6570 20 \u603b\u5185\u6838\u6570 80 \u8f6f\u4ef6 Ubuntu 22.04.1 LTS"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#kepler","title":"\u4e0b\u8f7d\u5e76\u5b89\u88c5 Kepler","text":"<p>Kepler \u6709\u591a\u79cd\u4e0b\u8f7d\u548c\u5b89\u88c5\u65b9\u5f0f\u3002\u6709\u5173\u6bcf\u4e2a\u6b65\u9aa4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Kepler \u6587\u6863\u3002</p> <pre><code>root@: git clone https://github.com/sustainable-computing-io/kepler.git\nroot@: cd kepler/\nroot@: make build-manifest OPTS=\"BM_DEPLOY PROMETHEUS_DEPLOY\"\nroot@: cd _output/generated-manifest/\nroot@: vi deployment.yaml\nroot@: kubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u786e\u8ba4 Kepler \u7684\u5b89\u88c5\uff1a</p> <pre><code>root@: docker ps -a | grep 'kepler'\n\n530a71f0067f        quay.io/sustainable_computing_io/kepler           \"/bin/sh \u2013\nc '/usr/bi\u2026\"   33 seconds ago      Up 31 seconds\nk8s_kepler-exporter_kepler-exporter-bzj9b_kepler_827ee818-9f5a-460c-a368-\nfc90fde5d378_0\ndecae0dc60e2        k8s.gcr.io/pause:3.3                              \"/pause\"\n38 seconds ago      Up 35 seconds\nk8s_POD_kepler-exporter-bzj9b_kepler_827ee818-9f5a-460c-a368-fc90fde5d378_0\n\nroot@:~# kubectl get pod -n kepler\nNAME                    READY   STATUS    RESTARTS   AGE\nkepler-exporter-8h8x7   1/1     Running   0          63s\nkepler-exporter-bzj9b   1/1     Running   0          63s\nroot@:~# kubectl port-forward kepler-exporter-jdklk 9102:9102 -n kepler --address='0.0.0.0'\n</code></pre>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#telegraf","title":"\u4e0b\u8f7d\u5e76\u542f\u52a8 Telegraf","text":"<p>Telegraf \u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u3002\u8fd9\u91cc\u662f\u901a\u8fc7\u4ece\u6e90\u4ee3\u7801\u4e0b\u8f7d\u548c\u6784\u5efa\u6765\u5b8c\u6210\u7684\u3002</p> <p>Telegraf \u9700\u8981 Go \u7248\u672c &gt;=1.22\uff0c\u53ef\u4ee5\u5b89\u88c5\uff1a\u5b89\u88c5 Go\uff0c Makefile \u9700\u8981 GNU make\u3002</p> <p>Telegraf \u4e0e Go \u5171\u4eab\u76f8\u540c\u7684\u6700\u4f4e\u8981\u6c42\uff1a</p> <ul> <li>Linux \u5185\u6838\u7248\u672c 2.6.32 \u6216\u66f4\u9ad8</li> <li>Windows 10 \u6216\u66f4\u9ad8</li> <li>FreeBSD 12 \u6216\u66f4\u9ad8</li> <li>macOS 10.15 Catalina \u6216\u66f4\u9ad8</li> </ul> <p>\u514b\u9686 Telegraf \u4ed3\u5e93\uff1a</p> <pre><code>root@:~# git clone https://github.com/influxdata/telegraf.git\n</code></pre> <p>\u4ece\u6e90\u76ee\u5f55\u8fd0\u884c make build</p> <pre><code>root@:~# cd telegraf\nroot@:~# make build\n</code></pre> <p>\u751f\u6210 Telegraf \u914d\u7f6e\u6587\u4ef6</p> <pre><code>root@:~# telegraf config &gt; telegraf.conf\n</code></pre> <p>\u7f16\u8f91\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\u4ee5\u542f\u7528\u6240\u9700\u7684\u63d2\u4ef6\u3002\u5bf9\u4e8e\u6b64\u96c6\u6210\u6d3b\u52a8\uff0c\u5e94\u542f\u7528\u4ee5\u4e0b\u63d2\u4ef6\uff1a</p> <p>\u8f93\u5165\u63d2\u4ef6\uff1a Intel PowerStat \u63d2\u4ef6\u3001 Intel PMU \u63d2\u4ef6 \u548c IPMI \u4f20\u611f\u5668 \u8f93\u5165</p> <p>\u8f93\u51fa\u63d2\u4ef6\uff1a \u5fc5\u987b\u5728 Telegraf \u914d\u7f6e\u4e2d\u542f\u7528 Prometheus \u8f93\u51fa \u63d2\u4ef6 \u4ee5\u4fbf\u5c06\u6307\u6807\u5b58\u50a8\u5728 Prometheus \u6570\u636e\u5e93\u4e2d\u3002</p> <p>\u4ee5\u4e0b\u662f\u7528\u4e8e\u542f\u7528\u4e0a\u8ff0\u6240\u6709\u63d2\u4ef6\u7684\u793a\u4f8b\u914d\u7f6e\u3002\u867d\u7136\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6ce8\u91ca\u6389\u76f8\u5e94\u90e8\u5206\u6765\u542f\u7528\u4efb\u4f55 \u5176\u4ed6\u6240\u9700\u63d2\u4ef6\u3002</p> <pre><code>root@:~# vi telegraf.conf\n\n# \u5168\u5c40\u6807\u7b7e\u53ef\u4ee5\u5728\u6b64\u5904\u4ee5 key=\"value\" \u683c\u5f0f\u6307\u5b9a\u3002\n[global_tags]\n  # dc = \"us-east-1\" # \u5c06\u4e3a\u6240\u6709\u6307\u6807\u6807\u8bb0 dc=us-east-1\n  # rack = \"1a\"\n  ## \u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u7528\u4f5c\u6807\u7b7e\uff0c\u5e76\u5728\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\n  # user = \"$USER\"\n\n# telegraf \u4ee3\u7406\u7684\u914d\u7f6e\n[agent]\n  ## \u6240\u6709\u8f93\u5165\u7684\u9ed8\u8ba4\u6570\u636e\u6536\u96c6\u95f4\u9694\n  interval = \"10s\"\n  ## \u5c06\u6536\u96c6\u95f4\u9694\u820d\u5165\u5230 'interval'\n  ## \u5373\uff0c\u5982\u679c interval=\"10s\"\uff0c\u5219\u59cb\u7ec8\u5728 :00\u3001:10\u3001:20 \u7b49\u65f6\u95f4\u6536\u96c6\u3002\n  round_interval = true\n\n  ## Telegraf \u5c06\u4ee5\u6700\u591a metric_batch_size \u4e2a\u6307\u6807\u7684\u6279\u6b21\u5411\u8f93\u51fa\u53d1\u9001\u6307\u6807\u3002\n  ## \u8fd9\u63a7\u5236 Telegraf \u53d1\u9001\u5230\u8f93\u51fa\u63d2\u4ef6\u7684\u5199\u5165\u5927\u5c0f\u3002\n  metric_batch_size = 1000\n\n  ## \u6bcf\u4e2a\u8f93\u51fa\u7684\u6700\u5927\u672a\u5199\u5165\u6307\u6807\u6570\u3002\u589e\u52a0\u6b64\u503c\u5141\u8bb8\u66f4\u957f\u65f6\u95f4\u7684\u8f93\u51fa\u505c\u673a\u65f6\u95f4\n  ## \u800c\u4e0d\u4e22\u5931\u6307\u6807\uff0c\u4f46\u4ee3\u4ef7\u662f\u66f4\u9ad8\u7684\u6700\u5927\u5185\u5b58\u4f7f\u7528\u91cf\u3002\n  metric_buffer_limit = 10000\n\n  ## \u6536\u96c6\u6296\u52a8\u7528\u4e8e\u901a\u8fc7\u968f\u673a\u91cf\u6296\u52a8\u6536\u96c6\u3002\n  ## \u6bcf\u4e2a\u63d2\u4ef6\u5c06\u5728\u6536\u96c6\u4e4b\u524d\u4f11\u7720\u6296\u52a8\u5185\u7684\u968f\u673a\u65f6\u95f4\u3002\n  ## \u8fd9\u53ef\u4ee5\u7528\u4e8e\u907f\u514d\u8bb8\u591a\u63d2\u4ef6\u540c\u65f6\u67e5\u8be2\u8bf8\u5982 sysfs \u7b49\u5185\u5bb9\uff0c\n  ## \u8fd9\u53ef\u80fd\u5bf9\u7cfb\u7edf\u4ea7\u751f\u53ef\u6d4b\u91cf\u7684\u5f71\u54cd\u3002\n  collection_jitter = \"0s\"\n\n  ## \u6240\u6709\u8f93\u51fa\u7684\u9ed8\u8ba4\u5237\u65b0\u95f4\u9694\u3002\u6700\u5927 flush_interval \u5c06\u662f\n  ## flush_interval + flush_jitter\n  flush_interval = \"10s\"\n  ## \u901a\u8fc7\u968f\u673a\u91cf\u6296\u52a8\u5237\u65b0\u95f4\u9694\u3002\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u8fd0\u884c\u5927\u91cf telegraf \u5b9e\u4f8b\u7684\n  ## \u7528\u6237\u51fa\u73b0\u5927\u91cf\u5199\u5165\u5cf0\u503c\u3002\n  ## \u5373\uff0c5s \u7684\u6296\u52a8\u548c 10s \u7684\u95f4\u9694\u610f\u5473\u7740\u5237\u65b0\u5c06\u6bcf 10-15s \u53d1\u751f\u4e00\u6b21\n  flush_jitter = \"0s\"\n\n  ## \u9ed8\u8ba4\u6216\u8bbe\u7f6e\u4e3a \"0s\" \u65f6\uff0c\u7cbe\u5ea6\u5c06\u8bbe\u7f6e\u4e3a\u4e0e\u6536\u96c6\u95f4\u9694\u76f8\u540c\u7684\u65f6\u95f4\u6233\u987a\u5e8f\uff0c\n  ## \u6700\u5927\u503c\u4e3a 1s\u3002\n  ##   \u5373\uff0c\u5f53 interval = \"10s\" \u65f6\uff0cprecision \u5c06\u4e3a \"1s\"\n  ##       \u5f53 interval = \"250ms\" \u65f6\uff0cprecision \u5c06\u4e3a \"1ms\"\n  ## \u7cbe\u5ea6\u4e0d\u4f1a\u7528\u4e8e\u670d\u52a1\u8f93\u5165\u3002\u7531\u6bcf\u4e2a\u5355\u72ec\u7684\u670d\u52a1\u8f93\u5165\u8bbe\u7f6e\u9002\u5f53\u7cbe\u5ea6\u7684\u65f6\u95f4\u6233\u3002\n  ## \u6709\u6548\u7684\u65f6\u95f4\u5355\u4f4d\u662f \"ns\"\u3001\"us\"\uff08\u6216 \"\u00b5s\"\uff09\u3001\"ms\"\u3001\"s\"\u3002\n  precision = \"\"\n\n  ## \u5728\u8c03\u8bd5\u7ea7\u522b\u8bb0\u5f55\u3002\n  # debug = false\n  ## \u4ec5\u8bb0\u5f55\u9519\u8bef\u7ea7\u522b\u6d88\u606f\u3002\n  # quiet = false\n\n  ## \u65e5\u5fd7\u76ee\u6807\u63a7\u5236\u65e5\u5fd7\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u662f \"file\"\u3001\"stderr\" \u6216\u5728 Windows \u4e0a\u7684 \"eventlog\"\u3002\n  ## \u8bbe\u7f6e\u4e3a \"file\" \u65f6\uff0c\u8f93\u51fa\u6587\u4ef6\u7531 \"logfile\" \u8bbe\u7f6e\u786e\u5b9a\u3002\n  # logtarget = \"file\"\n\n  ## \u4f7f\u7528 \"file\" \u65e5\u5fd7\u76ee\u6807\u65f6\u8981\u8bb0\u5f55\u5230\u7684\u6587\u4ef6\u540d\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\n  ## \u5219\u65e5\u5fd7\u5c06\u5199\u5165 stderr\u3002\n  # logfile = \"\"\n\n  ## \u65e5\u5fd7\u6587\u4ef6\u5c06\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u540e\u8f6e\u6362\u3002\u8bbe\u7f6e\u4e3a 0 \u65f6\u4e0d\u6267\u884c\u57fa\u4e8e\u65f6\u95f4\u7684\u8f6e\u6362\u3002\n  ## \u65e5\u5fd7\u4ec5\u5728\u5199\u5165\u65f6\u8f6e\u6362\uff0c\u5982\u679c\u6ca1\u6709\u65e5\u5fd7\u6d3b\u52a8\uff0c\u8f6e\u6362\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u3002\n  # logfile_rotation_interval = \"0d\"\n\n  ## \u5f53\u65e5\u5fd7\u6587\u4ef6\u53d8\u5f97\u5927\u4e8e\u6307\u5b9a\u5927\u5c0f\u65f6\u5c06\u8f6e\u6362\u3002\u8bbe\u7f6e\u4e3a 0 \u65f6\u4e0d\u6267\u884c\u57fa\u4e8e\u5927\u5c0f\u7684\u8f6e\u6362\u3002\n  # logfile_rotation_max_size = \"0MB\"\n\n  ## \u8981\u4fdd\u7559\u7684\u6700\u5927\u8f6e\u6362\u5b58\u6863\u6570\uff0c\u4efb\u4f55\u8f83\u65e7\u7684\u65e5\u5fd7\u90fd\u5c06\u88ab\u5220\u9664\u3002\n  ## \u5982\u679c\u8bbe\u7f6e\u4e3a -1\uff0c\u5219\u4e0d\u5220\u9664\u5b58\u6863\u3002\n  # logfile_rotation_max_archives = 5\n\n  ## \u9009\u62e9\u8bb0\u5f55\u65f6\u4f7f\u7528\u7684\u65f6\u533a\u6216\u952e\u5165 'local' \u8868\u793a\u672c\u5730\u65f6\u95f4\u3002\n  ## \u793a\u4f8b\uff1aAmerica/Chicago\n  # log_with_timezone = \"\"\n\n  ## \u8986\u76d6\u9ed8\u8ba4\u4e3b\u673a\u540d\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u4f7f\u7528 os.Hostname()\n  hostname = \"\"\n  ## \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5219\u4e0d\u5728 telegraf \u4ee3\u7406\u4e2d\u8bbe\u7f6e \"host\" \u6807\u7b7e\u3002\n  omit_hostname = false\n\n###############################################################################\n#                            \u8f93\u51fa\u63d2\u4ef6                                   #\n###############################################################################\n\n# # Prometheus \u5ba2\u6237\u7aef\u7684\u914d\u7f6e\u4ee5\u751f\u6210\n[[outputs.prometheus_client]]\n  ## \u8981\u76d1\u542c\u7684\u5730\u5740\n  listen = \":9273\"\n\n  ## \u6307\u6807\u7248\u672c\u63a7\u5236\u4ece Telegraf \u6307\u6807\u5230 Prometheus \u683c\u5f0f\u7684\u6620\u5c04\u3002\n  ## \u4f7f\u7528 prometheus \u8f93\u5165\u65f6\uff0c\u5728\u4e24\u4e2a\u63d2\u4ef6\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u503c\u4ee5\u786e\u4fdd\u6307\u6807\u5728\n  ## \u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5f80\u8fd4\u3002\n  ##\n  ##   \u793a\u4f8b\uff1ametric_version = 1;\n  ##            metric_version = 2; \u63a8\u8350\u7248\u672c\n  # metric_version = 1\n\n\n###############################################################################\n#                            \u8f93\u5165\u63d2\u4ef6                                    #\n###############################################################################\n\n# # Intel PowerStat \u63d2\u4ef6\u652f\u6301\u76d1\u63a7\u5e73\u53f0\u6307\u6807\uff08\u529f\u8017\u3001TDP\uff09\u548c\u5185\u6838\u6307\u6807\uff0c\u5982\u6e29\u5ea6\u3001\u529f\u8017\u548c\u5229\u7528\u7387\u3002\n[[inputs.intel_powerstat]]\n  ## \u6240\u6709\u5168\u5c40\u6307\u6807\u59cb\u7ec8\u7531 Intel PowerStat \u63d2\u4ef6\u6536\u96c6\u3002\n  ## \u7528\u6237\u53ef\u4ee5\u5728 cpu_metrics \u6570\u7ec4\u4e2d\u9009\u62e9\u63d2\u4ef6\u76d1\u63a7\u54ea\u4e9b\u6bcf CPU \u6307\u6807\u3002\n  ## \u7a7a\u6570\u7ec4\u610f\u5473\u7740\u63d2\u4ef6\u4e0d\u4f1a\u6536\u96c6\u6bcf CPU \u7279\u5b9a\u6307\u6807 - \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\n  ## Intel PowerStat \u63d2\u4ef6\u4ec5\u516c\u5f00\u5e73\u53f0\u7ea7\u9065\u6d4b\u3002\n  #package_metrics \u8bbe\u7f6e\uff1a\n  package_metrics = [\"current_power_consumption\", \"current_dram_power_consumption\", \"thermal_design_power\", \"max_turbo_frequency\", \"uncore_frequency\", \"cpu_base_frequency\"]\n  ## \u652f\u6301\u7684\u9009\u9879\uff1a\n  ## \"cpu_frequency\", \"cpu_busy_frequency\", \"cpu_temperature\", \"cpu_c1_state_residency\", \"cpu_c6_state_residency\", \"cpu_busy_cycles\"\n  cpu_metrics = [\"cpu_frequency\", \"cpu_busy_frequency\", \"cpu_temperature\", \"cpu_c1_state_residency\", \"cpu_c6_state_residency\", \"cpu_busy_cycles\"]\n\n# Intel \u6027\u80fd\u76d1\u63a7\u5355\u5143\u63d2\u4ef6\u516c\u5f00\u901a\u8fc7 Linux Perf \u5b50\u7cfb\u7edf\u53ef\u7528\u7684 Intel PMU \u6307\u6807\n# \u6b64\u63d2\u4ef6\u4ec5\u652f\u6301 amd64 \u4e0a\u7684 Linux\n[[inputs.intel_pmu]]\n  ## \u5305\u542b PMU \u4e8b\u4ef6\u5b9a\u4e49\u7684 JSON \u6587\u4ef6\u7684\u6587\u4ef6\u7cfb\u7edf\u4f4d\u7f6e\u5217\u8868\u3002\n  event_definitions = [\"/root/.cache/pmu-events/GenuineIntel-6-55-7-core.json\", \"/root/.cache/pmu-events/GenuineIntel-6-55-7-uncore.json\"]\n\n  ## \u5185\u6838\u4e8b\u4ef6\u6d4b\u91cf\u5b9e\u4f53\u5217\u8868\u3002\u53ef\u4ee5\u6709\u591a\u4e2a core_events \u90e8\u5206\u3002\n  [[inputs.intel_pmu.core_events]]\n    ## \u8981\u8ba1\u6570\u7684\u4e8b\u4ef6\u5217\u8868\u3002\u4e8b\u4ef6\u540d\u79f0\u5e94\u4e0e event_definitions \u6587\u4ef6\u4e2d\u7684\u540d\u79f0\u5339\u914d\u3002\n    ## \u5355\u4e2a\u6761\u76ee\u53ef\u4ee5\u5305\u542b\u4e8b\u4ef6\u540d\u79f0\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u5e76\u589e\u52a0\u914d\u7f6e\u9009\u9879\u548c perf \u4fee\u9970\u7b26\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8ba1\u6570\u63d0\u4f9b\u7684 event_definitions \u4e2d\u7684\u6240\u6709\u5185\u6838\u4e8b\u4ef6\uff0c\u8df3\u8fc7\u65e0\u6cd5\u89e3\u6790\u7684\u4e8b\u4ef6\u3002\n    events = [\"INST_RETIRED.ANY\", \"CPU_CLK_UNHALTED.THREAD_ANY:config1=0x4043200000000k\"]\n\n    ## \u5c06\u4e8b\u4ef6\u8ba1\u6570\u9650\u5236\u4e3a\u6307\u5b9a\u7684\u5185\u6838\u7f16\u53f7\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u6240\u6709\u5185\u6838\u4e0a\u8ba1\u6570\u4e8b\u4ef6\u3002\n    ## \u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u652f\u6301\u5355\u4e2a \"0\"\u3001\u591a\u4e2a \"0,1,2\" \u548c\u8303\u56f4 \"0-2\" \u8868\u793a\u6cd5\u3002\n    ##   \u793a\u4f8b\uff1acores = [\"0,2\", \"4\", \"12-16\"]\n    cores = [\"0\"]\n\n    ## \u6307\u793a\u63d2\u4ef6\u5e94\u5c1d\u8bd5\u5c06 core_events.events \u4f5c\u4e3a\u5355\u4e2a perf \u7ec4\u8fd0\u884c\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\u6216\u8bbe\u7f6e\u4e3a false\uff0c\u6bcf\u4e2a\u4e8b\u4ef6\u5355\u72ec\u8ba1\u6570\u3002\u9ed8\u8ba4\u4e3a false\u3002\n    ## \u8fd9\u5c06\u53ef\u4ee5\u6d4b\u91cf\u7684\u4e8b\u4ef6\u6570\u91cf\u9650\u5236\u4e3a\u6bcf\u5185\u6838\u53ef\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u7684\u6700\u5927\u503c\u3002\n    ## \u53ef\u80fd\u56e0\u4e8b\u4ef6\u7c7b\u578b\u3001\u56fa\u5b9a\u8ba1\u6570\u5668\u7684\u4f7f\u7528\u800c\u6709\u6240\u4e0d\u540c\u3002\n    # perf_group = false\n\n    ## \u53ef\u9009\u62e9\u8bbe\u7f6e\u5c06\u6dfb\u52a0\u5230\u6b64\u4e8b\u4ef6\u7ec4\u4e2d\u6bcf\u4e2a\u6d4b\u91cf\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u503c\u3002\n    ## \u53ef\u4ee5\u5e94\u7528\u4e8e\u4efb\u4f55\u4e8b\u4ef6\u7ec4\uff0c\u4e0e perf_group \u8bbe\u7f6e\u65e0\u5173\u3002\n    # events_tag = \"\"\n\n  ## uncore \u4e8b\u4ef6\u6d4b\u91cf\u5b9e\u4f53\u5217\u8868\u3002\u53ef\u4ee5\u6709\u591a\u4e2a uncore_events \u90e8\u5206\u3002\n  [[inputs.intel_pmu.uncore_events]]\n    ## \u8981\u8ba1\u6570\u7684\u4e8b\u4ef6\u5217\u8868\u3002\u4e8b\u4ef6\u540d\u79f0\u5e94\u4e0e event_definitions \u6587\u4ef6\u4e2d\u7684\u540d\u79f0\u5339\u914d\u3002\n    ## \u5355\u4e2a\u6761\u76ee\u53ef\u4ee5\u5305\u542b\u4e8b\u4ef6\u540d\u79f0\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u5e76\u589e\u52a0\u914d\u7f6e\u9009\u9879\u548c perf \u4fee\u9970\u7b26\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8ba1\u6570\u63d0\u4f9b\u7684 event_definitions \u4e2d\u7684\u6240\u6709 uncore \u4e8b\u4ef6\uff0c\u8df3\u8fc7\u65e0\u6cd5\u89e3\u6790\u7684\u4e8b\u4ef6\u3002\n    events = [\"UNC_CHA_CLOCKTICKS\", \"UNC_CHA_TOR_OCCUPANCY.IA_MISS\"]\n\n    ## \u5c06\u4e8b\u4ef6\u8ba1\u6570\u9650\u5236\u4e3a\u6307\u5b9a\u7684\u63d2\u69fd\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u6240\u6709\u63d2\u69fd\u4e0a\u8ba1\u6570\u4e8b\u4ef6\u3002\n    ## \u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u652f\u6301\u5355\u4e2a \"0\"\u3001\u591a\u4e2a \"0,1\" \u548c\u8303\u56f4 \"0-1\" \u8868\u793a\u6cd5\u3002\n    ##   \u793a\u4f8b\uff1asockets = [\"0-2\"]\n    sockets = [\"0\"]\n\n    ## \u6307\u793a\u63d2\u4ef6\u5e94\u4e3a\u5206\u5e03\u5728 uncore \u4e2d\u7684\u540c\u4e00\u7c7b\u578b\u7684\u591a\u4e2a\u5355\u5143\u63d0\u4f9b\u805a\u5408\u503c\u3002\n    ## \u5982\u679c\u4e0d\u5b58\u5728\u6216\u8bbe\u7f6e\u4e3a false\uff0c\u6bcf\u4e2a\u5355\u5143\u7684\u4e8b\u4ef6\u4f5c\u4e3a\u5355\u72ec\u7684\u6307\u6807\u516c\u5f00\u3002\u9ed8\u8ba4\u4e3a false\u3002\n    # aggregate_uncore_units = false\n\n    ## \u53ef\u9009\u62e9\u8bbe\u7f6e\u5c06\u6dfb\u52a0\u5230\u6b64\u4e8b\u4ef6\u7ec4\u4e2d\u6bcf\u4e2a\u6d4b\u91cf\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u503c\u3002\n    # events_tag = \"\"\n# \u901a\u8fc7 IPMI \u4ece\u88f8\u673a\u670d\u52a1\u5668\u8bfb\u53d6\u6307\u6807\n[[inputs.ipmi_sensor]]\n  ## \u53ef\u9009\u62e9\u6307\u5b9a ipmitool \u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\n  # path = \"/usr/bin/ipmitool\"\n  ##\n  ## \u5c06 'use_sudo' \u8bbe\u7f6e\u4e3a true \u5c06\u4f7f\u7528 sudo \u8fd0\u884c ipmitool\u3002\n  ## \u5fc5\u987b\u914d\u7f6e sudo \u4ee5\u5141\u8bb8 telegraf \u7528\u6237\u65e0\u5bc6\u7801\u8fd0\u884c ipmitool\u3002\n  use_sudo = true\n  ##\n  ## \u53ef\u9009\u62e9\u5f3a\u5236\u4f1a\u8bdd\u7279\u6743\u7ea7\u522b\u3002\u53ef\u4ee5\u662f CALLBACK\u3001USER\u3001OPERATOR\u3001ADMINISTRATOR\n  # privilege = \"ADMINISTRATOR\"\n  ##\n  ## \u53ef\u9009\u62e9\u901a\u8fc7\u5339\u914d\u7684 url \u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u5668\n  ##  [username[:password]@][protocol[(address)]]\n  ##  \u4f8b\u5982\n  ##    root:passwd@lan(127.0.0.1)\n  ##\n  ## \u5982\u679c\u672a\u6307\u5b9a\u670d\u52a1\u5668\uff0c\u5c06\u67e5\u8be2\u672c\u5730\u673a\u5668\u4f20\u611f\u5668\u7edf\u8ba1\u4fe1\u606f\n  ##\n  # servers = [\"USERID:PASSW0RD@lan(192.168.1.1)\"]\n\n  ## \u63a8\u8350\uff1a\u4f7f\u7528\u662f 'timeout' \u7684\u500d\u6570\u7684\u6307\u6807 'interval' \u4ee5\u907f\u514d\u62c9\u53d6\u6570\u636e\u4e2d\u7684\u95f4\u9699\u6216\u91cd\u53e0\n  interval = \"30s\"\n\n  ## ipmitool \u547d\u4ee4\u5b8c\u6210\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u9ed8\u8ba4\u4e3a 20 \u79d2\u3002\n  timeout = \"20s\"\n\n  ## \u6a21\u5f0f\u7248\u672c\uff1a\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u7248\u672c 1\uff09\n  metric_version = 2\n\n  ## \u53ef\u9009\u62e9\u4e3a IMPI \u8fde\u63a5\u63d0\u4f9b\u5341\u516d\u8fdb\u5236\u5bc6\u94a5\u3002\n  # hex_key = \"\"\n\n  ## \u5982\u679c ipmitool \u5e94\u4f7f\u7528\u7f13\u5b58\n  ## \u5bf9\u6211\u6765\u8bf4\uff0c\u5728 HP G10 \u670d\u52a1\u5668\u4e0a\u542f\u7528\u7f13\u5b58\u65f6\uff0cipmitool \u8fd0\u884c\u901f\u5ea6\u5feb 2 \u5230 10 \u500d\uff08\u4f7f\u7528 ubuntu20.04 \u65f6\uff09\n  ## \u5982\u679c\u67d0\u4e9b\u4f20\u611f\u5668\u542f\u52a8\u8f83\u665a\uff0c\u7f13\u5b58\u6587\u4ef6\u53ef\u80fd\u65e0\u6cd5\u5f88\u597d\u5730\u4e3a\u60a8\u5de5\u4f5c\n  # use_cache = false\n\n  ## ipmitools \u7f13\u5b58\u6587\u4ef6\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\u4e3a OS \u4e34\u65f6\u76ee\u5f55\uff09\n  ## \u63d0\u4f9b\u7684\u8def\u5f84\u5fc5\u987b\u5b58\u5728\u4e14\u5fc5\u987b\u53ef\u5199\n  # cache_path = \"\"\n</code></pre> <p>\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u63d2\u4ef6\u8fd0\u884c Telegraf\uff1a</p> <pre><code>root@:~#./telegraf --config telegraf.conf\n</code></pre>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#prometheus","title":"\u4e0b\u8f7d\u5e76\u542f\u52a8 Prometheus \u5bb9\u5668","text":"<p>Prometheus \u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u3002\u8fd9\u91cc\u662f\u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e3a\u5bb9\u5668\u3002</p> <p>\u521b\u5efa\u4e00\u4e2a\u4ece Kepler \u548c Telegraf \u5b9e\u4f8b\u6293\u53d6\u7684 Prometheus \u914d\u7f6e\u6587\u4ef6\uff1a</p> <p>\u793a\u4f8b Prometheus \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a</p> <pre><code># \u6211\u7684\u5168\u5c40\u914d\u7f6e\nglobal:\nscrape_interval:     15s # \u5c06\u6293\u53d6\u95f4\u9694\u8bbe\u7f6e\u4e3a\u6bcf 15 \u79d2\u3002\u9ed8\u8ba4\u4e3a\u6bcf 1 \u5206\u949f\u3002\nevaluation_interval: 15s # \u6bcf 15 \u79d2\u8bc4\u4f30\u89c4\u5219\u3002\u9ed8\u8ba4\u4e3a\u6bcf 1 \u5206\u949f\u3002\n# scrape_timeout \u8bbe\u7f6e\u4e3a\u5168\u5c40\u9ed8\u8ba4\u503c\uff0810s\uff09\u3002\n\n# \u5305\u542b\u8981\u6293\u53d6\u7684\u786e\u5207\u4e00\u4e2a\u7aef\u70b9\u7684\u6293\u53d6\u914d\u7f6e\uff1a\n# \u8fd9\u91cc\u662f Prometheus \u672c\u8eab\u3002\nscrape_configs:\n# \u4f5c\u4e1a\u540d\u79f0\u6dfb\u52a0\u4e3a\u6807\u7b7e `job=&lt;job_name&gt;` \u5230\u4ece\u6b64\u914d\u7f6e\u6293\u53d6\u7684\u4efb\u4f55\u65f6\u95f4\u5e8f\u5217\u3002\n    - job_name: 'kepler'\n      static_configs:\n        - targets: ['xx.xx.xx:9102']\n    - job_name: 'telegraf'\n      static_configs:\n        - targets: ['xx.xx.xx:9273']\n</code></pre> <p>\u4f7f\u7528\u521b\u5efa\u7684 Prometheus \u914d\u7f6e\u6587\u4ef6\u8fd0\u884c Prometheus \u5bb9\u5668\uff1a</p> <pre><code>root@:~# docker run -d -p 9090:9090 -v $PWD/prometheus.yaml:/etc/prometheus/prometheus.yml prom/prometheus\n</code></pre> <p>\u5728 localhost:9090 \u7684 Prometheus GUI \u4e0a\uff0c\u53ef\u4ee5\u786e\u8ba4 Prometheus \u6b63\u5728\u4ece Kepler \u548c Telegraf \u6293\u53d6\u3002</p> <p></p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#grafana","title":"\u4e0b\u8f7d\u5e76\u542f\u52a8 Grafana \u5bb9\u5668","text":"<p>\u50cf Prometheus \u4e00\u6837\uff0cGrafana \u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u3002\u8fd9\u91cc\u6211\u4eec\u5b89\u88c5 Grafana \u7684\u5bb9\u5668\u955c\u50cf\u3002</p> <pre><code>root@:~# docker run -d --network host --name grafana grafana/grafana\n</code></pre> <p>\u4e00\u65e6 Grafana \u5bb9\u5668\u8fd0\u884c\uff0c\u5728 localhost:3000 \u8bbf\u95ee Grafana GUI\u3002\u4f7f\u7528\u9ed8\u8ba4\u51ed\u636e\u767b\u5f55\u3002 \u767b\u5f55\u540e\uff0c\u9700\u8981\u5c06 Prometheus \u6570\u636e\u5e93\u4f5c\u4e3a\u6570\u636e\u6e90\u6dfb\u52a0\u5230 Grafana GUI \u4e2d\u3002\u70b9\u51fb <code>DATA SOURCES</code> -&gt; <code>Add your first data source</code> \u5e76\u9009\u62e9 Prometheus -&gt; \u70b9\u51fb <code>Save and Test</code></p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#_4","title":"\u4eea\u8868\u677f","text":"<p>\u4e00\u65e6 Prometheus \u88ab\u6dfb\u52a0\u4e3a\u6570\u636e\u6e90\uff0c\u901a\u8fc7\u5bfc\u51fa Kepler-Exporter.json \uff08Kepler \u7684\u9ed8\u8ba4 Grafana \u4eea\u8868\u677f\uff09\u6765\u521b\u5efa\u4eea\u8868\u677f\u3002</p> <p>\u53ef\u4ee5\u7f16\u8f91\u6b64\u9ed8\u8ba4 Kepler \u4eea\u8868\u677f\u4ee5\u663e\u793a Telegraf \u6307\u6807\u548c Kepler \u6307\u6807\u3002</p> <p>\u4f8b\u5982\u5728\u4e0b\u9762\u663e\u793a\u7684\u793a\u4f8b\u4e2d\uff0c\u53f3\u4fa7\u663e\u793a Telegraf \u6536\u96c6\u7684\u529f\u7387\u76f8\u5173\u6307\u6807\uff0c\u800c\u5de6\u4fa7\u663e\u793a Kepler \u6309\u547d\u540d\u7a7a\u95f4\u5212\u5206\u7684\u529f\u7387\u76f8\u5173\u6307\u6807\uff1a</p> <p></p> <p>\u5728 Kepler \u65b9\u9762\uff1a</p> <p>PKG-&gt; \u4ee3\u8868 <code>kepler_container_package_joules_total</code> \u6307\u6807\uff0c\u6d4b\u91cf CPU \u63d2\u69fd\u6d88\u8017\u7684 \u7d2f\u79ef\u80fd\u91cf\uff0c\u5305\u62ec\u6240\u6709\u5185\u6838\u548c\u975e\u5185\u6838\u7ec4\u4ef6\uff08\u4f8b\u5982\u6700\u540e\u7ea7\u7f13\u5b58\u3001\u96c6\u6210 GPU \u548c\u5185\u5b58\u63a7\u5236\u5668\uff09\u3002</p> <p>DRAM-&gt; \u4ee3\u8868 <code>kepler_container_dram_joules_total</code> \u6307\u6807\uff0c\u63cf\u8ff0\u5bb9\u5668\u5728 DRAM \u4e2d \u82b1\u8d39\u7684\u603b\u80fd\u91cf\u3002</p> <p>Other-&gt; \u4ee3\u8868 <code>kepler_container_other_joules_total</code> \u6307\u6807\uff0c\u6d4b\u91cf\u9664 CPU \u548c DRAM \u4e4b\u5916\u7684\u5176\u4ed6\u4e3b\u673a\u7ec4\u4ef6\u7684\u7d2f\u79ef\u80fd\u8017\u3002\u901a\u5e38\uff0c\u6b64\u6307\u6807\u662f\u4e3b\u673a\u80fd\u8017\uff08\u6765\u81ea acpi\uff09\u51cf\u53bb RAPL Package \u548c DRAM\u3002</p> <p>\u5728 Telegraf \u65b9\u9762\uff1a</p> <p>Total PKG current Power-&gt; \u4ee3\u8868 powerstat_package_current_power_consumptions \u6307\u6807\uff0c\u5c55\u793a\u5904\u7406\u5668\u5c01\u88c5\u7684\u5f53\u524d\u529f\u8017\u3002\u5728 Grafana \u4e0a\uff0c\u5b83\u662f\u4e24\u4e2a\u63d2\u69fd\u4e0a\u6307\u6807\u7684\u603b\u548c\uff0c\u5373 \u63d2\u69fd 0 \u7684 powerstat_package_current_power_consumptions + \u63d2\u69fd 1 \u7684 powerstat_package_current_power_consumptions\u3002</p> <p>Total DRAM power -&gt; \u4ee3\u8868 powerstat_package_current_dram_power_consumptions \u6307\u6807\uff0c\u63cf\u8ff0\u4e24\u4e2a\u63d2\u69fd\u7684 DRAM \u4e2d\u82b1\u8d39\u7684\u603b\u80fd\u91cf\u3002</p> <p>Total Thermal design Power -&gt; \u4ee3\u8868 powerstat_package_current_thermal_power_consumptions \u6307\u6807\uff0c\u63cf\u8ff0\u5904\u7406\u5668\u5c01\u88c5\u53ef\u7528\u7684\u6700\u5927\u70ed\u8bbe\u8ba1\u529f\u7387\uff08TDP\uff09\u3002\u5728 Grafana \u4e0a\uff0c\u5b83\u662f\u4e24\u4e2a\u63d2\u69fd\u4e0a \u6307\u6807\u7684\u603b\u548c\uff0c\u5373\u63d2\u69fd 0 \u7684 powerstat_package_current_thermal_power_consumptions + \u63d2\u69fd 1 \u7684 powerstat_package_current_thermal_power_consumptions\u3002</p> <p>Kepler \u65b9\u9762\u548c Telegraf \u65b9\u9762\u7684\u603b DRAM \u529f\u7387\u6307\u6807\u6570\u5b57\u5f7c\u6b64\u5bf9\u9f50\uff08\u5927\u7ea6\uff09\u3002</p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#telegraf-ipmi","title":"Telegraf- IPMI \u6307\u6807","text":"<p>\u5728 Kepler \u4eea\u8868\u677f\u4e0a\uff0c\u6211\u4eec\u8fd8\u63d0\u53d6\u663e\u793a\u7535\u6e90\u4f9b\u5e94\u7535\u6d41\u8f93\u51fa % \u7684 IPMI \u6307\u6807\u3002</p> <p></p>"},{"location":"zh/archive/installation/Kepler-Telegraf-integration-steps/#references","title":"\u53c2\u8003\u8d44\u6599 {#references}","text":"<p>[1] https://sustainable-computing.io/</p> <p>[2] https://github.com/influxdata/telegraf</p>"},{"location":"zh/archive/installation/community-operator/","title":"Kepler \u793e\u533a Operator on OpenShift","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/installation/community-operator/#_1","title":"\u9700\u6c42","text":"<p>\u8bf7\u786e\u5b9a\u60a8\u62e5\u6709:</p> <ul> <li>\u4e00\u4e2aOCP 4.13\u96c6\u7fa4</li> <li>\u6709<code>kubeadmin</code> \u6216\u8005 <code>cluster-admin</code> \u6743\u9650\u7684\u7528\u6237\u3002</li> <li><code>oc</code> \u547d\u4ee4.</li> <li>\u4e0b\u8f7d\u4e86<code>kepler-operator</code>repository. <pre><code>git clone https://github.com/sustainable-computing-io/kepler-operator.git\ncd kepler-exporter\n</code></pre></li> </ul>"},{"location":"zh/archive/installation/community-operator/#operator-huboperator","title":"\u4eceOperator Hub\u5b89\u88c5operator","text":"<ol> <li> <p>\u9009\u4e2dOperators &gt; OperatorHub. \u641c\u7d22 <code>Kepler</code>. \u70b9\u51fb <code>Install</code> </p> </li> <li> <p>\u5141\u8bb8\u5b89\u88c5 </p> </li> <li> <p>\u521b\u5efaKepler\u7684Custom Resource </p> <p>\u6ce8\u610f\uff1a\u5f53\u524d\u7684OCP\u63a7\u5236\u53f0\u53ef\u80fd\u4f1a\u663e\u793a\u4e00\u4e2aJavaScript\u9519\u8bef\uff08\u9884\u8ba1\u5c06\u57284.13.5\u4e2d\u4fee\u590d\uff09\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5f71\u54cd\u5176\u4f59\u6b65\u9aa4\u3002\u4fee\u590d\u7a0b\u5e8f\u76ee\u524d\u53ef\u57284.13.0-0.nightly-2023-07-08-165124\u7248\u672c\u7684OCP\u63a7\u5236\u53f0\u4e0a\u83b7\u5f97\u3002</p> </li> </ol>"},{"location":"zh/archive/installation/community-operator/#grafana-operator","title":"\u5b89\u88c5Grafana operator","text":""},{"location":"zh/archive/installation/community-operator/#grafana-operator_1","title":"\u90e8\u7f72Grafana Operator","text":"<p>\u5f53\u524dAPI Bearer\u4ee4\u724c\u9700\u8981\u5728<code>GrafanaDataSource</code>\u6e05\u5355\u4e2d\u66f4\u65b0\uff0c\u4ee5\u4fbf<code>Grafana DataSource</code>\u53ef\u4ee5\u5411Prometheus\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\u4ee5\u4e0b\u547d\u4ee4\u5c06\u66f4\u65b0\u6e05\u5355\u5e76\u5728\u547d\u540d\u7a7a\u95f4<code>kepler-operator-system</code>\u4e2d\u90e8\u7f72Grafana Operator</p> <pre><code>BEARER_TOKEN=$(oc whoami --show-token)\nhack/dashboard/openshift/deploy-grafana.sh\n</code></pre> <p>\u6ce8\u610f\uff1a\u811a\u672c\u8981\u6c42\u60a8\u4f4d\u4e8e\u9876\u7ea7\u76ee\u5f55\u4e2d\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u60a8\u4f4d\u4e8e<code>kepler-operator</code>\u6839\u76ee\u5f55\u4e2d\u3002\u4f7f\u7528\u547d\u4ee4<code>cd $(git rev-parse --show-toplevel)</code></p>"},{"location":"zh/archive/installation/community-operator/#garafana-console","title":"\u8bbf\u95eeGarafana Console","text":"<p>\u914d\u7f6eNetworking &gt; Routes.  </p>"},{"location":"zh/archive/installation/community-operator/#grafana-dashboard","title":"Grafana Dashboard","text":"<p>\u4f7f\u7528\u5bc6\u94a5<code>kepler:kepler</code>\u767b\u9646Grafana Dashboard. </p>"},{"location":"zh/archive/installation/community-operator/#_2","title":"\u6545\u969c\u6392\u9664","text":"<p>\u6ce8\u610f\uff1a\u5982\u679c\u6570\u636e\u6e90\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u68c0\u67e5API\u4ee4\u724c\u662f\u5426\u5df2\u6b63\u786e\u66f4\u65b0</p> <p></p>"},{"location":"zh/archive/installation/kepler-helm/","title":"\u4f7f\u7528 Helm Chart \u90e8\u7f72","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler Helm Chart \u53ef\u5728 GitHub \u548c ArtifactHub \u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/archive/installation/kepler-helm/#helm","title":"\u5b89\u88c5 Helm","text":"<p>\u5fc5\u987b\u5b89\u88c5 Helm \u624d\u80fd\u4f7f\u7528\u56fe\u8868\u3002 \u8bf7\u53c2\u9605 Helm \u7684\u6587\u6863\u4ee5\u5f00\u59cb\u4f7f\u7528\u3002</p>"},{"location":"zh/archive/installation/kepler-helm/#prometheus","title":"Prometheus \u8bbe\u7f6e","text":"<p>Kepler \u5bfc\u51fa\u5668\u9700\u8981\u5df2\u5b89\u88c5 Prometheus\u8282\u70b9\u5bfc\u51fa\u5668 \u3002\u6211\u4eec\u63a8\u8350\u4f7f\u7528 Kube Prometheus Stack Helm \u56fe\u8868\uff0c\u5176\u4e2d\u5305\u62ec Node Exporter\uff0cGrafana \u548c\u5176\u4ed6\u6709\u7528\u7684\u4e1c\u897f\uff0c\u4ee5\u4fbf\u8f7b\u677e\u64cd\u4f5c\u5229\u7528 Prometheus \u8fdb\u884c\u7aef\u5230\u7aef\u7684 Kubernetes \u96c6\u7fa4\u76d1\u63a7\uff0c\u4f7f\u7528 Prometheus \u8fd0\u8425\u5546\u3002</p> <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nhelm install prometheus prometheus-community/kube-prometheus-stack \\\\\n    --namespace monitoring \\\\\n    --create-namespace \\\\\n    --wait\n</code></pre>"},{"location":"zh/archive/installation/kepler-helm/#kepler-helm","title":"\u6dfb\u52a0 Kepler Helm \u4ed3\u5e93","text":"<pre><code>helm repo add kepler https://sustainable-computing-io.github.io/kepler-helm-chart\nhelm repo update\n</code></pre> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u6700\u65b0\u7248\u672c\uff1a</p> <pre><code>helm search repo kepler\n</code></pre> <p>\u5982\u679c\u60a8\u60f3\u5728\u90e8\u7f72\u524d\u6d4b\u8bd5\u5e76\u67e5\u770b\u6e05\u5355\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\uff1a</p> <pre><code>helm install kepler kepler/kepler --namespace kepler --create-namespace --dry-run --devel\n</code></pre>"},{"location":"zh/archive/installation/kepler-helm/#kepler","title":"\u5b89\u88c5 Kepler","text":"<p>\u4e3a\u4e86\u8ba9 Prometheus \u80fd\u591f\u53d1\u73b0 Kepler \u5bfc\u51fa\u7684\u6307\u6807\uff0c\u9700\u8981\u542f\u7528 <code>serviceMonitor</code> \u5e76\u4e0e\u60a8\u7684 Prometheus \u5b89\u88c5\u7684\u53d1\u5e03\u540d\u79f0\u6807\u8bb0\u3002\u5728\u6211\u4eec\u7684\u5b89\u88c5\u4e2d\uff0c\u6211\u4eec\u5c06 kube-prometheus-stack \u5b89\u88c5\u547d\u540d\u4e3a <code>prometheus</code>\uff1a</p> <pre><code>helm install kepler kepler/kepler \\\\\n    --namespace kepler \\\\\n    --create-namespace \\\\\n    --set serviceMonitor.enabled=true \\\\\n    --set serviceMonitor.labels.release=prometheus \\\\\n</code></pre> <p>\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8986\u76d6 values.yaml \u6587\u4ef6\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u548c\u4ee5\u4e0b\u503c:</p> <pre><code>helm install kepler kepler/kepler --values values.yaml --namespace kepler --create-namespace\n</code></pre> <p>\u4ee5\u4e0b\u8868\u683c\u5217\u51fa\u4e86\u6b64\u56fe\u8868\u7684\u53ef\u914d\u7f6e\u53c2\u6570\u53ca\u5176\u9ed8\u8ba4\u503c\u3002</p> \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c global.namespace Kepler\u7684Kubernetes\u547d\u540d\u7a7a\u95f4 kepler image.repository Kepler Image\u7684\u5b58\u50a8\u5e93 quay.io/sustainable\\_computing\\_io/kepler image.pullPolicy Kepler\u7684\u62c9\u53d6\u7b56\u7565 \u603b\u662f image.tag Kepler\u56fe\u50cf\u7684\u56fe\u50cf\u6807\u7b7e \u6700\u65b0 serviceAccount.name Kepler\u7684\u670d\u52a1\u5e10\u6237\u540d\u79f0 kepler-sa service.type Kepler\u670d\u52a1\u7c7b\u578b ClusterIP service.port Kepler\u66b4\u9732\u7684\u670d\u52a1\u7aef\u53e3 9102"},{"location":"zh/archive/installation/kepler-helm/#_1","title":"\u5b89\u88c5\u540e","text":"<p>\u5b89\u88c5\u540e\uff0c\u60a8\u53ef\u4ee5\u7b49\u5f85 Kepler \u51c6\u5907\u5c31\u7eea\uff1a</p> <pre><code>KPLR_POD=$(\n    kubectl get pod \\\\\n        -l app.kubernetes.io/name=kepler \\\\\n        -o jsonpath=\\\"{.items[0].metadata.name}\\\" \\\\\n        -n kepler\n)\nkubectl wait --for=condition=Ready pod $KPLR_POD --timeout=-1s -n kepler\n</code></pre> <p>\u5e76\u5c06 Kepler\u4eea\u8868\u76d8 \u6dfb\u52a0\u5230 Grafana\uff1a</p> <pre><code>GF_POD=$(\n    kubectl get pod \\\\\n        -n monitoring \\\\\n        -l app.kubernetes.io/name=grafana \\\\\n        -o jsonpath=\\\"{.items[0].metadata.name}\\\"\n)\nkubectl cp kepler_dashboard.json monitoring/$GF_POD:/tmp/dashboards/kepler_dashboard.json\n</code></pre>"},{"location":"zh/archive/installation/kepler-helm/#kepler_1","title":"\u5378\u8f7d Kepler","text":"<p>\u8981\u5378\u8f7d\u6b64\u56fe\u8868\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u6b65\u9aa4</p> <pre><code>helm delete kepler --namespace kepler\n</code></pre>"},{"location":"zh/archive/installation/kepler-operator/","title":"\u901a\u8fc7Kepler Operator\u5728Kind\u4e0a\u5b89\u88c5","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/installation/kepler-operator/#_1","title":"\u9700\u6c42","text":"<p>\u5728\u5f00\u59cb\u524d\u8bf7\u786e\u8ba4\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86:</p> <ul> <li><code>kubectl</code></li> <li>\u4e0b\u8f7d\u4e86<code>kepler-operator</code>repository</li> <li>\u76ee\u6807k8s\u96c6\u7fa4\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Kind\u6765\u7b80\u5355\u6784\u5efa\u4e00\u4e2a\u672c\u5730k8s\u96c6\u7fa4\u6765\u4f53\u9a8c\u672c\u6559\u7a0b\u3002\u542f\u52a8\u4e00\u4e2a\u672c\u5730kind\u96c6\u7fa4, \u6216\u76f4\u63a5\u5728\u60a8\u8fdc\u7aef\u7684k8s\u96c6\u7fa4\u6267\u884c\u3002\u6ce8\u610f\u60a8\u7684controller\u5c06\u4f1a\u81ea\u52a8\u4f7f\u7528\u5f53\u524d\u7684kubeconfig\u914d\u7f6e\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7<code>kubectl cluster-info</code>\u6765\u67e5\u770b\u3002</li> <li>\u6709<code>kubeadmin</code> \u6216\u8005 <code>cluster-admin</code> \u6743\u9650\u7684\u7528\u6237\u3002</li> </ul>"},{"location":"zh/archive/installation/kepler-operator/#kind","title":"\u542f\u52a8\u4e00\u4e2a\u672c\u5730kind\u96c6\u7fa4","text":"<pre><code>cd kepler-operator\nmake cluster-up CLUSTER_PROVIDER='kind' CI_DEPLOY=true GRAFANA_ENABLE=true\n\nkubectl get pods -n monitoring\n\ngrafana-b88df6989-km7c6                1/1     Running   0          48m\nprometheus-k8s-0                       2/2     Running   0          46m\nprometheus-operator-6bd88c8bdf-9f69h   2/2     Running   0          48m\n</code></pre>"},{"location":"zh/archive/installation/kepler-operator/#kepler-operator","title":"\u542f\u52a8kepler-operator","text":"<ul> <li> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7quay.io\u4e0a\u7684image\u6765\u90e8\u7f72kepler-operator.</p> <pre><code>make deploy IMG=quay.io/sustainable_computing_io/kepler-operator:latest\nkubectl config set-context --current --namespace=monitoring\nkubectl apply -k config/samples/\n</code></pre> </li> <li> <p>\u901a\u8fc7<code>kubectl get pods -n monitoring</code>\u547d\u4ee4\u6765\u9a8c\u8bc1<code>kepler-exporter</code>pod\u7684\u90e8\u7f72\u60c5\u51b5\u3002</p> </li> </ul>"},{"location":"zh/archive/installation/kepler-operator/#grafana-dashboard","title":"\u8bbe\u7f6eGrafana Dashboard","text":"<p>\u4f7f\u7528<code>GRAFANA_ENABLE=true</code> \u6765\u914d\u7f6e<code>kube-prometheus</code>\u5728\u547d\u540d\u7a7a\u95f4<code>monitoring</code>\u4e0a\u7684\u90e8\u7f72. \u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbf\u95ee\u4f4d\u4e8e3000\u7aef\u53e3\u7684grafana\u754c\u9762\u3002</p> <pre><code>kubectl port-forward svc/grafana 3000:3000 -n monitoring\n</code></pre> <p>\u5e76\u901a\u8fc7\u4ee5\u4e0b\u57df\u540d\u8bbf\u95eehttp://localhost:3000</p>"},{"location":"zh/archive/installation/kepler-operator/#service-monitor","title":"Service Monitor","text":"<p>\u8ba9<code>kube-prometheus</code> \u4f7f\u7528 <code>kepler-exporter</code> \u670d\u52a1\u7aef\u53e3\u8fdb\u884c\u76d1\u63a7\uff0c\u60a8\u9700\u8981\u914d\u7f6eservice monitor.</p> <p>Note</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b<code>kube-prometheus</code> \u4e0d\u4f1a\u6355\u6349<code>monitoring</code>\u547d\u540d\u7a7a\u95f4\u4e4b\u5916\u7684\u670d\u52a1. \u5982\u679c\u60a8\u7684kepler\u90e8\u7f72\u5728<code>monitoring</code>\u7a7a\u95f4\u4e4b\u5916\u76d1\u63a7\u6240\u6709\u7684\u547d\u540d\u7a7a\u95f4.</p> <pre><code>kubectl apply -n monitoring -f - &lt;&lt; EOF\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kepler-exporter\n    sustainable-computing.io/app: kepler\n  name: monitor-kepler-exporter\nspec:\n  endpoints:\n  - interval: 3s\n    port: http\n    relabelings:\n    - action: replace\n      regex: (.*)\n      replacement: $1\n      sourceLabels:\n      - __meta_kubernetes_pod_node_name\n      targetLabel: instance\n    scheme: http\n  jobLabel: app.kubernetes.io/name\n  namespaceSelector:\n    matchNames:\n    any: true\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: exporter\n      app.kubernetes.io/name: kepler-exporter\nEOF\n</code></pre>"},{"location":"zh/archive/installation/kepler-operator/#grafana-dashboard_1","title":"Grafana Dashboard","text":"<p>\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u914d\u7f6eGrafana:</p> <ul> <li>\u767b\u9646localhost:3000\u9ed8\u8ba4\u7528\u6237\u540d/\u5bc6\u7801\u4e3a<code>admin:admin</code></li> <li>\u5012\u5165\u9ed8\u8ba4dashboard</li> </ul> <p></p>"},{"location":"zh/archive/installation/kepler-operator/#operator","title":"\u5378\u8f7doperator","text":"<p>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5378\u8f7d: <pre><code>make undeploy\n</code></pre></p> <p>\u53c2\u8003\u8fd9\u91cc \u6765\u8ba9kepler operator\u8fd0\u884c\u5728kind\u96c6\u7fa4\u4e0a\u3002</p>"},{"location":"zh/archive/installation/kepler-operator/#_2","title":"\u9519\u8bef\u6392\u67e5","text":""},{"location":"zh/archive/installation/kepler-operator/#_3","title":"\u76d1\u63a7\u6240\u6709\u7684\u547d\u540d\u7a7a\u95f4","text":"<p>kube-prometheus\u9ed8\u8ba4\u4e0d\u4f1a\u76d1\u63a7\u6240\u6709\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u662f\u7531\u4e8eRBAC\u63a7\u5236\u7684\u3002 \u4ee5\u4e0bclusterrole <code>prometheus-k8s</code>\u7684\u914d\u7f6e\u8bb2\u5141\u8bb8kube-prometheus\u76d1\u63a7\u6240\u6709\u547d\u540d\u7a7a\u95f4\u3002</p> <pre><code>oc describe clusterrole prometheus-k8s\nName:         prometheus-k8s\nLabels:       app.kubernetes.io/component=prometheus\n              app.kubernetes.io/instance=k8s\n              app.kubernetes.io/name=prometheus\n              app.kubernetes.io/part-of=kube-prometheus\n              app.kubernetes.io/version=2.45.0\nAnnotations:  &lt;none&gt;\nPolicyRule:\n  Resources                    Non-Resource URLs  Resource Names  Verbs\n  ---------                    -----------------  --------------  -----\n  endpoints                    []                 []              [get list watch]\n  pods                         []                 []              [get list watch]\n  services                     []                 []              [get list watch]\n  ingresses.networking.k8s.io  []                 []              [get list watch]\n                               [/metrics]         []              [get]\n  nodes/metrics                []                 []              [get]\n</code></pre> <ul> <li> <p>\u5728\u521b\u5efa\u542f\u52a8\u4e00\u4e2a\u672c\u5730kind\u96c6\u7fa4\u5b9a\u5236prometheus\uff0c\u8bf7\u53c2\u8003 kube-prometheus\u6587\u6863Customizing Kube-Prometheus</p> </li> <li> <p>\u8bf7\u786e\u5b9a\u60a8\u5e94\u7528\u4e86this jsonnet\u4fdd\u8bc1prometheus\u76d1\u63a7\u6240\u6709\u547d\u540d\u7a7a\u95f4\u3002</p> </li> </ul>"},{"location":"zh/archive/installation/kepler-rpm/","title":"\u5c06 Kepler \u5b89\u88c5\u4e3a RPM","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/installation/kepler-rpm/#0710","title":"\u7248\u672c 0.7.10 \u53ca\u66f4\u65b0\u7248\u672c","text":"<p>\u5f53\u524d\u7684 rpm \u53d1\u884c\u7248\u662f\u4e00\u4e2a\u542f\u52a8 podman \u5bb9\u5668\u7684 systemd \u5355\u5143\u3002</p> <p>\u4ece Kepler \u53d1\u5e03 URL \u4e0b\u8f7d \u6700\u65b0\u7a33\u5b9a\u7248\u672c</p> <pre><code>tar xvzf kepler.rpm.tar.gz\nyum install RPMS/noarch/container-kepler-0.7.10-1.noarch.rpm\nsystemctl enable container-kepler --now\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u9a8c\u8bc1 podman \u542f\u52a8\u4e86 kepler \u5bb9\u5668\uff1a</p> <p><code>sudo podman ps</code></p> <p>\u7136\u540e\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\u9884\u914d\u7f6e\u7aef\u53e3\u4e0a\u7684\u4ee5\u4e0b URL \u6d4f\u89c8\u5668</p> <p>\u6216\u901a\u8fc7 curl \u547d\u4ee4\uff1a</p> <p><code>curl localhost:8888/metrics | grep kepler_node_package_joules_total</code></p>"},{"location":"zh/archive/installation/kepler-rpm/#0710_1","title":"0.7.10 \u4e4b\u524d\u7684\u7248\u672c","text":"<p>\u8f83\u65e7\u7248\u672c\u76f4\u63a5\u5c06 kepler \u5b89\u88c5\u4e3a rpm \u5305\uff08\u800c\u4e0d\u662f\u50cf\u65b0\u7248\u672c\u4e2d\u90a3\u6837\u4f5c\u4e3a\u5bb9\u5668\uff09 \u8981\u5b89\u88c5 Kepler RPM \u4e0b\u8f7d \u6700\u65b0\u7a33\u5b9a\u7248\u672c\uff0c\u89e3\u538b\u5e76\u5b89\u88c5\uff1a</p> <pre><code>sudo dnf localinstall kepler-[version.arch].rpm\n\nsystemctl start kepler.service\n</code></pre> <p>\u68c0\u67e5\u72b6\u6001\uff1a</p> <pre><code>systemctl status kepler.service\n\njournalctl -f | grep kepler\n</code></pre> <p>\u4e3a\u4e86\u542f\u7528\u8fdb\u7a0b\u7ea7\u80fd\u91cf\u7edf\u8ba1\uff0c\u8bf7\u8f93\u5165\uff1a</p> <pre><code>mkdir -p /etc/kepler/kepler.config\necho -n true &gt; /etc/kepler/kepler.config/ENABLE_PROCESS_METRICS\n</code></pre> <p>kepler \u670d\u52a1\u5728\u9ed8\u8ba4\u7aef\u53e3 8888 \u4e0a\u8fd0\u884c\u3002</p> <p>\u4f7f\u7528\u60a8\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u5bfc\u822a\u5230\u673a\u5668 IP \u7684\u7aef\u53e3 8888\u3002</p>"},{"location":"zh/archive/installation/kepler/","title":"\u4f7f\u7528\u6e05\u5355\u90e8\u7f72","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/installation/kepler/#_2","title":"\u5165\u95e8\u6307\u5357","text":"<p>\u4ee5\u4e0b\u8bf4\u660e\u9002\u7528\u4e8e <code>Kind</code> \u548c <code>Kubeadm</code> \u96c6\u7fa4\u3002</p>"},{"location":"zh/archive/installation/kepler/#_3","title":"\u5148\u51b3\u6761\u4ef6","text":"<ol> <li> <p>\u60a8\u6709\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 Kubernetes \u96c6\u7fa4\u3002</p> <p>Note</p> <p>\u5982\u679c\u60a8\u60f3\u8981\u8bbe\u7f6e kind \u96c6\u7fa4\u8bf7\u9075\u5faa\u6b64\u6307\u5357</p> </li> <li> <p>\u76d1\u63a7\u5806\u6808\uff0c\u5373 Prometheus \u548c Grafana \u5df2\u8bbe\u7f6e\u5b8c\u6210\u3002\u6b65\u9aa4\u5728\u6b64</p> <p>Note</p> <p>\u9ed8\u8ba4\u7684 Grafana \u90e8\u7f72\u53ef\u4ee5\u4f7f\u7528\u51ed\u636e <code>admin:admin</code> \u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 \u5728\u672c\u5730\u516c\u5f00\u57fa\u4e8e Web \u7684\u7528\u6237\u754c\u9762\uff1a</p> <pre><code>kubectl -n monitoring port-forward svc/grafana 3000\n</code></pre> </li> </ol> <p>\u5982\u679c\u6ee1\u8db3\u5148\u51b3\u6761\u4ef6\uff0c\u8bf7\u7ee7\u7eed\u6267\u884c\u4ee5\u4e0b\u90e8\u5206\u3002</p>"},{"location":"zh/archive/installation/kepler/#kind-kepler","title":"\u5728\u672c\u5730 kind \u96c6\u7fa4\u4e0a\u90e8\u7f72 Kepler","text":"<p>\u8981\u5728 <code>kind</code> \u4e0a\u90e8\u7f72 Kepler\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u6807\u5fd7\u5728\u672c\u5730\u6784\u5efa\u5b83\u3002\u672c\u5730\u6784\u5efa\u7684\u5b8c\u6574\u8be6\u7ec6\u4fe1\u606f \u5728\u4e0b\u9762\u7684\u90e8\u5206\u4e2d\u4ecb\u7ecd\u3002\u8981\u5728\u672c\u5730 <code>kind</code> \u96c6\u7fa4\u4e0a\u90e8\u7f72\uff0c\u60a8\u9700\u8981\u4f7f\u7528 <code>PROMETHEUS_DEPLOY</code> \u6807\u5fd7\u8fdb\u884c\u6784\u5efa\u3002</p> <pre><code>git clone --depth 1 git@github.com:sustainable-computing-io/kepler.git\ncd ./kepler\nmake build-manifest OPTS=\"PROMETHEUS_DEPLOY\"\nkubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre>"},{"location":"zh/archive/installation/kepler/#kubeadm-kepler","title":"\u5728\u88f8\u673a Kubeadm \u96c6\u7fa4\u4e0a\u90e8\u7f72 Kepler","text":"<p>\u8981\u5728 Kubeadm \u4e0a\u90e8\u7f72 Kepler\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u6807\u5fd7\u5728\u672c\u5730\u6784\u5efa\u5b83\u3002\u672c\u5730\u6784\u5efa\u7684 \u5b8c\u6574\u8be6\u7ec6\u4fe1\u606f\u5728\u4e0b\u9762\u7684\u90e8\u5206\u4e2d\u4ecb\u7ecd\u3002\u8981\u5728\u672c\u5730 <code>Kubeadm</code> \u96c6\u7fa4\u4e0a\u90e8\u7f72\uff0c \u60a8\u9700\u8981\u4f7f\u7528 <code>BM_DEPLOY</code> \u548c <code>PROMETHEUS_DEPLOY</code> \u6807\u5fd7\u3002</p> <pre><code>git clone --depth 1 git@github.com:sustainable-computing-io/kepler.git\ncd ./kepler\nmake build-manifest OPTS=\"BM_DEPLOY PROMETHEUS_DEPLOY\"\nkubectl apply -f _output/generated-manifest/deployment.yaml\n</code></pre>"},{"location":"zh/archive/installation/kepler/#_4","title":"\u4eea\u8868\u677f\u8bbf\u95ee","text":"<p>\u4e0a\u8ff0\u90e8\u7f72\u6b65\u9aa4\u5c06\u521b\u5efa\u4e00\u4e2a\u5728\u7aef\u53e3 <code>9102</code> \u4e0a\u76d1\u542c\u7684 Kepler \u670d\u52a1\u3002</p> <p>\u5982\u679c\u60a8\u9075\u5faa\u4e86 Kepler \u4eea\u8868\u677f\u90e8\u7f72\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5bfc\u822a\u5230 http://localhost:3000/ \u8bbf\u95ee Kepler \u4eea\u8868\u677f\u3002 \u4f7f\u7528 <code>admin:admin</code> \u767b\u5f55\u3002\u8df3\u8fc7 Grafana \u8981\u6c42\u8f93\u5165\u65b0\u5bc6\u7801\u7684\u7a97\u53e3\u3002</p> <p></p> <p>Note</p> <p>\u8981\u8f6c\u53d1\u7aef\u53e3\uff0c\u53ea\u9700\u8fd0\u884c\uff1a <pre><code>kubectl port-forward --address localhost -n kepler service/kepler-exporter 9102:9102 &amp;\nkubectl port-forward --address localhost -n monitoring service/prometheus-k8s 9090:9090 &amp;\nkubectl port-forward --address localhost -n monitoring service/grafana 3000:3000 &amp;\n</code></pre></p>"},{"location":"zh/archive/installation/kepler/#_5","title":"\u6784\u5efa\u6e05\u5355","text":"<p>\u9996\u5148\uff0c\u5206\u53c9 kepler \u4ed3\u5e93\u5e76\u514b\u9686\u5b83\u3002</p> <p>\u5982\u679c\u60a8\u60f3\u8981\u4f7f\u7528 Redfish BMC \u548c IPMI\uff0c\u60a8\u9700\u8981\u5c06\u6bcf\u4e2a kubelet \u8282\u70b9\u7684 Redfish \u548c IPMI \u51ed\u636e\u6dfb\u52a0\u5230 <code>kepler/manifests/k8s/config/exporter</code> \u76ee\u5f55\u4e0b\u7684 <code>redfish.csv</code> \u6587\u4ef6\u4e2d\u3002 \u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>kubelet_node_name_1,redfish_username_1,redfish_password_2,https://redfish_ip_or_hostname_1\nkubelet_node_name_2,redfish_username_2,redfish_password_2,https://redfish_ip_or_hostname_2\n</code></pre> <p>\u5176\u4e2d\uff0c\u7b2c\u4e00\u5217\u4e2d\u7684 <code>kubelet_node_name</code> \u662f\u8fd0\u884c kubelet \u7684\u8282\u70b9\u540d\u79f0\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c \u4ee5\u4e0b\u547d\u4ee4\u83b7\u53d6\u8282\u70b9\u540d\u79f0\uff1a</p> <pre><code>kubectl get nodes\n</code></pre> <p>\u7b2c\u4e8c\u5217\u548c\u7b2c\u4e09\u5217\u4e2d\u7684 <code>redfish_username</code> \u548c <code>redfish_password</code> \u662f\u4ece\u6bcf\u4e2a\u8282\u70b9\u8bbf\u95ee Redfish API \u7684\u51ed\u636e\u3002\u7b2c\u56db\u5217\u4e2d\u7684 <code>https://redfish_ip_or_hostname</code> \u662f IP \u5730\u5740\u6216 \u4e3b\u673a\u540d\u5f62\u5f0f\u7684 Redfish \u7aef\u70b9\u3002</p> <p>\u7136\u540e\uff0c\u6784\u5efa\u9002\u5408\u60a8\u73af\u5883\u7684\u6e05\u5355\u6587\u4ef6\u5e76\u6309\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\uff1a</p> <pre><code>make build-manifest OPTS=\"&lt;deployment options&gt;\"\n</code></pre> <p>\u6700\u5c0f\u90e8\u7f72\uff1a</p> <pre><code>make build-manifest\n</code></pre> <p>\u5728 OpenShift \u4e0a\u4f7f\u7528 sidecar \u7684\u90e8\u7f72\uff1a</p> <pre><code>make build-manifest OPTS=\"ESTIMATOR_SIDECAR_DEPLOY OPENSHIFT_DEPLOY\"\n</code></pre> <p>\u6e05\u5355\u9ed8\u8ba4\u4f1a\u5728 <code>_output/generated-manifest/</code> \u4e2d\u751f\u6210\u3002</p> \u90e8\u7f72\u9009\u9879 \u63cf\u8ff0 \u4f9d\u8d56 BM_DEPLOY \u4f7f\u7528\u8282\u70b9\u9009\u62e9\u5668 feature.node.kubernetes.io/cpu-cpuid.HYPERVISOR \u4e0d\u5b58\u5728\u7684\u88f8\u673a\u90e8\u7f72\u8865\u4e01 - OPENSHIFT_DEPLOY \u4e3a kepler daemonset \u4fee\u8865 OpenShift \u7279\u5b9a\u5c5e\u6027\u5e76\u90e8\u7f72 SecurityContextConstraints - PROMETHEUS_DEPLOY \u4fee\u8865 Prometheus \u76f8\u5173\u8d44\u6e90\uff08ServiceMonitor\u3001RBAC \u89d2\u8272\u3001\u89d2\u8272\u7ed1\u5b9a\uff09 \u9700\u8981 Prometheus \u90e8\u7f72\uff0c\u53ef\u4ee5\u662f OpenShift \u96c6\u6210\u7684\u6216\u81ea\u5b9a\u4e49\u90e8\u7f72 HIGH_GRANULARITY \u5c06 Kepler \u7684 Prometheus \u6293\u53d6\u95f4\u9694\u8bbe\u7f6e\u4e3a 3 \u79d2\uff08\u9ed8\u8ba4\u4e3a 30 \u79d2\uff09 \u8bbe\u7f6e PROMETHEUS_DEPLOY \u9009\u9879 CLUSTER_PREREQ_DEPLOY \u5728 OpenShift \u96c6\u7fa4\u4e0a\u90e8\u7f72 kepler \u7684\u5148\u51b3\u6761\u4ef6 \u8bbe\u7f6e OPENSHIFT_DEPLOY \u9009\u9879 CI_DEPLOY \u66f4\u65b0 CI \u4e2d\u4f7f\u7528\u7684 kind \u96c6\u7fa4\u7684 proc \u8def\u5f84 - ESTIMATOR_SIDECAR_DEPLOY \u4e3a kepler daemonset \u4fee\u8865\u4f30\u7b97\u5668 sidecar \u548c\u76f8\u5e94\u7684 ConfigMap - MODEL_SERVER_DEPLOY \u4e3a kepler daemonset \u90e8\u7f72\u6a21\u578b\u670d\u52a1\u5668\u548c\u76f8\u5e94\u7684 ConfigMap - TRAINER_DEPLOY \u4e3a\u6a21\u578b\u670d\u52a1\u5668\u4fee\u8865\u5728\u7ebf\u8bad\u7ec3\u5668 sidecar \u8bbe\u7f6e MODEL_SERVER_DEPLOY \u9009\u9879 DEBUG_DEPLOY \u4fee\u8865 KEPLER_LOG_LEVEL \u7528\u4e8e\u8c03\u8bd5 - QAT_DEPLOY \u66f4\u65b0 Kepler \u7684 proc \u8def\u5f84\u4ee5\u542f\u7528\u52a0\u901f\u5668 QAT \u5b89\u88c5 Intel QAT DCGM_DEPLOY \u5728 Kepler \u5bb9\u5668\u4e2d\u542f\u7528 <code>hostNetwork: true</code> \u4ee5\u8bbf\u95ee\u672c\u5730 DCGM \u670d\u52a1\uff1b\u4f7f\u7528 <code>latest-dcgm</code> Kepler \u5bb9\u5668\u955c\u50cf\u52a0\u8f7d DCGM \u5e93\u548c\u4f9d\u8d56\u9879 \u5fc5\u987b\u5728\u8282\u70b9\u4e0a\u5b89\u88c5 NVIDIA DCGM \u670d\u52a1 <p>\u4ee5\u4e0b\u9009\u9879\u9002\u7528\u4e8e Redfish \u5ba2\u6237\u7aef\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a kepler-exporter \u7684\u73af\u5883\u53d8\u91cf\u3002 \u5b83\u4eec\u5f71\u54cd Kepler Exporter \u7684\u6240\u6709 Redfish \u8bbf\u95ee\u3002</p> \u9009\u9879 \u9ed8\u8ba4\u503c \u63cf\u8ff0 REDFISH_PROBE_INTERVAL_IN_SECONDS 60 \u901a\u8fc7 Redfish \u83b7\u53d6\u529f\u8017\u7684\u95f4\u9694\uff08\u79d2\uff09\u3002 REDFISH_SKIP_SSL_VERIFY true \u8fde\u63a5\u5230 Redfish \u7aef\u70b9\u65f6\u662f\u5426\u7981\u7528 TLS \u9a8c\u8bc1\u4e3a <code>true</code>\u3002 <p><code>build-manifest</code> \u8981\u6c42\uff1a</p> <ul> <li>kubectl v1.21+</li> <li>make</li> <li>go</li> </ul>"},{"location":"zh/archive/installation/kepler/#prometheus-operator","title":"\u90e8\u7f72 Prometheus Operator","text":"<p>\u5982\u679c\u96c6\u7fa4\u4e2d\u5df2\u7ecf\u5b89\u88c5\u4e86 Prometheus\uff0c\u8bf7\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002\u5426\u5219\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5b89\u88c5\u5b83\u3002</p> <ol> <li> <p>\u5c06 kube-prometheus    \u9879\u76ee\u514b\u9686\u5230\u60a8\u7684\u672c\u5730\u6587\u4ef6\u5939\uff0c\u5e76\u8fdb\u5165 <code>kube-prometheus</code> \u76ee\u5f55\u3002</p> <pre><code>git clone --depth 1 https://github.com/prometheus-operator/kube-prometheus; cd kube-prometheus;\n</code></pre> </li> <li> <p>\u6b64\u6b65\u9aa4\u662f\u53ef\u9009\u7684\u3002\u60a8\u53ef\u4ee5\u7a0d\u540e\u901a\u8fc7 Grafana UI \u624b\u52a8\u6dfb\u52a0 Kepler Grafana \u4eea\u8868\u677f\u3002    \u8981\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8bf7\u83b7\u53d6 <code>kepler-exporter</code> Grafana \u4eea\u8868\u677f\u5e76\u6ce8\u5165\u5230 Prometheus    Grafana \u90e8\u7f72\u4e2d\u3002</p> <pre><code>$ KEPLER_EXPORTER_GRAFANA_DASHBOARD_JSON=`curl -fsSL https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/grafana-dashboards/Kepler-Exporter.json | sed '1 ! s/^/         /'`\n$ mkdir -p grafana-dashboards\n$ cat - &gt; ./grafana-dashboards/kepler-exporter-configmap.yaml &lt;&lt; EOF\napiVersion: v1\ndata:\n    kepler-exporter.json: |-\n        $KEPLER_EXPORTER_GRAFANA_DASHBOARD_JSON\nkind: ConfigMap\nmetadata:\n    labels:\n        app.kubernetes.io/component: grafana\n        app.kubernetes.io/name: grafana\n        app.kubernetes.io/part-of: kube-prometheus\n        app.kubernetes.io/version: 9.5.3\n    name: grafana-dashboard-kepler-exporter\n    namespace: monitoring\nEOF\n</code></pre> <p>Note</p> <p>\u4e0b\u4e00\u6b65\u4f7f\u7528 yq\uff0c\u4e00\u4e2a YAML \u5904\u7406\u5668\u3002</p> <pre><code>yq -i e '.items += [load(\"./grafana-dashboards/kepler-exporter-configmap.yaml\")]' ./manifests/grafana-dashboardDefinitions.yaml\nyq -i e '.spec.template.spec.containers.0.volumeMounts += [ {\"mountPath\": \"/grafana-dashboard-definitions/0/kepler-exporter\", \"name\": \"grafana-dashboard-kepler-exporter\", \"readOnly\": false} ]' ./manifests/grafana-deployment.yaml\nyq -i e '.spec.template.spec.volumes += [ {\"configMap\": {\"name\": \"grafana-dashboard-kepler-exporter\"}, \"name\": \"grafana-dashboard-kepler-exporter\"} ]' ./manifests/grafana-deployment.yaml\n</code></pre> </li> <li> <p>\u6700\u540e\uff0c\u5e94\u7528 <code>manifests</code> \u76ee\u5f55\u4e2d\u7684\u5bf9\u8c61\u3002\u8fd9\u5c06\u521b\u5efa <code>monitoring</code> \u547d\u540d\u7a7a\u95f4\u548c CRD\uff0c    \u7136\u540e\u7b49\u5f85\u5b83\u4eec\u53ef\u7528\uff0c\u518d\u521b\u5efa\u5176\u4f59\u8d44\u6e90\u3002\u5728 <code>until</code> \u5faa\u73af\u671f\u95f4\uff0c\u9884\u671f\u4f1a\u51fa\u73b0    <code>No resources found</code> \u7684\u54cd\u5e94\u3002\u6b64\u8bed\u53e5\u68c0\u67e5\u8d44\u6e90 API \u662f\u5426\u5df2\u521b\u5efa\uff0c\u4f46\u4e0d\u671f\u671b\u8d44\u6e90\u5b58\u5728\u3002</p> <pre><code>kubectl apply --server-side -f manifests/setup\nuntil kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo \"\"; done\nkubectl apply -f manifests/\n</code></pre> <p>Note</p> <p>\u5728 Kind \u96c6\u7fa4\u4e2d\uff0c\u6240\u6709 Pod \u548c\u670d\u52a1\u8fbe\u5230 <code>running</code> \u72b6\u6001\u9700\u8981\u5f88\u77ed\u7684\u65f6\u95f4\u3002</p> </li> </ol>"},{"location":"zh/archive/installation/local-cluster/","title":"\u672c\u5730\u96c6\u7fa4\u8bbe\u7f6e","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler \u8fd0\u884c\u5728 Kubernetes \u4e0a\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u6709\u6743\u8bbf\u95ee\u96c6\u7fa4\uff0c\u53ef\u4ee5\u8df3\u8fc7\u6b64\u90e8\u5206\u3002\u8981\u90e8\u7f72\u672c\u5730\u96c6\u7fa4\uff0c \u60a8\u53ef\u4ee5\u4f7f\u7528 kind\u3002<code>kind</code> \u662f\u4e00\u4e2a\u4f7f\u7528 Docker \u5bb9\u5668 \"\u8282\u70b9\"\u8fd0\u884c\u672c\u5730 Kubernetes \u96c6\u7fa4\u7684\u5de5\u5177\u3002\u5b83\u4e3b\u8981\u662f\u4e3a\u6d4b\u8bd5 Kubernetes \u672c\u8eab\u800c\u8bbe\u8ba1\u7684\uff0c \u4f46\u4e5f\u53ef\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u6216 CI\u3002</p>"},{"location":"zh/archive/installation/local-cluster/#kind","title":"\u5b89\u88c5 Kind","text":"<p>\u8981\u5b89\u88c5 <code>kind</code>\uff0c\u8bf7\u53c2\u89c1\u6b64\u5904\u7684\u8bf4\u660e\u3002</p> <p>\u6211\u4eec\u9700\u8981\u914d\u7f6e\u96c6\u7fa4\u4ee5\u8fd0\u884c Kepler\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5c06 <code>/proc</code>\uff08\u4ee5\u516c\u5f00\u6709\u5173\u5728\u4e3b\u673a\u4e0a \u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u4fe1\u606f\uff09\u548c <code>/usr/src</code>\uff08\u4ee5\u516c\u5f00\u5141\u8bb8\u52a8\u6001 eBPF \u7a0b\u5e8f\u7f16\u8bd1\u7684\u5185\u6838\u5934\u6587\u4ef6 - \u6b64\u4f9d\u8d56\u9879\u53ef\u80fd\u5728\u672a\u6765\u7248\u672c\u4e2d\u79fb\u9664\uff09\u6302\u8f7d\u5230\u8282\u70b9\u5bb9\u5668\u4e2d\u3002\u4ee5\u4e0b\u662f\u6700\u5c0f\u7684\u5355\u8282\u70b9\u793a\u4f8b\u914d\u7f6e\uff1a</p> <pre><code>$ cat - &gt; ./local-cluster-config.yaml &lt;&lt; EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: my-cluster\nnodes:\n- role: control-plane\n  image: kindest/node:v1.27.3@sha256:3966ac761ae0136263ffdb6cfd4db23ef8a83cba8a463690e98317add2c9ba72\n  extraMounts:\n  - hostPath: /proc\n    containerPath: /proc-host\n  - hostPath: /usr/src\n    containerPath: /usr/src\nEOF\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u542f\u52a8\u96c6\u7fa4\uff1a</p> <pre><code>export CLUSTER_NAME=\"my-cluster\"  # \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 --name \u6807\u5fd7\u8986\u76d6\u914d\u7f6e\u4e2d\u7684\u540d\u79f0\nkind create cluster --name=$CLUSTER_NAME --config=./local-cluster-config.yaml\n</code></pre> <p>\u6216\u8005\u7b80\u5355\u5730\u8fd0\u884c\uff1a</p> <pre><code>make cluster-up\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c<code>kind</code> \u4f1a\u81ea\u52a8\u5c06\u60a8\u5f53\u524d\u7684 <code>kubeconfig</code> \u4e0a\u4e0b\u6587\u5207\u6362\u5230\u65b0\u521b\u5efa\u7684\u96c6\u7fa4\u3002</p>"},{"location":"zh/archive/installation/strategy/","title":"\u5b89\u88c5\u7b56\u7565","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u867d\u7136\u60a8\u53ef\u4ee5\u81ea\u7531\u63a2\u7d22\u4efb\u4f55\u90e8\u7f72\u65b9\u5f0f\uff0c\u4f46\u63a8\u8350\u7684\u7b56\u7565\u5982\u4e0b\uff1a</p> OCP 4.13 Microshift RHEL ROSA Kind kepler-operator Manifests RPM Manifests Helm Charts, Manifests, kepler-operator"},{"location":"zh/archive/installation/strategy/#_2","title":"\u8981\u6c42","text":"<ul> <li>\u5185\u6838 4.18+</li> <li><code>kubectl</code> v1.21.0+</li> <li>\u9ed8\u8ba4\u4ee5\u975e root \u7528\u6237\u5b89\u88c5 <code>docker</code></li> </ul>"},{"location":"zh/archive/kepler_model_server/api/","title":"Kepler \u6a21\u578b\u670d\u52a1\u5668 API","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/kepler_model_server/api/#_1","title":"\u4ece\u4f30\u7b97\u5668\u83b7\u53d6\u529f\u7387","text":"<p>\u6a21\u5757\uff1a estimator (src/estimate/estimator.py)</p> <pre><code>/tmp/estimator.socket\n</code></pre>"},{"location":"zh/archive/kepler_model_server/api/#powerrequest","title":"PowerRequest \u7684\u53c2\u6570","text":"\u952e \u503c \u63cf\u8ff0 metrics \u5b57\u7b26\u4e32\u5217\u8868 \u53ef\u7528\u8f93\u5165\u7279\u5f81\uff08\u6d4b\u91cf\u6307\u6807\uff09\u5217\u8868 output_type \u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1aAbsPower\uff08\u7528\u4e8e\u8282\u70b9\u7ea7\u529f\u7387\u6a21\u578b\uff09\u3001DynPower\uff08\u7528\u4e8e\u5bb9\u5668\u7ea7\u529f\u7387\u6a21\u578b\uff09 \u8bf7\u6c42\u7684\u6a21\u578b\u7c7b\u578b trainer_name\uff08\u53ef\u9009\uff09 \u5b57\u7b26\u4e32 \u6309\u8bad\u7ec3\u5668\u540d\u79f0\u8fc7\u6ee4\u6a21\u578b filter\uff08\u53ef\u9009\uff09 \u5b57\u7b26\u4e32 \u5f62\u5f0f\u4e3a attribute1:threshold1; attribute2:threshold2 \u7684\u8868\u8fbe\u5f0f"},{"location":"zh/archive/kepler_model_server/api/#_2","title":"\u4ece\u6a21\u578b\u670d\u52a1\u5668\u83b7\u53d6\u529f\u7387\u6a21\u578b","text":"<p>\u6a21\u5757\uff1a server (src/server/model_server.py)</p> <pre><code>:8100/model\nPOST\n</code></pre>"},{"location":"zh/archive/kepler_model_server/api/#modelrequest","title":"ModelRequest \u7684\u53c2\u6570","text":"\u952e \u503c \u63cf\u8ff0 metrics \u5b57\u7b26\u4e32\u5217\u8868 \u53ef\u7528\u8f93\u5165\u7279\u5f81\uff08\u6d4b\u91cf\u6307\u6807\uff09\u5217\u8868 output_type \u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1aAbsPower\uff08\u7528\u4e8e\u8282\u70b9\u7ea7\u529f\u7387\u6a21\u578b\uff09\u3001DynPower\uff08\u7528\u4e8e\u5bb9\u5668\u7ea7\u529f\u7387\u6a21\u578b\uff09 \u8bf7\u6c42\u7684\u6a21\u578b\u7c7b\u578b weight \u5e03\u5c14\u503c \u5982\u679c\u4e3a true\uff0c\u4ee5 json \u683c\u5f0f\u8fd4\u56de\u6a21\u578b\u6743\u91cd\u3002\u5426\u5219\uff0c\u4ee5 zip \u6587\u4ef6\u683c\u5f0f\u8fd4\u56de\u6a21\u578b\u3002 trainer_name\uff08\u53ef\u9009\uff09 \u5b57\u7b26\u4e32 \u6309\u8bad\u7ec3\u5668\u540d\u79f0\u8fc7\u6ee4\u6a21\u578b\u3002 node_type\uff08\u53ef\u9009\uff09 \u5b57\u7b26\u4e32 \u6309\u8282\u70b9\u7c7b\u578b\u8fc7\u6ee4\u6a21\u578b\u3002 filter\uff08\u53ef\u9009\uff09 \u5b57\u7b26\u4e32 \u5f62\u5f0f\u4e3a attribute1:threshold1; attribute2:threshold2 \u7684\u8868\u8fbe\u5f0f\u3002"},{"location":"zh/archive/kepler_model_server/api/#_3","title":"\u79bb\u7ebf\u8bad\u7ec3\u5668","text":"<p>\u6a21\u5757\uff1a offline trainer (src/train/offline_trainer.py)</p> <pre><code>:8102/train\nPOST\n</code></pre>"},{"location":"zh/archive/kepler_model_server/api/#trainrequest","title":"TrainRequest \u7684\u53c2\u6570","text":"\u952e \u503c \u63cf\u8ff0 name \u5b57\u7b26\u4e32 \u7ba1\u9053/\u6a21\u578b\u540d\u79f0 energy_source PowerSourceMap \u4e2d\u7684\u6709\u6548\u952e \u8981\u8bad\u7ec3\u7684\u76ee\u6807\u80fd\u6e90\u6765\u6e90 trainer TrainAttribute \u8bad\u7ec3\u5c5e\u6027 prome_response json \u5305\u542b\u7528\u4e8e\u529f\u7387\u6a21\u578b\u8bad\u7ec3\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684 prom \u54cd\u5e94"},{"location":"zh/archive/kepler_model_server/api/#trainattribute","title":"TrainAttribute","text":"\u952e \u503c \u63cf\u8ff0 abs_trainers \u53ef\u7528\u8bad\u7ec3\u5668\u7c7b\u540d\u5217\u8868 \u7ba1\u9053\u4e2d\u7528\u4e8e\u8bad\u7ec3\u7edd\u5bf9\u529f\u7387\u7684\u8bad\u7ec3\u5668\u7c7b dyn_trainers \u53ef\u7528\u8bad\u7ec3\u5668\u7c7b\u540d\u5217\u8868 \u7ba1\u9053\u4e2d\u7528\u4e8e\u8bad\u7ec3\u52a8\u6001\u529f\u7387\u7684\u8bad\u7ec3\u5668\u7c7b isolator \u6709\u6548\u9694\u79bb\u5668\u7c7b\u540d \u7ba1\u9053\u7684\u9694\u79bb\u5668\u7c7b\uff0c\u7528\u4e8e\u9694\u79bb\u76ee\u6807\u6570\u636e\u4ee5\u8bad\u7ec3\u52a8\u6001\u529f\u7387 isolator_args \u5b57\u5178 \u9694\u79bb\u5668\u7279\u5b9a\u53c2\u6570\u540d\u79f0\u548c\u503c\u4e4b\u95f4\u7684\u6620\u5c04"},{"location":"zh/archive/kepler_model_server/api/#_4","title":"\u53d1\u5e03\u6a21\u578b\u6743\u91cd [\u8fdb\u884c\u4e2d]","text":"<p>\u6a21\u5757\uff1a server (src/server/model_server.py)</p> <pre><code>/metrics\nGET\n</code></pre>"},{"location":"zh/archive/kepler_model_server/api/#_5","title":"\u5728\u7ebf\u8bad\u7ec3\u5668 [\u8fdb\u884c\u4e2d]","text":"<p>\u6a21\u5757\uff1a online trainer (src/train/online_trainer.py) \u4f5c\u4e3a\u670d\u52a1\u5668\u7684 sidecar \u8fd0\u884c</p> <pre><code>\u5728\u91c7\u6837\u95f4\u9694\u4e0a\u5b9a\u671f\u67e5\u8be2 prometheus \u6307\u6807\u670d\u52a1\u5668\n</code></pre>"},{"location":"zh/archive/kepler_model_server/api/#_6","title":"\u5206\u6790\u5668 [\u8fdb\u884c\u4e2d]","text":"<p>\u6a21\u5757\uff1a profiler (src/profile/profiler.py)</p>"},{"location":"zh/archive/kepler_model_server/architecture/","title":"Kepler \u6a21\u578b\u670d\u52a1\u5668\u67b6\u6784","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler \u6a21\u578b\u670d\u52a1\u5668\u662f Kepler \u7684\u8865\u5145\u9879\u76ee\uff0c\u4fc3\u8fdb\u529f\u7387\u6a21\u578b\u8bad\u7ec3\u548c\u670d\u52a1\u3002\u8fd9\u4e3a Kepler \u63d0\u4f9b\u4e86\u4e00\u4e2a\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a\u73af\u5883\u6536\u96c6\u6307\u6807\uff0c\u4f7f\u7528\u7ba1\u9053\u6846\u67b6\u8bad\u7ec3 \u529f\u7387\u6a21\u578b\uff0c\u5e76\u670d\u52a1\u56de\u53e6\u4e00\u4e2a\u6ca1\u6709\u529f\u7387\u8ba1\uff08\u80fd\u91cf\u6d4b\u91cf\uff09\u53ef\u7528\u7684\u73af\u5883\u3002</p> <p></p> <p>\u7ba1\u9053\u8f93\u5165\uff1a \u8bad\u7ec3\u5de5\u4f5c\u8d1f\u8f7d\u8fd0\u884c\u671f\u95f4\u7684 Prometheus \u67e5\u8be2\u7ed3\u679c\u3002</p> <p>\u7ba1\u9053\u8f93\u51fa\uff1a \u4e00\u4e2a\u76ee\u5f55\uff0c\u5305\u542b\u7531\u6bcf\u4e2a\u53ef\u7528\u7279\u5f81\u7ec4\u8bad\u7ec3\u7684\u5b58\u6863\u7edd\u5bf9\u548c\u52a8\u6001\u529f\u7387\u6a21\u578b\uff0c \u6bcf\u4e2a\u53ef\u7528\u80fd\u6e90\u6765\u6e90\u90fd\u6709\u6807\u7b7e\u3002</p> <pre><code>[\u7ba1\u9053\u540d\u79f0]/[\u80fd\u6e90\u6765\u6e90]/[\u6a21\u578b\u7c7b\u578b]/[\u7279\u5f81\u7ec4]/[\u5b58\u6863\u6a21\u578b]\n</code></pre> <ul> <li>\u7ba1\u9053\u540d\u79f0 \u4e0d\u540c\u5efa\u6a21\u65b9\u6cd5\u7ec4\u5408\u7684\u552f\u4e00\u540d\u79f0\uff0c\u4f8b\u5982\u4e0d\u540c\u7684\u63d0\u53d6\u5668\u3001\u9694\u79bb\u5668\u3001\u8bad\u7ec3\u5668\u96c6\u5408\u3001   \u652f\u6301\u7684\u7279\u5f81\u7ec4\u548c\u652f\u6301\u7684\u80fd\u6e90\u6765\u6e90\u3002</li> <li>\u80fd\u6e90/\u529f\u7387\u6765\u6e90 \u529f\u7387\u6807\u7b7e\u7684\u529f\u7387\u8ba1\u6765\u6e90\u3002</li> <li>\u6a21\u578b\u7c7b\u578b \u6709\u6216\u6ca1\u6709\u80cc\u666f\u9694\u79bb\u7684\u6a21\u578b\u7c7b\u578b\u3002</li> <li>\u7279\u5f81\u7ec4 \u6a21\u578b\u8f93\u5165\u7684\u5229\u7528\u7387\u6307\u6807\u6765\u6e90\u3002</li> <li>\u5b58\u6863\u6a21\u578b \u683c\u5f0f\u4e3a <code>[\u8bad\u7ec3\u5668\u540d\u79f0]_[\u8282\u70b9\u7c7b\u578b]</code> \u7684\u6587\u4ef6\u5939\u548c zip \u6587\u4ef6\uff0c\u5176\u4e2d\u8bad\u7ec3\u5668   \u662f\u8bad\u7ec3\u89e3\u51b3\u65b9\u6848\u7684\u540d\u79f0\uff0c\u4f8b\u5982 <code>GradientBoostingRegressor</code>\uff0c<code>node_type</code> \u662f\u7528\u4e8e\u8bad\u7ec3\u7684   \u670d\u52a1\u5668\u7684\u5206\u7c7b\u914d\u7f6e\u6587\u4ef6\u3002\u6587\u4ef6\u5939\u5305\u542b</li> <li>metadata.json</li> <li>\u6a21\u578b\u6587\u4ef6</li> <li>weight.json\uff08\u672c\u5730\u4f30\u7b97\u5668\u652f\u6301\u7684\u6a21\u578b\uff08\u5982\u7ebf\u6027\u56de\u5f52 (LR)\uff09\u7684\u6a21\u578b\u6743\u91cd\uff09</li> <li>\u7279\u5f81\u5de5\u7a0b (fe) \u6587\u4ef6</li> </ul> <p>\u5728 GitHub \u4e0a\u67e5\u770b\u9879\u76ee \u27a1\ufe0f Kepler \u6a21\u578b\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/archive/kepler_model_server/get_started/","title":"Kepler \u6a21\u578b\u670d\u52a1\u5668\u5165\u95e8\u6307\u5357","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u6a21\u578b\u670d\u52a1\u5668\u9879\u76ee\u4e3a\u57fa\u4e8e Kepler \u5bfc\u51fa\u7684\u80fd\u6e90\u76f8\u5173\u6307\u6807\u7684\u529f\u7387\u6a21\u578b\u8bad\u7ec3\u3001\u5bfc\u51fa\u3001\u670d\u52a1\u548c\u5229\u7528 \u63d0\u4f9b\u4e86\u5de5\u5177\u3002\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5f00\u59cb\u4f7f\u7528\u8be5\u9879\u76ee\u3002</p>"},{"location":"zh/archive/kepler_model_server/get_started/#1","title":"\u7b2c 1 \u6b65\uff1a\u4e86\u89e3\u7ba1\u9053","text":"<p>\u7b2c\u4e00\u6b65\u662f\u4e86\u89e3\u8bad\u7ec3\u7ba1\u9053\u4e2d\u7684\u529f\u7387\u6a21\u578b\u6784\u5efa\u6982\u5ff5\u3002</p>"},{"location":"zh/archive/kepler_model_server/get_started/#2","title":"\u7b2c 2 \u6b65\uff1a\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u529f\u7387\u6a21\u578b","text":""},{"location":"zh/archive/kepler_model_server/get_started/#_1","title":"\u9009\u62e9\u4f30\u7b97\u5668","text":"<p>\u6839\u636e\u6a21\u578b\u683c\u5f0f\uff0c\u6709\u4e24\u79cd\u4f7f\u7528\u6a21\u578b\u7684\u65b9\u5f0f\u3002\u5982\u679c\u6a21\u578b\u683c\u5f0f\u53ef\u4ee5\u76f4\u63a5\u5728 Kepler \u5bfc\u51fa\u5668\u5185\u5904\u7406\uff0c \u4f8b\u5982 <code>json</code> \u683c\u5f0f\u7684\u7ebf\u6027\u56de\u5f52\u6743\u91cd\uff0c\u5219\u4e0d\u9700\u8981\u989d\u5916\u914d\u7f6e\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u6a21\u578b\u91c7\u7528\u5b58\u6863\u5728 <code>zip</code> \u4e2d\u7684\u901a\u7528\u683c\u5f0f\uff0c\u5219\u9700\u8981\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6216 Kepler \u914d\u7f6e\u6620\u5c04\u542f\u7528\u4f30\u7b97\u5668 sidecar\u3002</p> <pre><code>export NODE_COMPONENTS_ESTIMATOR=true\n</code></pre> <p>\u6216</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        NODE_COMPONENTS_ESTIMATOR=true\n</code></pre>"},{"location":"zh/archive/kepler_model_server/get_started/#_2","title":"\u9009\u62e9\u529f\u7387\u6a21\u578b","text":"<p>\u6709\u4e24\u79cd\u83b7\u53d6\u529f\u7387\u6a21\u578b\u7684\u65b9\u5f0f\uff1a\u9759\u6001\u548c\u52a8\u6001\u3002</p>"},{"location":"zh/archive/kepler_model_server/get_started/#_3","title":"\u9759\u6001\u914d\u7f6e","text":"<p>\u9759\u6001\u65b9\u5f0f\u662f\u76f4\u63a5\u4ece <code>INIT_URL</code> \u4e0b\u8f7d\u6a21\u578b\u3002\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u76f4\u63a5\u8bbe\u7f6e\u6216\u901a\u8fc7 <code>kepler-cfm</code> Kepler \u914d\u7f6e\u6620\u5c04\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c</p> <pre><code>export NODE_COMPONENTS_INIT_URL= &lt; \u9759\u6001 URL &gt;\n</code></pre> <p>\u6216</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        NODE_COMPONENTS_INIT_URL= &lt; \u9759\u6001 URL &gt;\n</code></pre> <p>\u63d0\u4f9b\u7684\u7ba1\u9053 v0.7 \u7684\u9759\u6001 URL \u5728\u8fd9\u91cc\u5217\u51fa\u3002</p>"},{"location":"zh/archive/kepler_model_server/get_started/#api","title":"\u901a\u8fc7\u670d\u52a1\u5668 API \u52a8\u6001\u83b7\u53d6","text":"<p>\u52a8\u6001\u65b9\u5f0f\u662f\u542f\u7528\u6a21\u578b\u670d\u52a1\u5668\u81ea\u52a8\u9009\u62e9\u5177\u6709\u6700\u4f73\u51c6\u786e\u6027\u5e76\u652f\u6301\u8fd0\u884c\u96c6\u7fa4\u73af\u5883\u7684\u529f\u7387\u6a21\u578b\u3002 \u540c\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u6216\u901a\u8fc7 Kepler \u914d\u7f6e\u6620\u5c04\u8bbe\u7f6e\u3002</p> <pre><code>export MODEL_SERVER_ENABLE=true\n</code></pre> <p>\u6216</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\nname: kepler-cfm\nnamespace: kepler\ndata:\n    MODEL_CONFIG: |\n        MODEL_SERVER_ENABLE: \"true\"\n</code></pre> <p>\u5728 Kepler \u529f\u7387\u4f30\u7b97\u90e8\u7f72 \u4e2d\u67e5\u770b\u66f4\u591a\u5185\u5bb9</p>"},{"location":"zh/archive/kepler_model_server/get_started/#3","title":"\u7b2c 3 \u6b65\uff1a\u5b66\u4e60\u5982\u4f55\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u5e76\u56de\u9988\u793e\u533a","text":"<p>\u5982\u60a8\u6240\u77e5\uff0c\u6839\u636e\u7279\u5b9a\u673a\u5668\u7c7b\u578b\u5b9a\u5236\u529f\u7387\u6a21\u578b\u800c\u4e0d\u662f\u4f9d\u8d56\u5355\u4e00\u901a\u7528\u6a21\u578b\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u6211\u4eec\u70ed\u5207\u6b22\u8fce\u793e\u533a\u7684\u8d21\u732e\uff0c\u901a\u8fc7\u6a21\u578b\u670d\u52a1\u5668\u9879\u76ee\u5e2e\u52a9\u5728\u60a8\u7684\u673a\u5668\u4e0a\u6784\u5efa\u66ff\u4ee3\u529f\u7387\u6a21\u578b\u3002</p> <p>\u6709\u5173\u6a21\u578b\u8bad\u7ec3\u7684\u8be6\u7ec6\u6307\u5bfc\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u6a21\u578b\u8bad\u7ec3\u6307\u5357\u8fd9\u91cc\u3002</p>"},{"location":"zh/archive/kepler_model_server/node_profile/","title":"\u8282\u70b9\u914d\u7f6e\u6587\u4ef6","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u6211\u4eec\u57fa\u4e8e\u5904\u7406\u5668\u578b\u53f7\u3001\u5185\u6838\u6570\u91cf\u3001\u82af\u7247\u6570\u91cf\u3001\u5185\u5b58\u5927\u5c0f\u548c\u6700\u5927 CPU \u9891\u7387\u5f62\u6210\u4e00\u7ec4\u673a\u5668 \uff08\u8282\u70b9\uff09\uff0c\u79f0\u4e3a\u8282\u70b9\u7c7b\u578b\u3002\u5f53\u4ece\u88f8\u673a\u6536\u96c6\u6570\u636e\u65f6\uff0c\u8fd9\u4e9b \u5c5e\u6027\u4f1a\u81ea\u52a8\u63d0\u53d6\u5e76\u4ee5 json \u683c\u5f0f\u4fdd\u5b58\u4e3a\u673a\u5668\u89c4\u683c\u3002</p> <p>\u5c06\u4e3a\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u6784\u5efa\u4e00\u4e2a\u529f\u7387\u6a21\u578b\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u8282\u70b9\u7c7b\u578b\uff0c\u6211\u4eec\u5236\u4f5c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c \u5305\u62ec\u5728\u6ca1\u6709\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u65f6\u8d44\u6e90\u4f7f\u7528\u51e0\u4e4e\u6052\u5b9a\u7684\u80cc\u666f\u529f\u7387\u3001\u6bcf\u4e2a\u529f\u7387\u7ec4\u4ef6\uff08\u4f8b\u5982\uff0c \u5185\u6838\u3001\u975e\u5185\u6838\u3001dram\u3001\u5c01\u88c5\u3001\u5e73\u53f0\uff09\u7684\u6700\u5c0f\u3001\u6700\u5927\u529f\u7387\uff0c\u4ee5\u53ca\u6bcf\u4e2a \u7279\u5f81\u7ec4\u7684\u5f52\u4e00\u5316\u7f29\u653e\u5668\uff08\u5373 MinMaxScaler\uff09\u3001 \u6807\u51c6\u5316\u7f29\u653e\u5668\uff08\u5373 StandardScaler\uff09\u3002</p> <p>\u8282\u70b9\u89c4\u683c\u7531\u4ee5\u4e0b\u7ec4\u6210\uff1a</p> <ul> <li>processor - CPU \u5904\u7406\u5668\u578b\u53f7\u540d\u79f0</li> <li>cores - CPU \u5185\u6838\u6570\u91cf</li> <li>chips - \u82af\u7247\u6570\u91cf</li> <li>memory_gb - \u5185\u5b58\u5927\u5c0f\uff08GB\uff09</li> <li>cpu_freq_mhz - \u6700\u5927 CPU \u9891\u7387\uff08MHz\uff09</li> </ul>"},{"location":"zh/archive/kepler_model_server/pipeline/","title":"\u8bad\u7ec3\u7ba1\u9053","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u6a21\u578b\u670d\u52a1\u5668\u53ef\u4ee5\u4e3a\u4e0d\u540c\u4e0a\u4e0b\u6587\u548c\u5b66\u4e60\u65b9\u6cd5\u63d0\u4f9b\u5404\u79cd\u529f\u7387\u6a21\u578b\u3002\u8bad\u7ec3\u7ba1\u9053\u662f\u529f\u7387\u6a21\u578b\u8bad\u7ec3\u7684 \u62bd\u8c61\uff0c\u5c06\u4e00\u7ec4\u5b66\u4e60\u65b9\u6cd5\u5e94\u7528\u4e8e\u80fd\u6e90\u6765\u6e90\u3001\u529f\u7387\u9694\u79bb\u65b9\u6cd5\u3001\u53ef\u7528\u80fd\u6e90\u76f8\u5173\u6307\u6807\u7684\u4e0d\u540c\u7ec4\u5408\u3002</p>"},{"location":"zh/archive/kepler_model_server/pipeline/#_2","title":"\u7ba1\u9053","text":"<p><code>\u7ba1\u9053</code> \u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff1a<code>extract</code>\u3001<code>isolate</code> \u548c <code>train</code>\uff0c\u5982\u4e0b\u6240\u793a\u3002Kepler \u5c06 \u80fd\u6e90\u76f8\u5173\u6307\u6807\u5bfc\u51fa\u4e3a Prometheus \u8ba1\u6570\u5668\uff0c\u63d0\u4f9b\u968f\u65f6\u95f4\u7d2f\u79ef\u7684\u6570\u5b57\u3002</p> <p><code>extract</code> \u6b65\u9aa4\u662f\u5c06\u8ba1\u6570\u5668\u6307\u6807\u8f6c\u6362\u4e3a\u8ba1\u91cf\u6307\u6807\uff0c\u7c7b\u4f3c\u4e8e Prometheus <code>rate()</code> \u51fd\u6570\uff0c \u7ed9\u51fa\u6bcf\u79d2\u503c\u3002extract \u6b65\u9aa4\u8fd8\u4e3a\u6bcf\u4e2a <code>\u7279\u5f81\u7ec4</code> \u5355\u72ec\u6e05\u7406\u6570\u636e\u3002</p> <p>\u4ece Prometheus \u67e5\u8be2\u68c0\u7d22\u7684\u529f\u8017\u662f\u6d4b\u91cf\u529f\u7387\uff0c\u7531\u5de5\u4f5c\u8d1f\u8f7d\u53d8\u5316\u7684\u529f\u7387\u90e8\u5206\uff08\u79f0\u4e3a\u52a8\u6001\u529f\u7387\uff09 \u548c\u5373\u4f7f\u5728\u7a7a\u95f2\u72b6\u6001\u4e0b\u4e5f\u6d88\u8017\u7684\u529f\u7387\u90e8\u5206\uff08\u79f0\u4e3a\u7a7a\u95f2\u529f\u7387\uff09\u7ec4\u6210\u3002</p> <p><code>isolate</code> \u6b65\u9aa4\u662f\u8ba1\u7b97\u7a7a\u95f2\u529f\u7387\u5e76\u9694\u79bb\u6bcf\u4e2a <code>\u80fd\u6e90\u6765\u6e90</code> \u7684\u52a8\u6001\u529f\u8017\u3002</p> <p><code>train</code> \u6b65\u9aa4\u662f\u5e94\u7528\u6bcf\u4e2a <code>\u8bad\u7ec3\u5668</code> \u57fa\u4e8e\u9884\u5904\u7406\u6570\u636e\u521b\u5efa\u529f\u7387\u6a21\u578b\u7684\u591a\u79cd\u9009\u62e9\u3002</p> <p>\u6211\u4eec\u6709\u4e00\u4e2a\u8def\u7ebf\u56fe\uff0c\u4e3a\u6bcf\u4e2a\u8282\u70b9/\u673a\u5668\u7c7b\u578b\u5355\u72ec\u5e94\u7528\u7ba1\u9053\u6784\u5efa\u529f\u7387\u6a21\u578b\u3002 \u5728\u8282\u70b9\u7c7b\u578b\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002</p> <p></p> <ul> <li>\u4ece\u80fd\u6e90\u6765\u6e90\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u5173\u4e8e <code>\u80fd\u6e90\u6765\u6e90</code> \u7684\u4fe1\u606f\u3002</li> <li>\u4ece\u7279\u5f81\u7ec4\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u5173\u4e8e <code>\u7279\u5f81\u7ec4</code> \u7684\u4fe1\u606f\u3002</li> <li>\u4ece\u529f\u7387\u9694\u79bb\u90e8\u5206\u4e86\u89e3\u66f4\u591a\u5173\u4e8e <code>isolate</code> \u6b65\u9aa4\u4ee5\u53ca\u76f8\u5e94\u7684   <code>AbsPower</code> \u548c <code>DynPower</code> \u529f\u7387\u6a21\u578b\u6982\u5ff5\u3002</li> <li>\u5728\u8bad\u7ec3\u5668\u90e8\u5206\u67e5\u770b\u53ef\u7528\u7684 <code>\u8bad\u7ec3\u5668</code>\u3002</li> </ul>"},{"location":"zh/archive/kepler_model_server/pipeline/#energy-source","title":"\u80fd\u6e90\u6765\u6e90 {#energy-source}","text":"<p><code>\u80fd\u6e90\u6765\u6e90</code> \u6216 <code>\u6765\u6e90</code> \u6307\u63d0\u4f9b\u80fd\u91cf\u6570\u5b57\u7684\u6765\u6e90\uff08\u529f\u7387\u8ba1\uff09\u3002\u6bcf\u4e2a\u6765\u6e90\u63d0\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a <code>\u80fd\u91cf\u7ec4\u4ef6</code>\u3002\u76ee\u524d\u652f\u6301\u7684\u6765\u6e90\u5982\u4e0b\u6240\u793a\u3002</p> \u80fd\u6e90/\u529f\u7387\u6765\u6e90 \u80fd\u6e90/\u529f\u7387\u7ec4\u4ef6 rapl package, core, uncore, dram acpi platform"},{"location":"zh/archive/kepler_model_server/pipeline/#feature-group","title":"\u7279\u5f81\u7ec4 {#feature-group}","text":"<p><code>\u7279\u5f81\u7ec4</code> \u662f\u57fa\u4e8e\u57fa\u7840\u8bbe\u65bd\u4e0a\u4e0b\u6587\u7684\u53ef\u7528\u7279\u5f81\u7684\u62bd\u8c61\uff0c\u56e0\u4e3a\u67d0\u4e9b\u73af\u5883\u53ef\u80fd\u4e0d\u516c\u5f00\u67d0\u4e9b\u6307\u6807\u3002 \u4f8b\u5982\uff0c\u5728\u79c1\u6709\u4e91\u73af\u5883\u7684\u865a\u62df\u673a\u4e0a\uff0c\u786c\u4ef6\u8ba1\u6570\u5668\u6307\u6807\u901a\u5e38\u4e0d\u53ef\u7528\u3002\u56e0\u6b64\uff0c\u4e3a\u6bcf\u4e2a\u5b9a\u4e49\u7684 \u8d44\u6e90\u5229\u7528\u7387\u6307\u6807\u7ec4\u8bad\u7ec3\u6a21\u578b\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> \u7ec4\u540d \u7279\u5f81 Kepler \u6307\u6807\u6765\u6e90 CounterOnly COUNTER_FEATURES \u786c\u4ef6\u8ba1\u6570\u5668 BPFOnly BPF_FEATURES BPF IRQOnly IRQ_FEATURES IRQ AcceleratorOnly ACCELERATOR_FEATURES \u52a0\u901f\u5668 CounterIRQCombined COUNTER_FEATURES, IRQ_FEATURES BPF \u548c\u786c\u4ef6\u8ba1\u6570\u5668 Basic COUNTER_FEATURES, BPF_FEATURES \u9664 IRQ \u548c\u8282\u70b9\u4fe1\u606f\u5916\u7684\u6240\u6709 WorkloadOnly COUNTER_FEATURES, BPF_FEATURES, IRQ_FEATURES, ACCELERATOR_FEATURES \u9664\u8282\u70b9\u4fe1\u606f\u5916\u7684\u6240\u6709 Full WORKLOAD_FEATURES, SYSTEM_FEATURES \u6240\u6709 <p>\u8282\u70b9\u4fe1\u606f\u6307\u6765\u81ea kepler_node_info \u6307\u6807\u7684\u503c\u3002</p>"},{"location":"zh/archive/kepler_model_server/pipeline/#power-isolation","title":"\u529f\u7387\u9694\u79bb {#power-isolation}","text":"<p>\u4ece Prometheus \u67e5\u8be2\u68c0\u7d22\u7684\u529f\u8017\u662f\u7edd\u5bf9\u529f\u7387\uff0c\u5b83\u662f\u7a7a\u95f2\u529f\u7387\u548c\u52a8\u6001\u529f\u7387\u7684\u603b\u548c\uff08\u5176\u4e2d\u7a7a\u95f2 \u4ee3\u8868\u7cfb\u7edf\u5904\u4e8e\u9759\u6b62\u72b6\u6001\uff0c\u52a8\u6001\u662f\u8d44\u6e90\u5229\u7528\u7387\u7684\u589e\u91cf\u529f\u7387\uff0c\u7edd\u5bf9\u662f\u7a7a\u95f2 + \u52a8\u6001\uff09\u3002\u6b64\u5916\uff0c \u8fd9\u4e2a\u529f\u7387\u4e5f\u662f\u6240\u6709\u8fdb\u7a0b\u7684\u603b\u529f\u8017\uff0c\u5305\u62ec\u7528\u6237\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3001\u540e\u53f0\u548c\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u3002</p> <p><code>isolate</code> \u6b65\u9aa4\u5e94\u7528\u4e00\u79cd\u673a\u5236\u5c06\u7a7a\u95f2\u529f\u7387\u4ece\u7edd\u5bf9\u529f\u7387\u4e2d\u5206\u79bb\u51fa\u6765\uff0c\u4ea7\u751f\u52a8\u6001\u529f\u7387\u3002 \u5b83\u8fd8\u6db5\u76d6\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u7528\u4e8e\u5206\u79bb\u540e\u53f0\u548c\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\uff08\u79f0\u4e3a <code>system_processes</code>\uff09 \u6d88\u8017\u7684\u52a8\u6001\u529f\u7387\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5373\u4f7f\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6307\u6807\u5229\u7528\u7387\u4e3a\u96f6\uff0c\u7a7a\u95f2\u548c\u52a8\u6001 <code>system_processes</code> \u529f\u7387\u90fd\u9ad8\u4e8e\u96f6\u3002</p> <p>\u6709\u4e24\u79cd\u5e38\u89c1\u7684\u53ef\u7528 <code>\u9694\u79bb\u5668</code>\uff1aProfileIsolator \u548c MinIdleIsolator\u3002</p> <p>\u6211\u4eec\u5c06\u4f7f\u7528\u9694\u79bb\u6b65\u9aa4\u8bad\u7ec3\u7684\u6a21\u578b\u79f0\u4e3a <code>DynPower</code> \u6a21\u578b\u3002\u540c\u65f6\uff0c\u4e0d\u4f7f\u7528\u9694\u79bb\u6b65\u9aa4\u8bad\u7ec3\u7684 \u6a21\u578b\u79f0\u4e3a <code>AbsPower</code> \u6a21\u578b\u3002\u76ee\u524d\uff0c<code>DynPower</code> \u6a21\u578b\u4e0d\u5305\u62ec\u7a7a\u95f2\u529f\u7387\u4fe1\u606f\uff0c\u4f46\u6211\u4eec\u8ba1\u5212 \u5728\u672a\u6765\u5305\u542b\u5b83\u3002</p> <p>ProfileIsolator \u4f9d\u8d56\u4e8e\u5728\u4e0d\u8fd0\u884c\u4efb\u4f55\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\u6536\u96c6\u7279\u5b9a\u65f6\u671f\u7684\u6570\u636e \uff08\u4f8b\u5982\uff0c\u529f\u7387\u548c\u8d44\u6e90\u5229\u7528\u7387\uff09\uff08\u79f0\u4e3a\u914d\u7f6e\u6587\u4ef6\u6570\u636e\uff09\u3002\u8fd9\u79cd\u9694\u79bb\u673a\u5236\u8fd8\u4ece\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684 \u6570\u636e\u4e2d\u6d88\u9664\u4e86 <code>system_processes</code> \u7684\u8d44\u6e90\u5229\u7528\u7387\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0cMinIdleIsolator \u8bc6\u522b\u8bad\u7ec3\u6570\u636e\u4e2d\u6240\u6709\u6837\u672c\u7684\u6700\u5c0f\u529f\u8017\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6700\u5c0f \u529f\u8017\u4ee3\u8868\u7a7a\u95f2\u529f\u7387\u548c <code>system_processes</code> \u529f\u8017\u3002</p> <p>\u867d\u7136\u6211\u4eec\u4e5f\u5e94\u8be5\u4ece\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684\u6570\u636e\u4e2d\u79fb\u9664\u6700\u5c0f\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4f46\u8fd9\u79cd\u9694\u79bb\u673a\u5236\u5728\u8bad\u7ec3 \u6570\u636e\u4e2d\u5305\u62ec\u4e86 <code>system_processes</code> \u7684\u8d44\u6e90\u5229\u7528\u7387\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u672a\u6765\u79fb\u9664\u5b83\u3002</p> <p>\u5982\u679c\u5b58\u5728\u4e0e\u7ed9\u5b9a <code>node_type</code> \u5339\u914d\u7684 <code>\u914d\u7f6e\u6587\u4ef6\u6570\u636e</code>\uff0c\u7ba1\u9053\u5c06\u4f7f\u7528 ProfileIsolator \u9884\u5904\u7406\u8bad\u7ec3\u6570\u636e\u3002\u5426\u5219\uff0c\u7ba1\u9053\u5c06\u5e94\u7528\u53e6\u4e00\u79cd\u9694\u79bb\u673a\u5236\uff0c\u4f8b\u5982 MinIdleIsolator\u3002</p> <p>\uff08\u67e5\u770b\u5982\u4f55\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u8fd9\u91cc\uff09</p>"},{"location":"zh/archive/kepler_model_server/pipeline/#_3","title":"\u8ba8\u8bba","text":"<p>\u9009\u62e9\u4f7f\u7528 <code>DynPower</code> \u8fd8\u662f <code>AbsPower</code> \u6a21\u578b\u4ecd\u5728\u8c03\u67e5\u4e2d\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0cDynPower \u6bd4 <code>AbsPower</code> \u8868\u73b0\u51fa\u66f4\u597d\u7684\u51c6\u786e\u6027\u3002\u4f46\u662f\uff0c\u6211\u4eec\u76ee\u524d\u5229\u7528 <code>AbsPower</code> \u6a21\u578b\u6765\u4f30\u7b97 \u5e73\u53f0\u3001CPU \u548c DRAM \u7ec4\u4ef6\u7684\u8282\u70b9\u529f\u7387\uff0c\u56e0\u4e3a <code>DynPower</code> \u6a21\u578b\u7f3a\u4e4f\u7a7a\u95f2\u529f\u7387\u4fe1\u606f\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u516c\u6709\u4e91\u73af\u5883\u4e2d\u7684\u865a\u62df\u673a\u4e0a\u516c\u5f00\u7a7a\u95f2\u529f\u7387\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u4e3b\u673a\u7684 \u7a7a\u95f2\u529f\u7387\u5fc5\u987b\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u6240\u6709\u865a\u62df\u673a\u4e4b\u95f4\u5206\u914d\uff0c\u800c\u5728\u516c\u6709\u4e91\u73af\u5883\u4e2d\u65e0\u6cd5\u786e\u5b9a\u4e3b\u673a\u4e0a \u8fd0\u884c\u7684\u865a\u62df\u673a\u6570\u91cf\u3002</p> <p>\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u8282\u70b9\u4e0a\u53ea\u6709\u4e00\u4e2a\u865a\u62df\u673a\u8fd0\u884c\uff08\u5bf9\u4e8e\u975e\u5e38\u7279\u5b9a\u7684\u573a\u666f\uff09\uff0c\u6216\u8005\u529f\u7387\u6a21\u578b\u5728 \u88f8\u673a\u73af\u5883\u4e2d\u4f7f\u7528\u65f6\uff0c\u6211\u4eec\u624d\u80fd\u516c\u5f00\u7a7a\u95f2\u529f\u7387\u3002</p>"},{"location":"zh/archive/kepler_model_server/pipeline/#trainer","title":"\u8bad\u7ec3\u5668 {#trainer}","text":"<p><code>\u8bad\u7ec3\u5668</code> \u662f\u4e00\u4e2a\u62bd\u8c61\uff0c\u7528\u4e8e\u5b9a\u4e49\u5e94\u7528\u4e8e\u6bcf\u4e2a\u7279\u5f81\u7ec4\u548c\u6bcf\u4e2a\u7ed9\u5b9a\u529f\u7387\u6807\u8bb0\u6e90\u7684\u5b66\u4e60\u65b9\u6cd5\u3002</p> <p>\u53ef\u7528\u8bad\u7ec3\u5668 (v0.6)\uff1a</p> <ul> <li>PolynomialRegressionTrainer</li> <li>GradientBoostingRegressorTrainer</li> <li>SGDRegressorTrainer</li> <li>KNeighborsRegressorTrainer</li> <li>LinearRegressionTrainer</li> <li>SVRRegressorTrainer</li> </ul>"},{"location":"zh/archive/kepler_model_server/pipeline/#node-type","title":"\u8282\u70b9\u7c7b\u578b {#node-type}","text":"<p>Kepler \u6839\u636e\u5176\u57fa\u51c6\u6027\u80fd\u5f62\u6210\u591a\u7ec4\u673a\u5668\uff08\u8282\u70b9\uff09\uff0c\u5e76\u4e3a\u6bcf\u7ec4\u5355\u72ec\u8bad\u7ec3\u6a21\u578b\u3002\u8bc6\u522b\u7684\u7ec4 \u5bfc\u51fa\u4e3a <code>\u8282\u70b9\u7c7b\u578b</code>\u3002</p>"},{"location":"zh/archive/kepler_model_server/power_estimation/","title":"Kepler \u529f\u7387\u4f30\u7b97\u90e8\u7f72","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u5728 Kepler \u4e2d\uff0c\u6211\u4eec\u8fd8\u4e3a\u6ca1\u6709\u5b89\u88c5\u6216\u652f\u6301\u529f\u7387\u6d4b\u91cf\u5de5\u5177\u7684\u7cfb\u7edf\u63d0\u4f9b\u4e86\u57fa\u4e8e\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5 \u7684\u529f\u7387\u4f30\u7b97\u89e3\u51b3\u65b9\u6848\u3002\u6709\u4e24\u79cd\u4f30\u7b97\u5668\u66ff\u4ee3\u65b9\u6848\u3002</p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#_1","title":"\u4f30\u7b97\u5668","text":"<ul> <li> <p>\u672c\u5730\u7ebf\u6027\u56de\u5f52\u4f30\u7b97\u5668\uff1a\u6b64\u4f30\u7b97\u5668\u4f7f\u7528\u8bad\u7ec3\u7684\u6743\u91cd\u4e58\u4ee5\u4f7f\u7528\u6307\u6807\u7684\u5f52\u4e00\u5316\u503c\u6765\u4f30\u7b97   \u529f\u7387\uff08\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff09\u3002</p> </li> <li> <p>\u901a\u7528\u4f30\u7b97\u5668 Sidecar\uff1a\u6b64\u4f30\u7b97\u5668\u8f6c\u6362\u4f7f\u7528\u6307\u6807\u5e76\u5e94\u7528\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u662f   \u6765\u81ea scikit-learn \u5e93\u7684\u4efb\u4f55\u56de\u5f52\u6a21\u578b\u6216\u6765\u81ea Keras\uff08TensorFlow\uff09\u7684\u4efb\u4f55\u795e\u7ecf\u7f51\u7edc\u3002   \u8981\u4f7f\u7528\u6b64\u4f30\u7b97\u5668\uff0c\u9700\u8981\u542f\u7528 Kepler \u4f30\u7b97\u5668\u3002</p> </li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u901a\u8fc7\u8fde\u63a5 Kepler \u6a21\u578b\u670d\u52a1\u5668 API\uff0c\u8bad\u7ec3\u7684\u6a21\u578b\u4ee5\u53ca\u6743\u91cd\u53ef\u4ee5\u901a\u8fc7\u5728\u7ebf\u8bad\u7ec3 \u4f8b\u7a0b\u5b9a\u671f\u66f4\u65b0\u3002</p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#_2","title":"\u90e8\u7f72\u573a\u666f","text":""},{"location":"zh/archive/kepler_model_server/power_estimation/#_3","title":"\u6700\u5c0f\u90e8\u7f72","text":"<p>\u6700\u5c0f\u90e8\u7f72\u662f\u5728 Kepler \u4e3b\u5bb9\u5668\u4e2d\u4f7f\u7528\u672c\u5730\u7ebf\u6027\u56de\u5f52\u4f30\u7b97\u5668\uff0c\u4ec5\u4f7f\u7528\u79bb\u7ebf\u8bad\u7ec3\u7684\u6a21\u578b\u6743\u91cd\u3002</p> <p></p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#sidecar","title":"\u4f7f\u7528\u901a\u7528\u4f30\u7b97\u5668 Sidecar \u7684\u90e8\u7f72","text":"<p>\u8981\u542f\u7528\u901a\u7528\u4f30\u7b97\u5668\u8fdb\u884c\u529f\u7387\u63a8\u7406\uff0c\u53ef\u4ee5\u90e8\u7f72\u4f30\u7b97\u5668 sidecar\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4e24\u4e2a\u5bb9\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u8f7b\u91cf\u7ea7\u4e14\u5feb\u901f\u7684 unix \u57df\u5957\u63a5\u5b57\u3002 \u4e0e\u672c\u5730\u4f30\u7b97\u5668\u4e0d\u540c\uff0c\u901a\u7528\u4f30\u7b97\u5668 sidecar \u914d\u5907\u4e86\u591a\u4e2a\u63a8\u7406\u652f\u6301\u5e93\u548c\u4f9d\u8d56\u9879\u3002 \u8fd9\u79cd\u989d\u5916\u7684\u5f00\u9500\u5fc5\u987b\u4e0e\u9884\u671f\u4ece\u7075\u6d3b\u6a21\u578b\u9009\u62e9\u4e2d\u83b7\u5f97\u7684\u4f30\u7b97\u51c6\u786e\u6027\u63d0\u9ad8\u8fdb\u884c\u6743\u8861\u3002</p> <p></p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#kepler_1","title":"\u8fde\u63a5\u5230 Kepler \u6a21\u578b\u670d\u52a1\u5668\u7684\u6700\u5c0f\u90e8\u7f72","text":"<p>\u4e3a\u4e86\u83b7\u5f97\u9884\u671f\u80fd\u63d0\u4f9b\u66f4\u597d\u4f30\u7b97\u51c6\u786e\u6027\u7684\u66f4\u65b0\u6743\u91cd\uff0cKepler \u53ef\u4ee5\u8fde\u63a5\u5230\u8fdc\u7a0b Kepler \u6a21\u578b\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4f7f\u7528\u5177\u6709\u529f\u7387\u6d4b\u91cf\u5de5\u5177\u7684\u7cfb\u7edf\u7684\u6570\u636e\u8fdb\u884c\u5728\u7ebf\u8bad\u7ec3\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#_4","title":"\u5b8c\u6574\u90e8\u7f72","text":"<p>\u4e0b\u56fe\u663e\u793a\u4e86\u542f\u7528 Kepler \u901a\u7528\u4f30\u7b97\u5668\u5e76\u8fde\u63a5\u5230\u8fdc\u7a0b Kepler \u6a21\u578b\u670d\u52a1\u5668\u7684\u90e8\u7f72\u3002 Kepler \u901a\u7528\u4f30\u7b97\u5668 sidecar \u53ef\u4ee5\u52a8\u6001\u4ece Kepler \u6a21\u578b\u670d\u52a1\u5668\u66f4\u65b0\u6a21\u578b\uff0c\u5e76\u671f\u671b\u83b7\u5f97 \u6700\u51c6\u786e\u7684\u6a21\u578b\u3002</p> <p></p>"},{"location":"zh/archive/kepler_model_server/power_estimation/#kepler_2","title":"Kepler \u6a21\u578b\u6570\u636e\u5e93\u4e2d\u63d0\u4f9b\u7684\u529f\u7387\u6a21\u578b","text":"\u7248\u672c \u529f\u7387\u6570\u636e\u6e90 \u7ba1\u9053 \u53ef\u7528\u80fd\u6e90\u6765\u6e90 \u9519\u8bef\u62a5\u544a 0.6 nx12 std_v0.6 rapl,acpi \u94fe\u63a5 0.7 SPECpower specpower acpi \u94fe\u63a5 0.7 \u8bad\u7ec3\u5267\u672c ec2 intel_rapl \u94fe\u63a5"},{"location":"zh/archive/usage/deep_dive/","title":"Kepler \u6df1\u5165\u63a2\u8ba8","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#kepler_1","title":"Kepler \u7ec4\u4ef6\u53ca\u5176\u529f\u80fd","text":"<p>Kepler \u5806\u6808\u5305\u62ec Kepler \u548c Kepler \u6a21\u578b\u670d\u52a1\u5668</p>"},{"location":"zh/archive/usage/deep_dive/#kepler_2","title":"Kepler","text":"<p>Kepler\uff0c\u57fa\u4e8e Kubernetes \u7684\u9ad8\u6548\u529f\u8017\u7ea7\u522b\u5bfc\u51fa\u5668\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u8fdb\u7a0b\u3001\u5bb9\u5668\u548c Kubernetes Pod \u7ea7\u522b\u4f30\u7b97\u529f\u8017\u7684\u65b9\u6cd5\u3002</p> <p>Kepler \u5982\u4f55\u6536\u96c6\u6570\u636e\uff1f</p> <p>Kepler \u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u6536\u96c6\u529f\u7387\u6570\u636e\uff1a</p>"},{"location":"zh/archive/usage/deep_dive/#ebpf","title":"EBPF\u3001\u786c\u4ef6\u8ba1\u6570\u5668","text":"<p>Kepler \u53ef\u4ee5\u5229\u7528\u96c6\u6210\u5230\u5185\u6838\u8def\u5f84\u4e2d\u7684 BPF \u7a0b\u5e8f\u6765\u63d0\u53d6\u4e0e\u8fdb\u7a0b\u76f8\u5173\u7684\u8d44\u6e90\u5229\u7528\u7387\u6307\u6807\uff0c \u6216\u4f7f\u7528\u6765\u81ea\u786c\u4ef6\u8ba1\u6570\u5668\u7684\u6307\u6807\u3002\u7528\u4e8e\u6784\u5efa\u6a21\u578b\u7684\u6307\u6807\u7c7b\u578b\u53ef\u80fd\u4f1a\u6839\u636e\u7cfb\u7edf\u73af\u5883\u800c\u6709\u6240\u4e0d\u540c\u3002 \u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u4f7f\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u6216\u6765\u81ea eBPF \u7b49\u5de5\u5177\u7684\u6307\u6807\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5c06\u4f7f\u7528\u8be5\u6a21\u578b\u7684 \u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u5185\u5bb9\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_1","title":"\u5b9e\u65f6\u7ec4\u4ef6\u529f\u7387\u8ba1","text":"<p>Kepler \u8fd8\u4f7f\u7528\u5404\u79cd API \u4ece\u8282\u70b9\u7ec4\u4ef6\u6536\u96c6\u5b9e\u65f6\u529f\u8017\u6307\u6807\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>Intel \u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236\uff08RAPL\uff09\u7528\u4e8e CPU \u548c DRAM \u529f\u7387</li> <li>NVIDIA \u7ba1\u7406\u5e93\uff08NVML\uff09\u7528\u4e8e GPU \u529f\u7387</li> </ul>"},{"location":"zh/archive/usage/deep_dive/#_2","title":"\u5e73\u53f0\u529f\u7387\u8ba1","text":"<p>\u5bf9\u4e8e\u5e73\u53f0\u529f\u7387\uff0c\u5373\u6574\u4e2a\u8282\u70b9\u529f\u7387\uff0cKepler \u4f7f\u7528\uff1a</p> <ul> <li>\u9ad8\u7ea7\u914d\u7f6e\u548c\u7535\u6e90\u63a5\u53e3\uff08ACPI\uff09</li> <li>Redfish/\u667a\u80fd\u7535\u6e90\u7ba1\u7406\u63a5\u53e3\uff08IPMI\uff09</li> <li>\u5f53\u7cfb\u7edf\u4e2d\u6ca1\u6709\u5b9e\u65f6\u529f\u7387\u6307\u6807\u53ef\u7528\u65f6\uff0c\u4f7f\u7528\u57fa\u4e8e\u56de\u5f52\u7684\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u3002</li> </ul>"},{"location":"zh/archive/usage/deep_dive/#kepler_3","title":"Kepler \u6a21\u578b\u670d\u52a1\u5668","text":"<p>\u6a21\u578b\u670d\u52a1\u5668\u7528\u4e8e\u8bad\u7ec3\u529f\u7387\u6a21\u578b\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0e Kepler \u4e00\u8d77\u90e8\u7f72\uff0c\u4ee5\u5e2e\u52a9 Kepler \u4e3a\u7ed9\u5b9a\u73af\u5883\u9009\u62e9\u6700\u5408\u9002\u7684\u529f\u7387\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u8003\u8651 CPU \u578b\u53f7\u3001\u53ef\u7528\u6307\u6807\u548c\u6240\u9700\u7684\u6a21\u578b\u51c6\u786e\u6027\u3002 \u5c06\u6765\uff0cKepler \u4e5f\u5c06\u80fd\u591f\u4f7f\u7528\u6a21\u578b\u670d\u52a1\u5668\u5177\u6709\u7684\u76f8\u540c\u903b\u8f91\u6765\u9009\u62e9\u529f\u7387\u6a21\u578b\u3002</p> <p>\u6a21\u578b\u670d\u52a1\u5668\u4f7f\u7528\u6765\u81ea\u7279\u5b9a\u88f8\u673a\u8282\u70b9\u7684 Prometheus \u6307\u6807\u8bad\u7ec3\u5176\u6a21\u578b\u3002\u5b83\u8bb0\u5f55\u8282\u70b9\u6d88\u8017\u4e86 \u591a\u5c11\u80fd\u91cf\u4ee5\u53ca\u5bb9\u5668\u548c\u7cfb\u7edf\u8fdb\u7a0b\uff08OS \u548c\u5176\u4ed6\u540e\u53f0\u8fdb\u7a0b\uff09\u7684\u8d44\u6e90\u5229\u7528\u7387\u3002\u5bb9\u5668\u6307\u6807\u662f\u901a\u8fc7 \u8fd0\u884c\u5404\u79cd\u5c0f\u6d4b\u8bd5\u83b7\u5f97\u7684\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u5bf9\u4e0d\u540c\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u3001\u7f13\u5b58\u7b49\uff09\u65bd\u52a0\u538b\u529b\uff0c \u6bd4\u5982\u4f7f\u7528\u540d\u4e3a <code>stress-ng</code> \u7684\u5de5\u5177\u3002</p> <p>\u5728\u521b\u5efa\u529f\u7387\u6a21\u578b\u65f6\uff0c\u6a21\u578b\u670d\u52a1\u5668\u4f7f\u7528\u56de\u5f52\u7b97\u6cd5\u3002\u5b83\u6301\u7eed\u8bad\u7ec3\u6a21\u578b\uff0c\u76f4\u5230\u8fbe\u5230\u53ef\u63a5\u53d7\u7684 \u51c6\u786e\u6027\u6c34\u5e73\u3002</p> <p>\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u6a21\u578b\u670d\u52a1\u5668\u901a\u8fc7 GitHub \u4ed3\u5e93\u4f7f\u8fd9\u4e9b\u6a21\u578b\u53ef\u8bbf\u95ee\uff0c\u4efb\u4f55 Kepler \u90e8\u7f72 \u90fd\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u6a21\u578b\u3002\u7136\u540e Kepler \u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\u6839\u636e\u8d44\u6e90\u4f7f\u7528\u65b9\u5f0f\u8ba1\u7b97\u8282\u70b9\uff08VM\uff09 \u6d88\u8017\u591a\u5c11\u529f\u7387\u3002\u7528\u4e8e\u6784\u5efa\u6a21\u578b\u7684\u6307\u6807\u7c7b\u578b\u53ef\u80fd\u4f1a\u6839\u636e\u7cfb\u7edf\u73af\u5883\u800c\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0c \u5b83\u53ef\u80fd\u4f7f\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u6216\u6765\u81ea eBPF \u7b49\u5de5\u5177\u7684\u6307\u6807\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5c06\u4f7f\u7528\u8be5\u6a21\u578b\u7684 \u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u5185\u5bb9\u3002</p> <p></p> <p>\u6709\u5173\u67b6\u6784\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u9075\u5faa Kepler \u6a21\u578b\u670d\u52a1\u5668\u7684\u6587\u6863\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_3","title":"\u6536\u96c6\u7cfb\u7edf\u529f\u8017 \u2013 \u865a\u62df\u673a\u4e0e\u88f8\u673a","text":"<p>\u6839\u636e\u90e8\u7f72 Kepler \u7684\u73af\u5883\uff0c\u7cfb\u7edf\u529f\u8017\u6307\u6807\u6536\u96c6\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e0b\u56fe\uff0c Kepler \u53ef\u4ee5\u901a\u8fc7\u88f8\u673a\u6216\u865a\u62df\u673a\u73af\u5883\u90e8\u7f72\u3002</p> <p></p>"},{"location":"zh/archive/usage/deep_dive/#_4","title":"\u76f4\u63a5\u5b9e\u65f6\u7cfb\u7edf\u529f\u7387\u6307\u6807\uff08\u88f8\u673a\uff09","text":"<p>\u5728\u5141\u8bb8\u76f4\u63a5\u6536\u96c6\u5b9e\u65f6\u7cfb\u7edf\u529f\u7387\u6307\u6807\u7684\u88f8\u673a\u73af\u5883\u4e2d\uff0cKepler \u53ef\u4ee5\u4f7f\u7528\u6bd4\u7387\u529f\u7387\u6a21\u578b \u5206\u914d\u7ed9\u5b9a\u7cfb\u7edf\u8d44\u6e90\u7684\u529f\u8017\u3002\u516c\u5f00\u5b9e\u65f6\u529f\u7387\u6307\u6807\u7684 API \u5bfc\u51fa\u7edd\u5bf9\u529f\u7387\uff0c\u8fd9\u662f\u52a8\u6001\u529f\u7387 \u548c\u7a7a\u95f2\u529f\u7387\u7684\u603b\u548c\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u52a8\u6001\u529f\u7387\u4e0e\u8d44\u6e90\u5229\u7528\u7387\u76f4\u63a5\u76f8\u5173\uff0c\u800c\u7a7a\u95f2\u529f\u7387\u662f \u6052\u5b9a\u529f\u7387\uff0c\u65e0\u8bba\u7cfb\u7edf\u662f\u9759\u6b62\u8fd8\u662f\u6709\u8d1f\u8f7d\u90fd\u4e0d\u4f1a\u53d8\u5316\u3002\u6b64\u6982\u5ff5\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u7a7a\u95f2\u529f\u7387 \u548c\u52a8\u6001\u529f\u7387\u5728\u6240\u6709\u8fdb\u7a0b\u4e2d\u7684\u5206\u914d\u65b9\u5f0f\u4e0d\u540c\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_5","title":"\u4f30\u7b97\u7cfb\u7edf\u529f\u7387\u6307\u6807\uff08\u865a\u62df\u673a\uff09","text":"<p>\u5728\u516c\u6709\u4e91\u7684\u865a\u62df\u673a\u73af\u5883\u4e2d\uff0c\u76ee\u524d\u6ca1\u6709\u76f4\u63a5\u65b9\u6cd5\u6d4b\u91cf\u865a\u62df\u673a\u6d88\u8017\u7684\u529f\u7387\u3002\u56e0\u6b64\uff0c \u6211\u4eec\u9700\u8981\u4f7f\u7528\u8bad\u7ec3\u7684\u529f\u7387\u6a21\u578b\u6765\u4f30\u7b97\u529f\u7387\uff0c\u8fd9\u6709\u4e00\u4e9b\u5f71\u54cd\u6a21\u578b\u51c6\u786e\u6027\u7684\u9650\u5236\u3002</p> <p>Kepler \u53ef\u4ee5\u4f7f\u7528\u8bad\u7ec3\u7684\u529f\u7387\u6a21\u578b\u4f30\u7b97\u865a\u62df\u673a\u7684\u52a8\u6001\u529f\u8017\u3002\u7136\u540e\uff0c\u5728\u4f30\u7b97\u6bcf\u4e2a\u865a\u62df\u673a\u7684 \u529f\u8017\u540e\uff0cKepler \u5e94\u7528\u6bd4\u7387\u529f\u7387\u6a21\u578b\u6765\u4f30\u7b97\u8fdb\u7a0b\u7684\u529f\u8017\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u865a\u62df\u673a\u901a\u5e38\u4e0d\u63d0\u4f9b \u786c\u4ef6\u8ba1\u6570\u5668\uff0cKepler \u4f7f\u7528 eBPF \u6307\u6807\u800c\u4e0d\u662f\u786c\u4ef6\u8ba1\u6570\u5668\u6765\u8ba1\u7b97\u6bd4\u7387\u3002\u91cd\u8981\u7684\u662f\u8981\u5f3a\u8c03\uff0c \u7528\u4e8e\u516c\u6709\u4e91\u865a\u62df\u673a\u7684\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u65e0\u6cd5\u5206\u914d\u8d44\u6e90\u7684\u7a7a\u95f2\u529f\u7387\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u4e3b\u673a\u4e2d \u8fd0\u884c\u4e86\u591a\u5c11\u5176\u4ed6\u865a\u62df\u673a\u3002\u6211\u4eec\u5728\u6b64\u535a\u5ba2\u7684\u9650\u5236\u90e8\u5206\u63d0\u4f9b\u4e86\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u56e0\u6b64\uff0c Kepler \u4e0d\u516c\u5f00\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u5bb9\u5668\u7684\u7a7a\u95f2\u529f\u7387\u3002</p> <p>\u529f\u7387\u6a21\u578b\u901a\u8fc7\u5bf9\u57fa\u51c6\u6d4b\u8bd5\u671f\u95f4\u6536\u96c6\u7684\u6570\u636e\u6267\u884c\u56de\u5f52\u5206\u6790\uff08\u5982\u7ebf\u6027\u6216\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09 \u7684\u56de\u5f52\uff09\u6765\u8bad\u7ec3\u3002\u8fd9\u4e9b\u6570\u636e\u5305\u62ec\u88f8\u673a\u8282\u70b9\u4e0a\u7684\u8d44\u6e90\u5229\u7528\u7387\u548c\u529f\u8017\uff0c\u4e3a\u529f\u7387\u6a21\u578b\u4f30\u7b97 \u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_6","title":"\u900f\u4f20\u4f30\u7b97\u865a\u62df\u673a\u529f\u7387\u6307\u6807","text":"<p>Kepler \u9996\u5148\u90e8\u7f72\u5728\u88f8\u673a\u8282\u70b9\uff08\u5373\u4e91\u63a7\u5236\u5e73\u9762\uff09\u4e2d\uff0c\u4f7f\u7528\u6765\u81ea\u88f8\u673a\u7684\u5b9e\u65f6\u529f\u7387\u6307\u6807 \u6301\u7eed\u6d4b\u91cf\u6bcf\u4e2a\u865a\u62df\u673a\u6d88\u8017\u7684\u52a8\u6001\u548c\u7a7a\u95f2\u529f\u7387\u3002\u7136\u540e\uff0cKepler \u901a\u8fc7\u865a\u62df\u673a\u516c\u5f00\u6b64\u529f\u7387\u6570\u636e\u3002 \u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7\"\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u8d85\u7ea7\u8c03\u7528\" \u6216\u5c06\u6570\u5b57\u4fdd\u5b58\u5728\u865a\u62df\u673a\u53ef\u4ee5\u8bbf\u95ee\u7684\u7279\u6b8a\u6587\u4ef6\u4e2d\uff08\u4f8b\u5982\u5728\u865a\u62df\u673a\u4e2d\u6302\u8f7d\u7684 cGroup \u6587\u4ef6\uff09 \u4f7f\u865a\u62df\u673a\u53ef\u7528\u3002\u7136\u540e\uff0c\u901a\u8fc7\u4f7f\u7528\u865a\u62df\u673a\u529f\u8017\uff0c\u865a\u62df\u673a\u5185\u7684\u53e6\u4e00\u4e2a Kepler \u5b9e\u4f8b\u53ef\u4ee5 \u5e94\u7528\u6bd4\u7387\u529f\u7387\u6a21\u578b\u6765\u4f30\u7b97\u865a\u62df\u673a\u4e2d\u8fdb\u7a0b\u4f7f\u7528\u7684\u529f\u7387\u3002</p> <p>Note</p> <p>\u900f\u4f20\u65b9\u6cd5\u4ecd\u5728\u63a2\u7d22\u4e2d\uff0c\u76ee\u524d\u5728 Kepler \u4e2d\u4e0d\u53ef\u7528\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_7","title":"\u6bd4\u7387\u529f\u7387\u6a21\u578b\u89e3\u91ca","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c\u52a8\u6001\u529f\u7387\u4e0e\u8d44\u6e90\u5229\u7528\u7387\u76f4\u63a5\u76f8\u5173\uff0c\u800c\u7a7a\u95f2\u529f\u7387\u662f\u6052\u5b9a\u529f\u7387\uff0c\u65e0\u8bba\u7cfb\u7edf\u662f \u9759\u6b62\u8fd8\u662f\u6709\u8d1f\u8f7d\u90fd\u4e0d\u4f1a\u53d8\u5316\u3002\u6b64\u6982\u5ff5\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u7a7a\u95f2\u529f\u7387\u548c\u52a8\u6001\u529f\u7387\u5728\u6240\u6709\u8fdb\u7a0b\u4e2d \u7684\u5206\u914d\u65b9\u5f0f\u4e0d\u540c\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u63cf\u8ff0\u6bd4\u7387\u529f\u7387\u6a21\u578b\uff0c\u5b83\u5c06\u52a8\u6001\u529f\u7387\u5206\u914d\u5230\u6240\u6709\u8fdb\u7a0b\u4e2d\u3002</p> <p>\u6bd4\u7387\u529f\u7387\u6a21\u578b\u8ba1\u7b97\u8fdb\u7a0b\u8d44\u6e90\u5229\u7528\u7387\u4e0e\u6574\u4e2a\u7cfb\u7edf\u8d44\u6e90\u5229\u7528\u7387\u7684\u6bd4\u7387\uff0c\u7136\u540e\u5c06\u6b64\u6bd4\u7387\u4e58\u4ee5 \u8d44\u6e90\u7684\u52a8\u6001\u529f\u8017\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u6839\u636e\u5b9e\u9645\u8d44\u6e90\u5229\u7528\u7387\u51c6\u786e\u4f30\u7b97\u529f\u7387\u4f7f\u7528\uff0c\u786e\u4fdd\u5982\u679c \u7a0b\u5e8f\u5229\u7528 10% \u7684 CPU\uff0c\u5b83\u5c31\u6d88\u8017 10% \u7684\u603b CPU \u529f\u7387\u3002</p> <p>\u7a7a\u95f2\u529f\u7387\u4f30\u7b97\u9075\u5faa\u6e29\u5ba4\u6c14\u4f53\uff08GHG\uff09\u534f\u8bae\u6307\u5357\uff0c \u8be5\u6307\u5357\u89c4\u5b9a\u6052\u5b9a\u4e3b\u673a\u7a7a\u95f2\u529f\u7387\u5e94\u6839\u636e\u8fdb\u7a0b/\u5bb9\u5668\u7684\u5927\u5c0f\uff08\u76f8\u5bf9\u4e8e\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u5176\u4ed6\u5bb9\u5668\u7684 \u603b\u5927\u5c0f\uff09\u5728\u8fdb\u7a0b/\u5bb9\u5668\u4e4b\u95f4\u5206\u914d\u3002\u6b64\u5916\uff0c\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5728 Kepler \u4e2d\u4e0d\u540c\u7684\u8d44\u6e90 \u5229\u7528\u7387\u4f30\u7b97\u65b9\u5f0f\u4e0d\u540c\u3002\u6211\u4eec\u5229\u7528\u786c\u4ef6\u8ba1\u6570\u5668\u8bc4\u4f30\u88f8\u673a\u73af\u5883\u4e2d\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4f7f\u7528 CPU \u6307\u4ee4\u4f30\u7b97 CPU \u5229\u7528\u7387\uff0c\u6536\u96c6\u7f13\u5b58\u672a\u547d\u4e2d\u6765\u8861\u91cf\u5185\u5b58\u5229\u7528\u7387\uff0c\u4ee5\u53ca\u8bc4\u4f30\u6d41\u5f0f\u591a\u5904\u7406\u5668 \uff08SM\uff09\u5229\u7528\u7387\u6765\u8861\u91cf GPU \u5229\u7528\u7387\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_8","title":"\u529f\u8017\u5f52\u56e0\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f","text":"<p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u4e86 Kepler \u5982\u4f55\u6536\u96c6\u6570\u636e\u548c\u8bad\u7ec3\u6a21\u578b\u4ee5\u53ca\u6bd4\u7387\u529f\u7387\u6a21\u578b\uff0c\u8ba9\u6211\u4eec \u6df1\u5165\u4e86\u89e3\u529f\u8017\u5f52\u56e0\u3002</p> <p>\u4e00\u65e6\u6536\u96c6\u4e86\u4e0e\u80fd\u8017\u548c\u8d44\u6e90\u5229\u7528\u7387\u76f8\u5173\u7684\u6240\u6709\u6570\u636e\uff0cKepler \u5c31\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u8fdb\u7a0b\u6d88\u8017\u7684 \u80fd\u91cf\u3002\u8fd9\u662f\u901a\u8fc7\u6839\u636e\u8fdb\u7a0b\u548c\u7cfb\u7edf\u8d44\u6e90\u5229\u7528\u7387\u7684\u6bd4\u7387\u6765\u5206\u914d\u7ed9\u5b9a\u8d44\u6e90\u4f7f\u7528\u7684\u529f\u7387\u6765\u5b8c\u6210\u7684\u3002 \u6211\u4eec\u5c06\u5728\u6b64\u535a\u5ba2\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\u6b64\u6a21\u578b\u3002\u7136\u540e\uff0c\u901a\u8fc7\u8fdb\u7a0b\u7684\u529f\u8017\uff0cKepler \u5c06\u529f\u7387\u805a\u5408\u5230 \u5bb9\u5668\u548c Kubernetes Pod \u7ea7\u522b\u3002\u4e3a\u5bb9\u5668\u6536\u96c6\u548c\u4f30\u7b97\u7684\u6570\u636e\u7136\u540e\u7531 Prometheus \u5b58\u50a8\u3002</p> <p>Kepler \u901a\u8fc7\u4f7f\u7528\u5728 BPF \u7a0b\u5e8f\u4e2d\u6536\u96c6\u7684\u8fdb\u7a0b ID\uff08PID\uff09\u4fe1\u606f\u627e\u5230\u8fdb\u7a0b\u5c5e\u4e8e\u54ea\u4e2a\u5bb9\u5668\uff0c \u7136\u540e\u4f7f\u7528\u5bb9\u5668 ID\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e0e Pod \u540d\u79f0\u5173\u8054\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5bb9\u5668 ID \u6765\u81ea <code>/proc/PID/cgroup</code>\uff0cKepler \u4f7f\u7528 Kubernetes APIServer \u4fdd\u6301\u4ece\u8282\u70b9\u521b\u5efa\u548c \u5220\u9664\u7684 Pod \u7684\u66f4\u65b0\u5217\u8868\u3002\u4e0e Kubernetes \u5bb9\u5668\u4e0d\u76f8\u5173\u7684\u8fdb\u7a0b ID \u88ab\u5206\u7c7b\u4e3a <code>\u7cfb\u7edf\u8fdb\u7a0b</code>\uff08\u5305\u62ec PID 0\uff09\u3002</p> <p>\u5c06\u6765\uff0c\u8fd0\u884c\u865a\u62df\u673a\u7684\u8fdb\u7a0b\u5c06\u4e0e\u865a\u62df\u673a ID \u5173\u8054\uff0c\u4ee5\u4fbf Kepler \u4e5f\u53ef\u4ee5\u5bfc\u51fa\u865a\u62df\u673a\u6307\u6807\u3002</p>"},{"location":"zh/archive/usage/deep_dive/#_9","title":"\u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u9650\u5236","text":"<p>\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u4e0e\u4f7f\u7528\u5b9e\u65f6\u529f\u7387\u6307\u6807\u7684\u529f\u7387\u6a21\u578b\u76f8\u6bd4\uff0c\u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u6709\u5176\u9650\u5236\u3002</p> <ul> <li> <p>\u7cfb\u7edf\u7279\u5b9a\u6a21\u578b\uff1a \u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u662f\u7cfb\u7edf\u7279\u5b9a\u7684\uff0c\u6839\u636e CPU \u578b\u53f7\u548c\u67b6\u6784\u800c\u6709\u6240\u4e0d\u540c\u3002 \u867d\u7136\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u901a\u7528\u6a21\u578b\u53ef\u4ee5\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u529f\u8017\u7684\u89c1\u89e3\uff0c\u6709\u52a9\u4e8e\u8282\u80fd\u51b3\u7b56\u3002</p> </li> <li> <p>\u865a\u62df\u673a\u529f\u8017\u9ad8\u4f30\uff1a \u5c06\u88f8\u673a\u529f\u7387\u6a21\u578b\u7528\u4e8e\u5355\u4e2a\u865a\u62df\u673a\u53ef\u80fd\u5bfc\u81f4\u9ad8\u4f30\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6a21\u578b \u53ef\u80fd\u4e0d\u53cd\u6620\u591a\u4e2a\u865a\u62df\u673a\u5171\u4eab\u8282\u70b9\u65f6\u7684\u5b9e\u9645\u529f\u8017\u3002\u5f53\u4f7f\u7528\u66f4\u591a CPU \u65f6\uff0c\u529f\u7387\u66f2\u7ebf\u53ef\u80fd \u663e\u793a\u529f\u8017\u964d\u4f4e\uff0c\u5f71\u54cd\u51c6\u786e\u4f30\u7b97\u3002</p> </li> <li> <p>\u7a7a\u95f2\u529f\u7387\u5206\u914d\u6311\u6218\uff1a \u5728\u516c\u6709\u4e91\u73af\u5883\u4e2d\uff0c\u6839\u636e\u865a\u62df\u673a\u76f8\u5bf9\u4e8e\u4e3b\u673a\u4e0a\u5176\u4ed6\u865a\u62df\u673a\u7684 \u5927\u5c0f\u5728\u865a\u62df\u673a\u4e4b\u95f4\u5206\u914d\u7a7a\u95f2\u529f\u7387\u662f\u5177\u6709\u6311\u6218\u6027\u7684\uff0c\u56e0\u4e3a\u65e0\u6cd5\u786e\u5b9a\u4e3b\u673a\u4e0a\u540c\u65f6\u8fd0\u884c\u7684 \u865a\u62df\u673a\u6570\u91cf\u3002\u7531\u4e8e\u6b64\u9650\u5236\uff0c\u51c6\u786e\u4f30\u7b97\u6bcf\u4e2a\u865a\u62df\u673a\u7684\u7a7a\u95f2\u529f\u7387\u53d8\u5f97\u590d\u6742\u3002</p> </li> <li> <p>\u5bf9\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u62a5\u544a\u7684\u4f9d\u8d56\uff1a \u865a\u62df\u673a\u7684\u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u4f9d\u8d56\u4e8e\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f \u5bf9 CPU \u5bc4\u5b58\u5668\u503c\u7684\u51c6\u786e\u62a5\u544a\u3002\u67d0\u4e9b\u516c\u6709\u4e91\u865a\u62df\u673a\u4e2d\u8d44\u6e90\u7684\u8fc7\u5ea6\u914d\u7f6e\u53ef\u80fd\u5f71\u54cd\u8d44\u6e90 \u5229\u7528\u7387\u6307\u6807\u7684\u51c6\u786e\u6027\uff0c\u5f71\u54cd\u8fd9\u4e9b\u529f\u7387\u6a21\u578b\u7684\u53ef\u9760\u6027\u3002</p> </li> </ul> <p>Note</p> <p>\u6709\u5173\u9884\u8bad\u7ec3\u529f\u7387\u6a21\u578b\u9650\u5236\u7684\u66f4\u8be6\u7ec6\u89e3\u91ca\uff0c\u8bf7\u9605\u8bfb Kepler \u7ef4\u62a4\u8005\u7684 \u535a\u5ba2\u3002</p> <ul> <li> \u89e3\u91ca\u6a21\u578b\u3002\u6a21\u578b\u6709\u4f55\u4e0d\u540c\uff0c\u4f55\u65f6\u5e94\u7528\u7279\u5b9a\u6a21\u578b\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u6a21\u578b\u662f\u5426\u6709\u6b63\u786e\u7684\u7528\u4f8b/\u573a\u666f\uff1f</li> <li> AbsComponentModelWeight</li> <li> AbsComponentPower</li> <li> AbsModelWeight</li> <li> AbsPower</li> <li> DynComponentModelWeight</li> <li> DynComponentPower</li> <li> XGBoost</li> </ul>"},{"location":"zh/archive/usage/general_config/","title":"\u914d\u7f6e","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u8fd9\u662f Kepler \u7cfb\u7edf\u53ef\u914d\u7f6e\u503c\u7684\u5217\u8868\u3002\u5982\u679c\u5df2\u5b89\u88c5 Kepler Operator\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4ee5\u4e0b CR \u89c4\u8303\u6765\u5e94\u7528\u914d\u7f6e\u3002</p> \u914d\u7f6e\u70b9 \u89c4\u8303 \u63cf\u8ff0 \u9ed8\u8ba4\u503c Kepler CR\uff08\u5355\u9879\uff1adefault\uff09 Kepler DaemonSet \u90e8\u7f72 daemon.exporter.image Kepler \u4e3b\u955c\u50cf quay.io/sustainable_computing_io/kepler:latest Kepler DaemonSet \u90e8\u7f72 daemon.exporter.port \u6307\u6807\u5bfc\u51fa\u5668\u7aef\u53e3 9102 Kepler DaemonSet \u90e8\u7f72 daemon.estimator-sidecar.enabled Kepler Estimator Sidecar \u8865\u4e01 false Kepler DaemonSet \u90e8\u7f72 daemon.estimator-sidecar.image Kepler \u4f30\u7b97\u5668\u8fb9\u8f66\u955c\u50cf - Kepler DaemonSet \u90e8\u7f72 daemon.estimator-sidecar.mnt-path \u4e3b\u5bb9\u5668\u548c\u8fb9\u8f66\u4e4b\u95f4\u7528\u4e8e unix \u57df\u5957\u63a5\u5b57\u7684\u6302\u8f7d\u8def\u5f84 /tmp Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08METRIC_PATH\uff09 daemon.exporter.path \u5bfc\u51fa\u6307\u6807\u7684\u8def\u5f84 /metrics Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_SERVER_ENABLE\uff09 model-server.enabled Kepler Model Server Pod \u8fde\u63a5 false model-server.enabled Model Server Pod \u73af\u5883\u53d8\u91cf\uff08MODEL_SERVER_PORT\uff09 model-server.port \u6a21\u578b\u670d\u52a1\u5668\u7684\u6a21\u578b\u670d\u52a1\u7aef\u53e3 8100 Model Server Pod \u73af\u5883\u53d8\u91cf\uff08PROM_SERVER\uff09 model-server.prom Prometheus \u6307\u6807\u670d\u52a1\u5668\u7684\u7aef\u70b9 <code>http://prometheus-k8s.monitoring.svc.cluster.local:9090</code> Model Server Pod \u73af\u5883\u53d8\u91cf\uff08MODEL_PATH\uff09 model-server.model-path \u4fdd\u5b58\u6a21\u578b\u7684\u8def\u5f84 models Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_SERVER_ENDPOINT\uff09 daemon.model-server \u6a21\u578b\u670d\u52a1\u5668\u7684\u670d\u52a1\u5bb9\u5668\u7aef\u70b9 <code>http://kepler-model-server.monitoring.cluster.local:[model-server.port]/model</code> Model Server Pod \u90e8\u7f72 model-server.trainer \u6a21\u578b\u5728\u7ebf\u8bad\u7ec3\u5668\u8865\u4e01 false model-server.trainer Model Server Pod \u73af\u5883\u53d8\u91cf\uff08PROM_QUERY_INTERVAL\uff09 model-server.prom_interval \u6267\u884c\u8bad\u7ec3\u7ba1\u9053\u7684\u95f4\u9694\uff08\u79d2\uff09 20 Model Server Pod \u73af\u5883\u53d8\u91cf\uff08PROM_QUERY_STEP\uff09 model-server.prom-step \u8bad\u7ec3\u7ba1\u9053\u4e2d\u67e5\u8be2\u6570\u636e\u70b9\u7684\u6b65\u957f\uff08\u79d2\uff09 3 Model Server Pod \u73af\u5883\u53d8\u91cf\uff08PROM_HEADERS\uff09 model-server.prom-header \u7528\u4e8e\u6307\u5b9a\u6240\u9700\u6807\u5934\uff08\u5982\u8eab\u4efd\u9a8c\u8bc1\uff09 - Model Server Pod \u73af\u5883\u53d8\u91cf\uff08PROM_SSL_DISABLE\uff09 model-server.prom-ssl \u7981\u7528 Prometheus \u8fde\u63a5\u4e2d\u7684 ssl true Model Server Pod \u73af\u5883\u53d8\u91cf\uff08INITIAL_MODELS_LOC\uff09 model-server.init-loc \u7528\u4f5c\u521d\u59cb\u6a21\u578b\u7684\u79bb\u7ebf\u6a21\u578b\u7684\u6839 URL <code>https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models</code> Model Server Pod \u73af\u5883\u53d8\u91cf\uff08INITIAL_MODEL_NAMES.[<code>MODEL_TYPE</code>]\uff09 model-server.[<code>MODEL_TYPE</code>] \u6bcf\u79cd\u6a21\u578b\u7c7b\u578b\u7684\u9ed8\u8ba4\u7ba1\u9053\u540d\u79f0 - CollectMetric CR\uff08\u5355\u9879\uff1adefault\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08COUNTER_METRICS\uff09 counter \u4ece\u8ba1\u6570\u5668\u6e90\u542f\u7528\u7684\u6027\u80fd\u6307\u6807\u5217\u8868 *\uff08\u542f\u7528\u8ba1\u6570\u5668\u6e90\u7684\u6240\u6709\u53ef\u7528\u6307\u6807\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08BPF_METRICS\uff09 bpf \u4ece bpf\uff08\u5373 eBPF\uff09\u6e90\u542f\u7528\u7684\u6027\u80fd\u6307\u6807\u5217\u8868 *\uff08\u542f\u7528 bpf \u6e90\u7684\u6240\u6709\u53ef\u7528\u6307\u6807\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08GPU_METRICS\uff09 gpu \u4ece gpu \u6e90\u542f\u7528\u7684\u6027\u80fd\u6307\u6807\u5217\u8868 *\uff08\u542f\u7528 gpu \u6e90\u7684\u6240\u6709\u53ef\u7528\u6307\u6807\uff09 ExportMetric CR\uff08\u5355\u9879\uff1adefault\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08PERF_METRICS\uff09 perf \u8981\u5bfc\u51fa\u7684\u6027\u80fd\u6307\u6807\u5217\u8868 *\uff08\u542f\u7528\u6240\u6709\u6536\u96c6\u7684\u6027\u80fd\u6307\u6807\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08EXPORT_NODE_TOTAL_POWER\uff09 node_total_power \u5207\u6362\u662f\u5426\u5bfc\u51fa\u8282\u70b9\u603b\u529f\u7387 true Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08EXPORT_NODE_COMPONENT_POWERS\uff09 node_component_powers \u5207\u6362\u662f\u5426\u6309\u7ec4\u4ef6\u5bfc\u51fa\u8282\u70b9\u529f\u7387 true Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08EXPORT_POD_TOTAL_POWER\uff09 pod_total_power \u5207\u6362\u662f\u5426\u5bfc\u51fa Pod \u603b\u529f\u7387 true Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08EXPORT_POD_COMPONENT_POWERS\uff09 pod_component_powers \u5207\u6362\u662f\u5426\u6309\u7ec4\u4ef6\u5bfc\u51fa Pod \u529f\u7387 true EstimatorConfig CR\uff08\u591a\u9879\uff1anode-total-power\u3001node-component-powers\u3001pod-total-power\u3001pod-component-powers\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_CONFIG.[<code>MODEL_ITEM</code>]_ESTIMATOR\uff09 use-sidecar \u5207\u6362\u662f\u5426\u4f7f\u7528\u4f30\u7b97\u5668\u8fb9\u8f66\u8fdb\u884c\u529f\u7387\u4f30\u7b97 false Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_CONFIG.[<code>MODEL_ITEM</code>]_MODEL\uff09 fixed-model \u6307\u5b9a\u6a21\u578b\u540d\u79f0 \uff08\u81ea\u52a8\u9009\u62e9\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_CONFIG.[<code>MODEL_ITEM</code>]_FILTERS\uff09 filters \u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6307\u5b9a\u6a21\u578b\u8fc7\u6ee4\u6761\u4ef6 \uff08\u81ea\u52a8\u9009\u62e9\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08MODEL_CONFIG.[<code>MODEL_ITEM</code>]_INIT_URL\uff09 init-url \u521d\u59cb\u6a21\u578b\u4f4d\u7f6e\u7684 URL - RatioConfig CR\uff08\u5355\u9879\uff1adefault\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08CORE_USAGE_METRIC\uff09 core_metric \u901a\u8fc7\u6bd4\u4f8b\u5efa\u6a21\u6307\u5b9a\u8ba1\u7b97\u6838\u5fc3\uff08\u4e3b\u8981\u662f cpu\uff09\u7ec4\u4ef6\u7684 Pod \u529f\u7387\u6307\u6807 cpu_instr Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08DRAM_USAGE_METRIC\uff09 dram_metric \u901a\u8fc7\u6bd4\u4f8b\u5efa\u6a21\u6307\u5b9a\u8ba1\u7b97 dram \u7ec4\u4ef6\u7684 Pod \u529f\u7387\u6307\u6807 cache_miss Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08UNCORE_USAGE_METRIC\uff09 uncore_metric \u901a\u8fc7\u6bd4\u4f8b\u5efa\u6a21\u6307\u5b9a\u8ba1\u7b97\u975e\u5185\u6838\u7ec4\u4ef6\u7684 Pod \u529f\u7387\u6307\u6807 \uff08\u5e73\u5747\u5206\u914d\uff09 Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08GENERAL_USAGE_METRIC\uff09 general_metric \u901a\u8fc7\u6bd4\u4f8b\u5efa\u6a21\u6307\u5b9a\u8ba1\u7b97\u672a\u5206\u7c7b\u7ec4\u4ef6\uff08pkg-core-uncore\uff09\u7684 Pod \u529f\u7387\u6307\u6807 cpu_instr Kepler DaemonSet \u73af\u5883\u53d8\u91cf\uff08GPU_USAGE_METRIC\uff09 core_metric \u901a\u8fc7\u6bd4\u4f8b\u5efa\u6a21\u6307\u5b9a\u8ba1\u7b97 gpu \u7ec4\u4ef6\u7684 Pod \u529f\u7387\u6307\u6807 - <p>\u5907\u6ce8\uff1a</p> <ul> <li>[<code>MODEL_ITEM</code>] \u53ef\u4ee5\u662f\u4ee5\u4e0b\u4e0e\u9879\u76ee\u540d\u79f0\u5bf9\u5e94\u7684\u503c\u4e4b\u4e00\uff1a<code>NODE_TOTAL</code>\u3001<code>NODE_COMPONENT</code>\u3001<code>POD_TOTAL</code>\u3001<code>POD_COMPONENTS</code>\u3002</li> <li>[<code>MODEL_TYPE</code>] \u662f [<code>MODEL_ITEM</code>] \u548c [<code>OUTPUT_FORMAT</code>] \u7684\u8fde\u63a5\uff0c\u53ef\u4ee5\u662f\u7528\u4e8e\u5b58\u6863\u6a21\u578b\u7684 <code>POWER</code> \u6216\u7528\u4e8e json \u4e2d\u6743\u91cd\u7684 <code>MODEL_WEIGHT</code>\u3002</li> </ul> <p>\u4f8b\u5982\uff1a</p> <ul> <li><code>NODE_TOTAL_POWER</code>\uff1a\u4f30\u7b97\u5668\u8fb9\u8f66\u7528\u4e8e\u4f30\u7b97\u8282\u70b9\u603b\u529f\u7387\u7684\u5b58\u6863\u6a21\u578b</li> <li><code>POD_COMPONENTS_MODEL_WEIGHT</code>\uff1aKepler \u4e3b\u7ec4\u4ef6\u4e2d\u5d4c\u5165\u7684\u7ebf\u6027\u56de\u5f52\u5668\u7528\u4e8e\u4f30\u7b97 Pod \u7ec4\u4ef6\u529f\u7387\u7684\u6a21\u578b\u6743\u91cd\u3002</li> </ul>"},{"location":"zh/archive/usage/kepler_daemon/","title":"Kepler DaemonSet \u81ea\u5b9a\u4e49","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler \u542f\u7528\u4e86\u4e00\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u6df7\u5408\u4ece\u5c5e\u6027\u76f4\u63a5\uff08container.env\uff09\u548c\u4ece ConfigMap \u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u5b89\u88c5\u4e86\u64cd\u4f5c\u5668\uff0c\u6240\u6709\u6b65\u9aa4\u90fd\u5c06\u7531 Kepler Operator \u64cd\u4f5c\u3002</p> <p>\u901a\u8fc7 ConfigMap \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a</p> <ol> <li> <p>\u521b\u5efa/\u751f\u6210 ConfigMap</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kepler-cfm\n  namespace: kepler-system\ndata:\n  MODEL_SERVER_ENABLE: true\n  COUNTER_METRICS: '*'\n  BPF_METRICS: '*'\n  # KUBELET_METRICS: ''\n  # GPU_METRICS: ''\n  PERF_METRICS: '*'\n  MODEL_CONFIG: |\n    POD_COMPONENT_ESTIMATOR=true\n    POD_COMPONENT_INIT_URL=https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models/DynComponentPower/CgroupOnly/ScikitMixed.zip\n</code></pre> </li> <li> <p>\u5c06 ConfigMap \u6302\u8f7d\u5230 DaemonSet\uff1a</p> <pre><code>  spec:\n    containers:\n      - name: kepler-exporter\n        volumeMounts:\n        - name: cfm\n          mountPath: /etc/config\n          readOnly: true\n      volumes:\n      - name: cfm\n        configMap:\n          name: kepler-cfm\n</code></pre> </li> </ol>"},{"location":"zh/archive/usage/trouble_shooting/","title":"\u6545\u969c\u6392\u9664","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/archive/usage/trouble_shooting/#kepler-pod","title":"Kepler Pod \u542f\u52a8\u5931\u8d25","text":""},{"location":"zh/archive/usage/trouble_shooting/#_2","title":"\u80cc\u666f","text":"<p>Kepler \u4f7f\u7528 eBPF \u83b7\u53d6\u6027\u80fd\u8ba1\u6570\u5668\u8bfb\u6570\u548c\u8fdb\u7a0b\u7edf\u8ba1\u4fe1\u606f\u3002\u7531\u4e8e eBPF \u9700\u8981\u5185\u6838\u5934\u6587\u4ef6\uff0c \u5f53\u5185\u6838\u5934\u6587\u4ef6\u7f3a\u5931\u65f6\uff0cKepler \u5c06\u65e0\u6cd5\u542f\u52a8\u3002</p>"},{"location":"zh/archive/usage/trouble_shooting/#_3","title":"\u8bca\u65ad","text":"<p>\u8981\u786e\u8ba4\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5 Kepler Pod \u65e5\u5fd7\u5e76\u67e5\u627e\u6d88\u606f <code>not able to load eBPF modules</code>\u3002</p> <pre><code>kubectl logs -n kepler daemonset/kepler-exporter\n</code></pre>"},{"location":"zh/archive/usage/trouble_shooting/#_4","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u624b\u52a8\u5b89\u88c5\u5185\u6838\u5934\u6587\u4ef6</p> <pre><code># \u57fa\u4e8e Fedora/RHEL \u7684\u53d1\u884c\u7248\ndnf install kernel-devel-`uname -r` -y\n# Debian/Ubuntu \u53d1\u884c\u7248\napt install linux-headers-$(uname -r)\n</code></pre> <p>\u5728 OpenShift \u4e0a\uff0c\u5b89\u88c5\u8fd9\u91cc\u7684 MachineConfiguration</p>"},{"location":"zh/kepler/design/metrics/","title":"Kepler \u6307\u6807","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6587\u6863\u63cf\u8ff0\u4e86 Kepler \u5bfc\u51fa\u7684\u6307\u6807\uff0c\u7528\u4e8e\u76d1\u63a7\u5404\u4e2a\u7ea7\u522b\uff08\u8282\u70b9\u3001\u5bb9\u5668\u3001\u8fdb\u7a0b\u3001\u865a\u62df\u673a\uff09\u7684\u80fd\u8017\u3002</p>"},{"location":"zh/kepler/design/metrics/#_1","title":"\u6982\u8ff0","text":"<p>Kepler \u4ee5 Prometheus \u683c\u5f0f\u5bfc\u51fa\u6307\u6807\uff0c\u53ef\u4ee5\u88ab Prometheus \u6216\u5176\u4ed6\u517c\u5bb9\u7684\u76d1\u63a7\u7cfb\u7edf\u6293\u53d6\u3002</p>"},{"location":"zh/kepler/design/metrics/#_2","title":"\u6307\u6807\u7c7b\u578b","text":"<ul> <li>COUNTER\uff1a\u968f\u65f6\u95f4\u53ea\u589e\u52a0\u7684\u7d2f\u79ef\u6307\u6807</li> <li>GAUGE\uff1a\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u7684\u6307\u6807</li> </ul>"},{"location":"zh/kepler/design/metrics/#_3","title":"\u6307\u6807\u53c2\u8003","text":""},{"location":"zh/kepler/design/metrics/#_4","title":"\u8282\u70b9\u6307\u6807","text":"<p>\u8fd9\u4e9b\u6307\u6807\u5728\u8282\u70b9\u7ea7\u522b\u63d0\u4f9b\u80fd\u91cf\u548c\u529f\u7387\u4fe1\u606f\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_active_joules_total","title":"kepler_node_cpu_active_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u5728\u6d3b\u52a8\u72b6\u6001\u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_active_watts","title":"kepler_node_cpu_active_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u5728\u6d3b\u52a8\u72b6\u6001\u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_idle_joules_total","title":"kepler_node_cpu_idle_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u5728\u7a7a\u95f2\u72b6\u6001\u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_idle_watts","title":"kepler_node_cpu_idle_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u5728\u7a7a\u95f2\u72b6\u6001\u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_info","title":"kepler_node_cpu_info","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u6765\u81ea procfs \u7684 CPU \u4fe1\u606f</li> <li>\u6807\u7b7e\uff1a</li> <li><code>processor</code></li> <li><code>vendor_id</code></li> <li><code>model_name</code></li> <li><code>physical_id</code></li> <li><code>core_id</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_joules_total","title":"kepler_node_cpu_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_usage_ratio","title":"kepler_node_cpu_usage_ratio","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff08\u503c\u5728 0.0 \u548c 1.0 \u4e4b\u95f4\uff09</li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_node_cpu_watts","title":"kepler_node_cpu_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u8282\u70b9\u7ea7\u522b CPU \u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>zone</code></li> <li><code>path</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#_5","title":"\u5bb9\u5668\u6307\u6807","text":"<p>\u8fd9\u4e9b\u6307\u6807\u4e3a\u5bb9\u5668\u63d0\u4f9b\u80fd\u91cf\u548c\u529f\u7387\u4fe1\u606f\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_container_cpu_joules_total","title":"kepler_container_cpu_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u5bb9\u5668\u7ea7\u522b CPU \u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>container_id</code></li> <li><code>container_name</code></li> <li><code>runtime</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li><code>pod_id</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_container_cpu_watts","title":"kepler_container_cpu_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u5bb9\u5668\u7ea7\u522b CPU \u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>container_id</code></li> <li><code>container_name</code></li> <li><code>runtime</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li><code>pod_id</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#_6","title":"\u8fdb\u7a0b\u6307\u6807","text":"<p>\u8fd9\u4e9b\u6307\u6807\u4e3a\u5355\u4e2a\u8fdb\u7a0b\u63d0\u4f9b\u80fd\u91cf\u548c\u529f\u7387\u4fe1\u606f\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_process_cpu_joules_total","title":"kepler_process_cpu_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u8fdb\u7a0b\u7ea7\u522b CPU \u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>state</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_process_cpu_seconds_total","title":"kepler_process_cpu_seconds_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u8fdb\u7a0b\u7ea7\u522b CPU \u7684\u603b\u7528\u6237\u548c\u7cfb\u7edf\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2</li> <li>\u6807\u7b7e\uff1a</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_process_cpu_watts","title":"kepler_process_cpu_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u8fdb\u7a0b\u7ea7\u522b CPU \u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>pid</code></li> <li><code>comm</code></li> <li><code>exe</code></li> <li><code>type</code></li> <li><code>state</code></li> <li><code>container_id</code></li> <li><code>vm_id</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#_7","title":"\u865a\u62df\u673a\u6307\u6807","text":"<p>\u8fd9\u4e9b\u6307\u6807\u4e3a\u865a\u62df\u673a\u63d0\u4f9b\u80fd\u91cf\u548c\u529f\u7387\u4fe1\u606f\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_vm_cpu_joules_total","title":"kepler_vm_cpu_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1a\u865a\u62df\u673a\u7ea7\u522b CPU \u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>vm_id</code></li> <li><code>vm_name</code></li> <li><code>hypervisor</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_vm_cpu_watts","title":"kepler_vm_cpu_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u865a\u62df\u673a\u7ea7\u522b CPU \u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>vm_id</code></li> <li><code>vm_name</code></li> <li><code>hypervisor</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#pod","title":"Pod \u6307\u6807","text":"<p>\u8fd9\u4e9b\u6307\u6807\u4e3a Pod \u63d0\u4f9b\u80fd\u91cf\u548c\u529f\u7387\u4fe1\u606f\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_pod_cpu_joules_total","title":"kepler_pod_cpu_joules_total","text":"<ul> <li>\u7c7b\u578b\uff1aCOUNTER</li> <li>\u63cf\u8ff0\uff1aPod \u7ea7\u522b CPU \u7684\u80fd\u8017\uff0c\u5355\u4f4d\u4e3a\u7126\u8033</li> <li>\u6807\u7b7e\uff1a</li> <li><code>pod_id</code></li> <li><code>pod_name</code></li> <li><code>pod_namespace</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#kepler_pod_cpu_watts","title":"kepler_pod_cpu_watts","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1aPod \u7ea7\u522b CPU \u7684\u529f\u8017\uff0c\u5355\u4f4d\u4e3a\u74e6\u7279</li> <li>\u6807\u7b7e\uff1a</li> <li><code>pod_id</code></li> <li><code>pod_name</code></li> <li><code>pod_namespace</code></li> <li><code>state</code></li> <li><code>zone</code></li> <li>\u5e38\u91cf\u6807\u7b7e\uff1a</li> <li><code>node_name</code></li> </ul>"},{"location":"zh/kepler/design/metrics/#_8","title":"\u5176\u4ed6\u6307\u6807","text":"<p>Kepler \u63d0\u4f9b\u7684\u5176\u4ed6\u6307\u6807\u3002</p>"},{"location":"zh/kepler/design/metrics/#kepler_build_info","title":"kepler_build_info","text":"<ul> <li>\u7c7b\u578b\uff1aGAUGE</li> <li>\u63cf\u8ff0\uff1a\u5e26\u6709\u7248\u672c\u4fe1\u606f\u6807\u7b7e\u7684\u5e38\u91cf\u503c\u4e3a '1' \u7684\u6307\u6807</li> <li>\u6807\u7b7e\uff1a</li> <li><code>arch</code></li> <li><code>branch</code></li> <li><code>revision</code></li> <li><code>version</code></li> <li><code>goversion</code></li> </ul> <p>\u672c\u6587\u6863\u7531 gen-metric-docs \u5de5\u5177\u81ea\u52a8\u751f\u6210\u3002</p>"},{"location":"zh/kepler/developer/dev-docs/","title":"\u5f00\u53d1\u8005\u6587\u6863","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/kepler/developer/dev-docs/#_2","title":"\ud83d\udccd \u5f00\u53d1\u8005\u6587\u6863\u4f4d\u7f6e","text":"<p>Kepler \u548c\u76f8\u5173\u9879\u76ee\u7684\u5f00\u53d1\u8005\u6587\u6863\u5728\u6bcf\u4e2a\u9879\u76ee\u7684\u4ed3\u5e93\u4e2d\u7684 <code>docs/developer/</code> \u76ee\u5f55\u4e0b\u7ef4\u62a4\u3002</p>"},{"location":"zh/kepler/developer/dev-docs/#kepler","title":"\ud83d\udd17 Kepler \u5f00\u53d1\u8005\u6587\u6863","text":"<p>\u6709\u5173\u5305\u62ec\u67b6\u6784\u3001\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b\u3001\u6d4b\u8bd5\u7b56\u7565\u548c\u8d21\u732e\u6307\u5357\u5728\u5185\u7684\u5168\u9762\u5f00\u53d1\u8005\u6587\u6863\uff0c\u8bf7\u8bbf\u95ee\uff1a</p> <p>\ud83d\ude80 Kepler \u5f00\u53d1\u8005\u6587\u6863</p>"},{"location":"zh/kepler/developer/dev-docs/#_3","title":"\u60a8\u5c06\u5728\u90a3\u91cc\u627e\u5230\u4ec0\u4e48","text":"<ul> <li>\u67b6\u6784\u6982\u8ff0 - \u9762\u5411\u670d\u52a1\u7684\u8bbe\u8ba1\u6a21\u5f0f\u548c\u7ec4\u4ef6\u7ed3\u6784</li> <li>\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e - Docker Compose\u3001\u672c\u5730\u6784\u5efa\u548c\u6d4b\u8bd5</li> <li>\u529f\u7387\u5f52\u56e0\u6307\u5357 - \u6df1\u5165\u4e86\u89e3\u80fd\u91cf\u6d4b\u91cf\u548c\u5f52\u56e0\u7b97\u6cd5</li> <li>Pre-commit Hook - \u4ee3\u7801\u8d28\u91cf\u548c\u81ea\u52a8\u68c0\u67e5\u8bbe\u7f6e</li> <li>\u53d1\u5e03\u5de5\u4f5c\u6d41\u7a0b - \u5982\u4f55\u521b\u5efa\u548c\u7ba1\u7406\u53d1\u5e03\u7248\u672c</li> <li>\u6d4b\u8bd5\u7b56\u7565 - \u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u548c\u7ade\u6001\u68c0\u6d4b</li> <li>\u670d\u52a1\u63a5\u53e3 - \u7406\u89e3\u670d\u52a1\u6846\u67b6\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406</li> <li>\u914d\u7f6e\u7ba1\u7406 - YAML \u5c42\u6b21\u7ed3\u6784\u548c CLI \u6807\u5fd7\u7cfb\u7edf</li> </ul>"},{"location":"zh/kepler/developer/dev-docs/#_4","title":"\ud83d\udee0\ufe0f \u5feb\u901f\u5f00\u53d1\u8005\u8bbe\u7f6e","text":"<p>\u5bf9\u4e8e\u5373\u65f6\u5f00\u53d1\u8bbe\u7f6e\uff0c\u5173\u952e\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code># \u514b\u9686\u548c\u6784\u5efa\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\nmake build\n\n# \u4f7f\u7528 Docker Compose \u5f00\u53d1\uff08\u5305\u62ec Grafana + Prometheus\uff09\ncd compose/dev\ndocker compose up -d\n\n# \u8fd0\u884c\u6d4b\u8bd5\nmake test\n\n# \u672c\u5730\u5f00\u53d1\nsudo ./bin/kepler --config.file hack/config.yaml\n</code></pre>"},{"location":"zh/kepler/developer/dev-docs/#_5","title":"\ud83d\udcda \u76f8\u5173\u9879\u76ee\u6587\u6863","text":"<p>\u5bf9\u4e8e Kepler \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u9879\u76ee\uff0c\u8bf7\u67e5\u770b\u5176\u5404\u81ea\u7684\u4ed3\u5e93\uff1a</p> <ul> <li>Kepler Operator: sustainable-computing-io/kepler-operator</li> <li>Kepler Model Server: sustainable-computing-io/kepler-model-server</li> </ul>"},{"location":"zh/kepler/developer/dev-docs/#_6","title":"\ud83e\udd1d \u8d21\u732e","text":"<p>\u5728\u4e3a Kepler \u8d21\u732e\u4e4b\u524d\uff0c\u8bf7\u67e5\u770b\uff1a</p> <ol> <li>\u5f00\u53d1\u8005\u6587\u6863 - \u6280\u672f\u5b9e\u73b0\u7ec6\u8282</li> <li>\u8d21\u732e\u6307\u5357 - \u4e00\u822c\u8d21\u732e\u6d41\u7a0b</li> <li>\u884c\u4e3a\u51c6\u5219 - \u793e\u533a\u51c6\u5219</li> </ol>"},{"location":"zh/kepler/developer/dev-docs/#_7","title":"\ud83d\udcac \u5f00\u53d1\u8005\u652f\u6301","text":"<ul> <li>GitHub Issues: \u62a5\u544a\u9519\u8bef\u6216\u8bf7\u6c42\u529f\u80fd</li> <li>GitHub Discussions: \u63d0\u95ee\u548c\u5206\u4eab\u60f3\u6cd5</li> <li>Slack \u9891\u9053: CNCF Slack \u4e2d\u7684 #kepler</li> <li>\u793e\u533a\u4f1a\u8bae\u5f55\u50cf:</li> <li>youtube</li> <li>bilibili, \u5982\u679c\u4f60\u6ca1\u6709Youtube\u8bbf\u95ee\u65b9\u5f0f</li> </ul> <p>\u5f00\u53d1\u8005\u6587\u6863\u5728\u9879\u76ee\u4ed3\u5e93\u4e2d\u79ef\u6781\u7ef4\u62a4\uff0c\u4ee5\u786e\u4fdd\u4e0e\u4ee3\u7801\u5e93\u4fdd\u6301\u540c\u6b65\u3002</p>"},{"location":"zh/kepler/installation/guide/","title":"Kepler \u5b89\u88c5\u6307\u5357","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u6db5\u76d6\u4e86\u5b89\u88c5\u548c\u8fd0\u884c Kepler\uff08\u57fa\u4e8e Kubernetes \u7684\u9ad8\u6548\u529f\u7387\u7ea7\u522b\u5bfc\u51fa\u5668\uff09\u4ee5\u76d1\u63a7\u80fd\u8017\u6307\u6807\u7684\u4e0d\u540c\u65b9\u6cd5\u3002</p>"},{"location":"zh/kepler/installation/guide/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<ul> <li>\u672c\u5730\u5b89\u88c5\uff1aGo 1.21+ \u548c sudo \u6743\u9650\u4ee5\u8bbf\u95ee\u786c\u4ef6\u4f20\u611f\u5668</li> <li>Kubernetes\uff1aKubernetes \u96c6\u7fa4\uff08v1.20+\uff09\u4e14\u5df2\u914d\u7f6e kubectl</li> <li>Helm\uff1a\u5df2\u5b89\u88c5 Helm 3.0+</li> </ul>"},{"location":"zh/kepler/installation/guide/#_2","title":"\u5b89\u88c5\u65b9\u6cd5","text":""},{"location":"zh/kepler/installation/guide/#1-helm-chart-kubernetes","title":"1. Helm Chart \u5b89\u88c5\uff08\u63a8\u8350\u7528\u4e8e Kubernetes\uff09","text":""},{"location":"zh/kepler/installation/guide/#helm","title":"Helm \u5148\u51b3\u6761\u4ef6","text":"<ul> <li>Helm 3.0+</li> <li>\u5df2\u914d\u7f6e kubectl \u7684 Kubernetes \u96c6\u7fa4</li> </ul>"},{"location":"zh/kepler/installation/guide/#_3","title":"\u4ece\u53d1\u5e03\u7248\u5b89\u88c5\uff08\u63a8\u8350\uff09","text":"<pre><code># \u4ece GitHub \u53d1\u5e03\u7248\u5b89\u88c5\uff08\u5c06 VERSION \u66ff\u6362\u4e3a\u6240\u9700\u7248\u672c\uff0c\u4f8b\u5982 v0.10.2\uff09\nhelm install kepler \\\n  https://github.com/sustainable-computing-io/kepler/releases/download/VERSION/kepler-helm-VERSION.tgz \\\n  --namespace kepler \\\n  --create-namespace\n\n# \u6307\u5b9a\u7248\u672c\u7684\u793a\u4f8b\uff1a\n# helm install kepler \\\n#   https://github.com/sustainable-computing-io/kepler/releases/download/v0.10.2/kepler-helm-0.10.2.tgz \\\n#   --namespace kepler \\\n#   --create-namespace\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_4","title":"\u4ece\u6e90\u7801\u5b89\u88c5","text":"<pre><code># \u514b\u9686\u4ed3\u5e93\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\n\n# \u4f7f\u7528 Helm \u5b89\u88c5 Kepler\nhelm install kepler manifests/helm/kepler/ \\\n  --namespace kepler \\\n  --create-namespace \\\n  --set namespace.create=false\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_5","title":"\u81ea\u5b9a\u4e49\u5b89\u88c5","text":"<p>\u521b\u5efa <code>values.yaml</code> \u6587\u4ef6\u6765\u81ea\u5b9a\u4e49\u5b89\u88c5\uff1a</p> <pre><code># values.yaml\nimage:\n  repository: quay.io/sustainable_computing_io/kepler\n  tag: \"v0.10.0\"\n  pullPolicy: IfNotPresent\n\nresources:\n  limits:\n    cpu: 100m\n    memory: 400Mi\n  requests:\n    cpu: 100m\n    memory: 200Mi\n\ntolerations:\n  - operator: Exists\n\nnodeSelector:\n  kubernetes.io/os: linux\n\n# \u4e3a Prometheus \u542f\u7528 ServiceMonitor\nserviceMonitor:\n  enabled: true\n  interval: 30s\n</code></pre> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u503c\u5b89\u88c5\uff1a</p> <pre><code>helm install kepler manifests/helm/kepler/ \\\n  --namespace kepler \\\n  --create-namespace \\\n  --set namespace.create=false \\\n  --values values.yaml\n</code></pre>"},{"location":"zh/kepler/installation/guide/#helm_1","title":"Helm \u7ba1\u7406\u547d\u4ee4","text":"<pre><code># \u68c0\u67e5\u5b89\u88c5\u72b6\u6001\nhelm status kepler -n kepler\n\n# \u5217\u51fa\u53d1\u5e03\u7248\nhelm list -n kepler\n\n# \u5347\u7ea7\u53d1\u5e03\u7248\nhelm upgrade kepler manifests/helm/kepler/ -n kepler\n\n# \u5378\u8f7d\nhelm uninstall kepler -n kepler\n</code></pre>"},{"location":"zh/kepler/installation/guide/#2","title":"2. \u672c\u5730\u5b89\u88c5","text":""},{"location":"zh/kepler/installation/guide/#_6","title":"\u4ece\u6e90\u7801\u6784\u5efa","text":"<pre><code># \u514b\u9686\u4ed3\u5e93\ngit clone https://github.com/sustainable-computing-io/kepler.git\ncd kepler\n\n# \u6784\u5efa Kepler\nmake build\n\n# \u8fd0\u884c Kepler\uff08\u9700\u8981 sudo \u6743\u9650\u8bbf\u95ee\u786c\u4ef6\uff09\nsudo ./bin/kepler --config.file hack/config.yaml\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_7","title":"\u914d\u7f6e","text":"<p>Kepler \u53ef\u4ee5\u4f7f\u7528 YAML \u6587\u4ef6\u6216 CLI \u6807\u5fd7\u8fdb\u884c\u914d\u7f6e\u3002\u9ed8\u8ba4\u914d\u7f6e\u5728 <code>hack/config.yaml</code> \u4e2d\uff1a</p> <pre><code># \u4f7f\u7528\u81ea\u5b9a\u4e49\u914d\u7f6e\u8fd0\u884c\nsudo ./bin/kepler --config.file /path/to/your/config.yaml\n\n# \u4f7f\u7528 CLI \u6807\u5fd7\u8fd0\u884c\nsudo ./bin/kepler --log.level=debug --exporter.stdout\n</code></pre> <p>\u8bbf\u95ee\u7aef\u70b9\uff1a</p> <ul> <li>\u6307\u6807\uff1ahttp://localhost:28282/metrics</li> </ul>"},{"location":"zh/kepler/installation/guide/#3-docker-compose","title":"3. Docker Compose\uff08\u63a8\u8350\u7528\u4e8e\u5f00\u53d1\uff09","text":"<p>Docker Compose \u8bbe\u7f6e\u63d0\u4f9b\u4e86\u5305\u542b Kepler\u3001Prometheus \u548c Grafana \u7684\u5b8c\u6574\u76d1\u63a7\u5806\u6808\uff1a</p> <pre><code>cd compose/dev\n\n# \u542f\u52a8\u5b8c\u6574\u5806\u6808\ndocker compose up -d\n\n# \u67e5\u770b\u65e5\u5fd7\ndocker compose logs -f kepler\n\n# \u505c\u6b62\u5806\u6808\ndocker compose down\n</code></pre> <p>\u8bbf\u95ee\u7aef\u70b9\uff1a</p> <ul> <li>Kepler \u6307\u6807\uff1ahttp://localhost:28283/metrics</li> <li>Prometheus\uff1ahttp://localhost:29090</li> <li>Grafana\uff1ahttp://localhost:23000\uff08admin/admin\uff09</li> </ul>"},{"location":"zh/kepler/installation/guide/#4-kustomize-kubernetes","title":"4. \u4f7f\u7528 Kustomize \u7684 Kubernetes","text":""},{"location":"zh/kepler/installation/guide/#kind","title":"\u4f7f\u7528 Kind \u5feb\u901f\u8bbe\u7f6e","text":"<pre><code># \u521b\u5efa\u5e26\u76d1\u63a7\u5806\u6808\u7684\u672c\u5730\u96c6\u7fa4\nmake cluster-up\n\n# \u90e8\u7f72 Kepler\nmake deploy\n\n# \u6e05\u7406\nmake cluster-down\n</code></pre>"},{"location":"zh/kepler/installation/guide/#kubernetes","title":"\u624b\u52a8 Kubernetes \u90e8\u7f72","text":"<pre><code># \u4f7f\u7528 kustomize \u90e8\u7f72\nkubectl kustomize manifests/k8s | \\\n  sed -e \"s|&lt;KEPLER_IMAGE&gt;|quay.io/sustainable_computing_io/kepler:latest|g\" | \\\n  kubectl apply --server-side --force-conflicts -f -\n\n# \u68c0\u67e5\u90e8\u7f72\u72b6\u6001\nkubectl get pods -n kepler\n\n# \u8bbf\u95ee\u6307\u6807\uff08\u7aef\u53e3\u8f6c\u53d1\uff09\nkubectl port-forward -n kepler svc/kepler 28282:28282\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_8","title":"\u81ea\u5b9a\u4e49\u955c\u50cf\u90e8\u7f72","text":"<pre><code># \u6784\u5efa\u5e76\u63a8\u9001\u81ea\u5b9a\u4e49\u955c\u50cf\nmake image push IMG_BASE=your-registry.com/yourorg VERSION=v1.0.0\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u955c\u50cf\u90e8\u7f72\nmake deploy IMG_BASE=your-registry.com/yourorg VERSION=v1.0.0\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_9","title":"\u9a8c\u8bc1","text":""},{"location":"zh/kepler/installation/guide/#_10","title":"\u68c0\u67e5\u90e8\u7f72\u72b6\u6001","text":"<pre><code># \u68c0\u67e5 Pod\nkubectl get pods -n kepler\n\n# \u68c0\u67e5 DaemonSet\nkubectl get daemonset -n kepler\n\n# \u68c0\u67e5\u670d\u52a1\nkubectl get svc -n kepler\n\n# \u67e5\u770b\u65e5\u5fd7\nkubectl logs -n kepler -l app.kubernetes.io/name=kepler\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_11","title":"\u8bbf\u95ee\u6307\u6807","text":"<pre><code># \u7aef\u53e3\u8f6c\u53d1\u4ee5\u672c\u5730\u8bbf\u95ee\u6307\u6807\nkubectl port-forward -n kepler svc/kepler 28282:28282\n\n# \u6d4b\u8bd5\u6307\u6807\u7aef\u70b9\ncurl http://localhost:28282/metrics\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_12","title":"\u9a8c\u8bc1\u6307\u6807\u6536\u96c6","text":"<p>\u67e5\u627e\u5173\u952e\u6307\u6807\uff0c\u5982\uff1a</p> <ul> <li><code>kepler_node_cpu_watts</code></li> <li><code>kepler_container_cpu_watts</code></li> <li><code>kepler_process_cpu_watts</code></li> </ul>"},{"location":"zh/kepler/installation/guide/#_13","title":"\u914d\u7f6e\u9009\u9879","text":""},{"location":"zh/kepler/installation/guide/#helm-chart","title":"Helm Chart \u503c","text":"<p><code>values.yaml</code> \u4e2d\u7684\u5173\u952e\u914d\u7f6e\u9009\u9879\uff1a</p> <pre><code># \u955c\u50cf\u914d\u7f6e\nimage:\n  repository: quay.io/sustainable_computing_io/kepler\n  tag: \"latest\"\n  pullPolicy: IfNotPresent\n\n# DaemonSet \u914d\u7f6e\ndaemonset:\n  hostPID: true\n  securityContext:\n    privileged: true\n\n# \u8d44\u6e90\u9650\u5236\nresources:\n  limits:\n    cpu: 100m\n    memory: 400Mi\n  requests:\n    cpu: 100m\n    memory: 200Mi\n\n# \u8282\u70b9\u8c03\u5ea6\ntolerations:\n  - operator: Exists\n\nnodeSelector:\n  kubernetes.io/os: linux\n\n# \u76d1\u63a7\nserviceMonitor:\n  enabled: true\n  interval: 30s\n  scrapeTimeout: 10s\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_14","title":"\u73af\u5883\u7279\u5b9a\u8bbe\u7f6e","text":"<ul> <li>\u5f00\u53d1\uff1a\u5728 RAPL \u4e0d\u53ef\u7528\u65f6\u4f7f\u7528\u5047 CPU \u8ba1\u91cf\u5668</li> <li>\u751f\u4ea7\uff1a\u786e\u4fdd\u8282\u70b9\u652f\u6301 Intel RAPL</li> <li>\u4e91\u7aef\uff1a\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u6743\u9650\u914d\u7f6e</li> </ul>"},{"location":"zh/kepler/installation/guide/#_15","title":"\u6545\u969c\u6392\u9664","text":""},{"location":"zh/kepler/installation/guide/#_16","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u6743\u9650\u88ab\u62d2\u7edd\uff1a\u786e\u4fdd\u542f\u7528\u4e86\u7279\u6743\u5b89\u5168\u4e0a\u4e0b\u6587</li> <li>\u65e0\u6307\u6807\uff1a\u68c0\u67e5\u8282\u70b9\u662f\u5426\u652f\u6301 Intel RAPL \u4f20\u611f\u5668</li> <li>Pod \u5d29\u6e83\uff1a\u67e5\u770b\u65e5\u5fd7\u4e86\u89e3\u786c\u4ef6\u8bbf\u95ee\u95ee\u9898</li> <li>\u627e\u4e0d\u5230 ServiceMonitor\uff1a\u786e\u4fdd\u5df2\u5b89\u88c5 Prometheus Operator</li> </ol>"},{"location":"zh/kepler/installation/guide/#_17","title":"\u8c03\u8bd5\u547d\u4ee4","text":"<pre><code># \u68c0\u67e5 Pod \u65e5\u5fd7\nkubectl logs -n kepler -l app.kubernetes.io/name=kepler\n\n# \u63cf\u8ff0 Pod \u4ee5\u67e5\u770b\u4e8b\u4ef6\nkubectl describe pod -n kepler -l app.kubernetes.io/name=kepler\n\n# \u68c0\u67e5\u8282\u70b9\u786c\u4ef6\nkubectl exec -n kepler -it &lt;pod-name&gt; -- ls /sys/class/powercap/intel-rapl\n\n# \u4f7f\u7528\u5047\u8ba1\u91cf\u5668\u8fdb\u884c\u6d4b\u8bd5\uff08\u5f00\u53d1\uff09\nhelm upgrade kepler manifests/helm/kepler/ -n kepler \\\n  --set env.KEPLER_FAKE_CPU_METER=true\n</code></pre>"},{"location":"zh/kepler/installation/guide/#_18","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>\u6587\u6863\uff1ahttps://sustainable-computing.io/kepler/</li> <li>\u95ee\u9898\uff1ahttps://github.com/sustainable-computing-io/kepler/issues</li> <li>\u8ba8\u8bba\uff1ahttps://github.com/sustainable-computing-io/kepler/discussions</li> <li>Slack\uff1aCNCF Slack \u4e2d\u7684 #kepler \u9891\u9053</li> </ul>"},{"location":"zh/kepler/installation/guide/#_19","title":"\u540e\u7eed\u6b65\u9aa4","text":"<p>\u6210\u529f\u5b89\u88c5\u540e\uff1a</p> <ol> <li>\u8bbe\u7f6e Prometheus\uff1a\u914d\u7f6e Kepler \u6307\u6807\u6293\u53d6</li> <li>\u5b89\u88c5 Grafana\uff1a\u4f7f\u7528\u9884\u6784\u5efa\u7684\u4eea\u8868\u677f\u8fdb\u884c\u53ef\u89c6\u5316</li> <li>\u914d\u7f6e\u544a\u8b66\uff1a\u8bbe\u7f6e\u80fd\u8017\u544a\u8b66</li> <li>\u63a2\u7d22\u6307\u6807\uff1a\u4e86\u89e3\u53ef\u7528\u7684\u80fd\u8017\u6307\u6807</li> <li>\u4f18\u5316\u5de5\u4f5c\u8d1f\u8f7d\uff1a\u4f7f\u7528\u6d1e\u5bdf\u6765\u63d0\u9ad8\u80fd\u6548</li> </ol>"},{"location":"zh/kepler/usage/configuration/","title":"\u2699\ufe0f Kepler \u914d\u7f6e\u6307\u5357","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>Kepler \u652f\u6301\u901a\u8fc7\u547d\u4ee4\u884c\u6807\u5fd7\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\u672c\u6307\u5357\u6982\u8ff0\u4e86\u914d\u7f6e Kepler \u7684\u6240\u6709\u53ef\u7528\u914d\u7f6e\u9009\u9879\u3002</p>"},{"location":"zh/kepler/usage/configuration/#_1","title":"\ud83d\udee0\ufe0f \u914d\u7f6e\u65b9\u6cd5","text":"<p>Kepler \u652f\u6301\u4e24\u79cd\u4e3b\u8981\u7684\u914d\u7f6e\u65b9\u6cd5\uff1a</p> <ol> <li>\u547d\u4ee4\u884c\u6807\u5fd7\uff1a\u7528\u4e8e\u5feb\u901f\u8c03\u6574\u548c\u4e00\u6b21\u6027\u8bbe\u7f6e</li> <li>\u914d\u7f6e\u6587\u4ef6\uff1a\u7528\u4e8e\u6301\u4e45\u548c\u5168\u9762\u7684\u914d\u7f6e</li> </ol> <p>\u26a1 \u63d0\u793a\uff1a \u5f53\u540c\u65f6\u6307\u5b9a\u547d\u4ee4\u884c\u6807\u5fd7\u548c\u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e\u65f6\uff0c\u547d\u4ee4\u884c\u6807\u5fd7\u4f18\u5148\u3002</p>"},{"location":"zh/kepler/usage/configuration/#_2","title":"\ud83d\udda5\ufe0f \u547d\u4ee4\u884c\u6807\u5fd7","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u542f\u52a8\u670d\u52a1\u65f6\u4f20\u9012\u6807\u5fd7\u6765\u914d\u7f6e Kepler\u3002\u4ee5\u4e0b\u6807\u5fd7\u53ef\u7528\uff1a</p> \u6807\u5fd7 \u63cf\u8ff0 \u9ed8\u8ba4\u503c \u503c <code>--config.file</code> YAML \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 \u4efb\u4f55\u6709\u6548\u7684\u6587\u4ef6\u8def\u5f84 <code>--log.level</code> \u65e5\u5fd7\u7ea7\u522b <code>info</code> <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code> <code>--log.format</code> \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f <code>text</code> <code>text</code>, <code>json</code> <code>--host.sysfs</code> sysfs \u6587\u4ef6\u7cfb\u7edf\u8def\u5f84 <code>/sys</code> \u4efb\u4f55\u6709\u6548\u7684\u76ee\u5f55\u8def\u5f84 <code>--host.procfs</code> procfs \u6587\u4ef6\u7cfb\u7edf\u8def\u5f84 <code>/proc</code> \u4efb\u4f55\u6709\u6548\u7684\u76ee\u5f55\u8def\u5f84 <code>--monitor.interval</code> \u76d1\u63a7\u5237\u65b0\u95f4\u9694 <code>5s</code> \u4efb\u4f55\u6709\u6548\u7684\u6301\u7eed\u65f6\u95f4 <code>--monitor.max-terminated</code> \u5728\u5bfc\u51fa\u524d\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6700\u5927\u6570\u91cf <code>500</code> \u8d1f\u6570\u8868\u793a <code>unlimited</code>\uff0c<code>0</code> \u7981\u7528\u6b64\u529f\u80fd <code>--web.config-file</code> TLS \u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 <code>\"\"</code> \u4efb\u4f55\u6709\u6548\u7684\u6587\u4ef6\u8def\u5f84 <code>--web.listen-address</code> Web \u670d\u52a1\u5668\u76d1\u542c\u5730\u5740\uff08\u53ef\u591a\u6b21\u6307\u5b9a\uff09 <code>:28282</code> \u4efb\u4f55\u6709\u6548\u7684 host:port \u6216 :port \u683c\u5f0f <code>--debug.pprof</code> \u542f\u7528 pprof \u8c03\u8bd5\u7aef\u70b9 <code>false</code> <code>true</code>, <code>false</code> <code>--exporter.stdout</code> \u542f\u7528 stdout \u5bfc\u51fa\u5668 <code>false</code> <code>true</code>, <code>false</code> <code>--exporter.prometheus</code> \u542f\u7528 Prometheus \u5bfc\u51fa\u5668 <code>true</code> <code>true</code>, <code>false</code> <code>--metrics</code> \u8981\u5bfc\u51fa\u7684\u6307\u6807\u7ea7\u522b\uff08\u53ef\u591a\u6b21\u6307\u5b9a\uff09 <code>node,process,container,vm,pod</code> <code>node</code>, <code>process</code>, <code>container</code>, <code>vm</code>, <code>pod</code> <code>--kube.enable</code> \u76d1\u63a7 kubernetes <code>false</code> <code>true</code>, <code>false</code> <code>--kube.config</code> kubeconfig \u6587\u4ef6\u8def\u5f84 <code>\"\"</code> \u4efb\u4f55\u6709\u6548\u7684\u6587\u4ef6\u8def\u5f84 <code>--kube.node-name</code> \u8fd0\u884c kepler \u7684 kubernetes \u8282\u70b9\u540d\u79f0 <code>\"\"</code> \u4efb\u4f55\u6709\u6548\u7684\u8282\u70b9\u540d\u79f0"},{"location":"zh/kepler/usage/configuration/#_3","title":"\ud83d\udca1 \u793a\u4f8b","text":"<pre><code># \u4f7f\u7528\u8c03\u8bd5\u65e5\u5fd7\u7ea7\u522b\u8fd0\u884c\nkepler --log.level=debug\n\n# \u4f7f\u7528\u4e0d\u540c\u7684 procfs \u8def\u5f84\u548c JSON \u65e5\u5fd7\nkepler --host.procfs=/custom/proc --log.format=json\n\n# \u4ece\u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\nkepler --config.file=/path/to/config.yaml\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u76d1\u542c\u5730\u5740\nkepler --web.listen-address=:8080 --web.listen-address=localhost:9090\n\n# \u542f\u7528 stdout \u5bfc\u51fa\u5668\u5e76\u7981\u7528 Prometheus \u5bfc\u51fa\u5668\nkepler --exporter.stdout=true --exporter.prometheus=false\n\n# \u542f\u7528 Kubernetes \u76d1\u63a7\u5e76\u6307\u5b9a kubeconfig \u548c\u8282\u70b9\u540d\u79f0\nkepler --kube.enable=true --kube.config=/path/to/kubeconfig --kube.node-name=my-node\n\n# \u4ec5\u5bfc\u51fa\u8282\u70b9\u548c\u5bb9\u5668\u7ea7\u522b\u6307\u6807\nkepler --metrics=node --metrics=container\n\n# \u4ec5\u5bfc\u51fa\u8fdb\u7a0b\u7ea7\u522b\u6307\u6807\nkepler --metrics=process\n\n# \u5c06\u6700\u5927\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8bbe\u7f6e\u4e3a 1000\nkepler --monitor.max-terminated=1000\n\n# \u7981\u7528\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\nkepler --monitor.max-terminated=0\n\n# \u65e0\u9650\u5236\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\nkepler --monitor.max-terminated=-1\n</code></pre>"},{"location":"zh/kepler/usage/configuration/#_4","title":"\ud83d\uddc2\ufe0f \u914d\u7f6e\u6587\u4ef6","text":"<p>Kepler \u53ef\u4ee5\u4ece YAML \u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\u3002\u914d\u7f6e\u6587\u4ef6\u63d0\u4f9b\u6bd4\u547d\u4ee4\u884c\u6807\u5fd7\u66f4\u5e7f\u6cdb\u7684\u9009\u9879\u3002</p>"},{"location":"zh/kepler/usage/configuration/#_5","title":"\ud83e\uddfe \u793a\u4f8b\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>log:\n  level: debug  # debug, info, warn, error (\u9ed8\u8ba4: info)\n  format: text  # text \u6216 json (\u9ed8\u8ba4: text)\n\nmonitor:\n  interval: 5s        # \u76d1\u63a7\u5237\u65b0\u95f4\u9694 (\u9ed8\u8ba4: 5s)\n  staleness: 1000ms   # \u6570\u636e\u88ab\u8ba4\u4e3a\u8fc7\u65f6\u7684\u6301\u7eed\u65f6\u95f4 (\u9ed8\u8ba4: 1000ms)\n  maxTerminated: 500  # \u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6700\u5927\u6570\u91cf (\u9ed8\u8ba4: 500)\n  minTerminatedEnergyThreshold: 10  # \u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6700\u4f4e\u80fd\u91cf\u9608\u503c (\u9ed8\u8ba4: 10)\n\nhost:\n  sysfs: /sys   # sysfs \u6587\u4ef6\u7cfb\u7edf\u8def\u5f84 (\u9ed8\u8ba4: /sys)\n  procfs: /proc # procfs \u6587\u4ef6\u7cfb\u7edf\u8def\u5f84 (\u9ed8\u8ba4: /proc)\n\nrapl:\n  zones: []     # \u8981\u542f\u7528\u7684 RAPL \u533a\u57df\uff0c\u7a7a\u503c\u542f\u7528\u6240\u6709\u9ed8\u8ba4\u533a\u57df\n\nexporter:\n  stdout:       # stdout \u5bfc\u51fa\u5668\u76f8\u5173\u914d\u7f6e\n    enabled: false # \u9ed8\u8ba4\u7981\u7528\n  prometheus:   # prometheus \u5bfc\u51fa\u5668\u76f8\u5173\u914d\u7f6e\n    enabled: true\n    debugCollectors:\n      - go\n      - process\n    metricsLevel:\n      - node\n      - process\n      - container\n      - vm\n      - pod\n\ndebug:          # \u8c03\u8bd5\u76f8\u5173\u914d\u7f6e\n  pprof:        # pprof \u76f8\u5173\u914d\u7f6e\n    enabled: true\n\nweb:\n  configFile: \"\" # TLS \u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\n  listenAddresses: # Web \u670d\u52a1\u5668\u76d1\u542c\u5730\u5740\n    - \":28282\"\n\nkube:           # kubernetes \u76f8\u5173\u914d\u7f6e\n  enabled: false    # \u542f\u7528 kubernetes \u76d1\u63a7 (\u9ed8\u8ba4: false)\n  config: \"\"        # kubeconfig \u6587\u4ef6\u8def\u5f84 (\u5728\u96c6\u7fa4\u5185\u8fd0\u884c\u65f6\u53ef\u9009)\n  nodeName: \"\"      # kubernetes \u8282\u70b9\u540d\u79f0 (\u542f\u7528\u65f6\u5fc5\u9700)\n\n# \u8b66\u544a\uff1a\u8bf7\u52ff\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u542f\u7528 - \u4ec5\u7528\u4e8e\u5f00\u53d1/\u6d4b\u8bd5\ndev:\n  fake-cpu-meter:\n    enabled: false\n    zones: []  # \u8981\u542f\u7528\u7684\u533a\u57df\uff0c\u7a7a\u503c\u542f\u7528\u6240\u6709\u9ed8\u8ba4\u533a\u57df\n</code></pre>"},{"location":"zh/kepler/usage/configuration/#_6","title":"\ud83e\udde9 \u8be6\u7ec6\u914d\u7f6e\u9009\u9879","text":""},{"location":"zh/kepler/usage/configuration/#_7","title":"\ud83d\udcdd \u65e5\u5fd7\u914d\u7f6e","text":"<pre><code>log:\n  level: info   # \u65e5\u5fd7\u7ea7\u522b\n  format: text  # \u8f93\u51fa\u683c\u5f0f\n</code></pre> <ul> <li>level\uff1a\u63a7\u5236\u65e5\u5fd7\u7684\u8be6\u7ec6\u7a0b\u5ea6</li> <li><code>debug</code>\uff1a\u975e\u5e38\u8be6\u7ec6\uff0c\u5305\u542b\u8be6\u7ec6\u7684\u64cd\u4f5c\u4fe1\u606f</li> <li><code>info</code>\uff1a\u6807\u51c6\u64cd\u4f5c\u4fe1\u606f</li> <li><code>warn</code>\uff1a\u4ec5\u8b66\u544a\u548c\u9519\u8bef</li> <li> <p><code>error</code>\uff1a\u4ec5\u9519\u8bef</p> </li> <li> <p>format\uff1a\u63a7\u5236\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f</p> </li> <li><code>text</code>\uff1a\u4eba\u7c7b\u53ef\u8bfb\u683c\u5f0f</li> <li><code>json</code>\uff1aJSON \u683c\u5f0f\uff0c\u9002\u7528\u4e8e\u65e5\u5fd7\u5904\u7406\u7cfb\u7edf</li> </ul>"},{"location":"zh/kepler/usage/configuration/#_8","title":"\ud83d\udcca \u76d1\u63a7\u914d\u7f6e","text":"<pre><code>monitor:\n  interval: 5s\n  staleness: 1000ms\n  maxTerminated: 500\n  minTerminatedEnergyThreshold: 10\n</code></pre> <ul> <li> <p>interval\uff1a\u76d1\u63a7\u7684\u5237\u65b0\u95f4\u9694\u3002\u751f\u547d\u5468\u671f\u5c11\u4e8e\u6b64\u95f4\u9694\u7684\u6240\u6709\u8fdb\u7a0b\u5c06\u88ab\u5ffd\u7565\u3002\u8bbe\u7f6e\u4e3a 0s \u7981\u7528\u76d1\u63a7\u5237\u65b0\u3002</p> </li> <li> <p>staleness\uff1a\u76d1\u63a7\u5668\u8ba1\u7b97\u7684\u6570\u636e\u88ab\u8ba4\u4e3a\u8fc7\u65f6\u5e76\u5728\u518d\u6b21\u8bf7\u6c42\u65f6\u91cd\u65b0\u8ba1\u7b97\u7684\u6301\u7eed\u65f6\u95f4\u3002\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6293\u53d6 Kepler \u65f6\u7279\u522b\u6709\u7528\uff0c\u786e\u4fdd\u5b83\u4eec\u5728\u8fc7\u65f6\u7a97\u53e3\u5185\u63a5\u6536\u76f8\u540c\u7684\u6570\u636e\u3002\u5e94\u77ed\u4e8e\u76d1\u63a7\u95f4\u9694\u3002</p> </li> <li> <p>maxTerminated\uff1a\u5728\u6570\u636e\u5bfc\u51fa\u524d\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\uff08\u8fdb\u7a0b\u3001\u5bb9\u5668\u3001\u865a\u62df\u673a\u3001Pod\uff09\u7684\u6700\u5927\u6570\u91cf\u3002\u8fd9\u9632\u6b62\u4e86\u5728\u9ad8\u6d41\u5931\u73af\u5883\u4e2d\u7684\u65e0\u9650\u5185\u5b58\u589e\u957f\u3002\u8bbe\u7f6e\u4e3a 0 \u7981\u7528\u3002\u8fbe\u5230\u9650\u5236\u65f6\uff0c\u9996\u5148\u79fb\u9664\u529f\u8017\u6700\u4f4e\u7684\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u3002</p> </li> <li> <p>minTerminatedEnergyThreshold\uff1a\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\u7684\u6700\u4f4e\u80fd\u8017\u9608\u503c\uff08\u4ee5\u7126\u8033\u4e3a\u5355\u4f4d\uff09\u3002\u53ea\u6709\u80fd\u8017\u9ad8\u4e8e\u6b64\u9608\u503c\u7684\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u624d\u4f1a\u88ab\u5305\u542b\u5728\u8ddf\u8e2a\u4e2d\u3002\u8fd9\u6709\u52a9\u4e8e\u8fc7\u6ee4\u6389\u6d88\u8017\u6700\u5c11\u80fd\u91cf\u7684\u77ed\u671f\u8fdb\u7a0b\u3002\u9ed8\u8ba4\u4e3a 10 \u7126\u8033\u3002</p> </li> </ul>"},{"location":"zh/kepler/usage/configuration/#_9","title":"\ud83d\uddc4\ufe0f \u4e3b\u673a\u914d\u7f6e","text":"<pre><code>host:\n  sysfs: /sys    # sysfs \u8def\u5f84\n  procfs: /proc  # procfs \u8def\u5f84\n</code></pre> <p>\u8fd9\u4e9b\u8bbe\u7f6e\u6307\u5b9a Kepler \u5e94\u8be5\u5728\u54ea\u91cc\u67e5\u627e\u7cfb\u7edf\u4fe1\u606f\u3002\u5728\u5bb9\u5668\u5316\u73af\u5883\u4e2d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u8c03\u6574\u8fd9\u4e9b\u8def\u5f84\u3002</p>"},{"location":"zh/kepler/usage/configuration/#rapl","title":"\ud83d\udd0b RAPL \u533a\u57df\u914d\u7f6e","text":"<pre><code>rapl:\n  zones: []  # \u8981\u542f\u7528\u7684 RAPL \u533a\u57df\n</code></pre> <p>\u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236\uff08RAPL\uff09\u662f Intel \u7684\u529f\u7387\u9650\u5236\u673a\u5236\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cKepler \u542f\u7528\u6240\u6709\u53ef\u7528\u533a\u57df\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5217\u51fa\u7279\u5b9a\u533a\u57df\u6765\u9650\u5236\u3002</p> <p>\u5177\u4f53\u533a\u57df\u793a\u4f8b\uff1a</p> <pre><code>rapl:\n  zones: [\"package\", \"core\", \"uncore\"]\n</code></pre>"},{"location":"zh/kepler/usage/configuration/#_10","title":"\ud83d\udce6 \u5bfc\u51fa\u5668\u914d\u7f6e","text":"<pre><code>exporter:\n  stdout:       # stdout \u5bfc\u51fa\u5668\u76f8\u5173\u914d\u7f6e\n    enabled: false # \u9ed8\u8ba4\u7981\u7528\n  prometheus:   # prometheus \u5bfc\u51fa\u5668\u76f8\u5173\u914d\u7f6e\n    enabled: true\n    debugCollectors:\n      - go\n      - process\n    metricsLevel:\n      - node\n      - process\n      - container\n      - vm\n      - pod\n</code></pre> <ul> <li>stdout\uff1astdout \u5bfc\u51fa\u5668\u914d\u7f6e</li> <li> <p><code>enabled</code>\uff1a\u542f\u7528\u6216\u7981\u7528 stdout \u5bfc\u51fa\u5668\uff08\u9ed8\u8ba4\uff1afalse\uff09</p> </li> <li> <p>prometheus\uff1aPrometheus \u5bfc\u51fa\u5668\u914d\u7f6e</p> </li> <li><code>enabled</code>\uff1a\u542f\u7528\u6216\u7981\u7528 Prometheus \u5bfc\u51fa\u5668\uff08\u9ed8\u8ba4\uff1atrue\uff09</li> <li><code>debugCollectors</code>\uff1a\u8981\u542f\u7528\u7684\u8c03\u8bd5\u6536\u96c6\u5668\u5217\u8868\uff08\u53ef\u7528\uff1a\"go\"\u3001\"process\"\uff09</li> <li><code>metricsLevel</code>\uff1a\u8981\u516c\u5f00\u7684\u6307\u6807\u7ea7\u522b\u5217\u8868\u3002\u63a7\u5236\u5bfc\u51fa\u6307\u6807\u7684\u7c92\u5ea6\uff1a<ul> <li><code>node</code>\uff1a\u8282\u70b9\u7ea7\u6307\u6807\uff08\u7cfb\u7edf\u8303\u56f4\u7684\u529f\u8017\uff09</li> <li><code>process</code>\uff1a\u8fdb\u7a0b\u7ea7\u6307\u6807\uff08\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u529f\u8017\uff09</li> <li><code>container</code>\uff1a\u5bb9\u5668\u7ea7\u6307\u6807\uff08\u6bcf\u4e2a\u5bb9\u5668\u7684\u529f\u8017\uff09</li> <li><code>vm</code>\uff1a\u865a\u62df\u673a\u7ea7\u6307\u6807\uff08\u6bcf\u4e2a\u865a\u62df\u673a\u7684\u529f\u8017\uff09</li> <li><code>pod</code>\uff1aPod \u7ea7\u6307\u6807\uff08Kubernetes \u4e2d\u6bcf\u4e2a Pod \u7684\u529f\u8017\uff09</li> </ul> </li> </ul>"},{"location":"zh/kepler/usage/configuration/#_11","title":"\ud83d\udc1e \u8c03\u8bd5\u914d\u7f6e","text":"<pre><code>debug:\n  pprof:\n    enabled: true\n</code></pre> <ul> <li>pprof\uff1approf \u8c03\u8bd5\u914d\u7f6e</li> <li><code>enabled</code>\uff1a\u542f\u7528\u65f6\uff0c\u8fd9\u4f1a\u516c\u5f00\u53ef\u7528\u4e8e\u5206\u6790 Kepler \u7684 pprof \u8c03\u8bd5\u7aef\u70b9\uff08\u9ed8\u8ba4\uff1atrue\uff09</li> </ul>"},{"location":"zh/kepler/usage/configuration/#web","title":"\ud83c\udf10 Web \u914d\u7f6e","text":"<pre><code>web:\n  configFile: \"\"  # TLS \u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\n  listenAddresses: # Web \u670d\u52a1\u5668\u76d1\u542c\u5730\u5740\n    - \":28282\"\n</code></pre> <ul> <li>configFile\uff1a\u7528\u4e8e\u4fdd\u62a4 Kepler Web \u7aef\u70b9\u7684 TLS \u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u8def\u5f84</li> <li>listenAddresses\uff1aWeb \u670d\u52a1\u5668\u5e94\u76d1\u542c\u7684\u5730\u5740\u5217\u8868\uff08\u9ed8\u8ba4\uff1a[\":28282\"]\uff09</li> <li>\u652f\u6301 host:port \u683c\u5f0f\uff08\u4f8b\u5982\uff0c\"localhost:8080\"\u3001\"0.0.0.0:9090\"\uff09\u548c\u4ec5\u7aef\u53e3\u683c\u5f0f\uff08\u4f8b\u5982\uff0c\":8080\"\uff09</li> <li>\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u5730\u5740\u4ee5\u5728\u4e0d\u540c\u63a5\u53e3\u6216\u7aef\u53e3\u4e0a\u76d1\u542c</li> <li>\u652f\u6301\u4f7f\u7528\u62ec\u53f7\u8868\u793a\u6cd5\u7684 IPv6 \u5730\u5740\uff08\u4f8b\u5982\uff0c\"[::1]:8080\"\uff09</li> </ul> <p>TLS \u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u793a\u4f8b\uff1a</p> <pre><code># TLS \u670d\u52a1\u5668\u914d\u7f6e\ntls_server_config:\n  cert_file: /path/to/cert.pem  # \u8bc1\u4e66\u6587\u4ef6\u8def\u5f84\n  key_file: /path/to/key.pem    # \u5bc6\u94a5\u6587\u4ef6\u8def\u5f84\n</code></pre>"},{"location":"zh/kepler/usage/configuration/#kubernetes","title":"\ud83d\udc33 Kubernetes \u914d\u7f6e","text":"<pre><code>kube:\n  enabled: false    # \u542f\u7528 kubernetes \u76d1\u63a7\n  config: \"\"        # kubeconfig \u6587\u4ef6\u8def\u5f84\n  nodeName: \"\"      # kubernetes \u8282\u70b9\u540d\u79f0\n</code></pre> <ul> <li>enabled\uff1a\u542f\u7528\u6216\u7981\u7528 Kubernetes \u76d1\u63a7\uff08\u9ed8\u8ba4\uff1afalse\uff09</li> <li> <p>\u542f\u7528\u65f6\uff0cKepler \u5c06\u76d1\u63a7 Kubernetes \u8d44\u6e90\u5e76\u516c\u5f00 Pod \u7ea7\u522b\u4fe1\u606f</p> </li> <li> <p>config\uff1akubeconfig \u6587\u4ef6\u8def\u5f84\uff08\u53ef\u9009\uff09</p> </li> <li>\u5728 Kubernetes \u96c6\u7fa4\u5916\u8fd0\u884c Kepler \u65f6\u5fc5\u9700</li> <li>\u5728\u96c6\u7fa4\u5185\u8fd0\u884c\u65f6\uff0cKepler \u53ef\u4ee5\u4f7f\u7528\u96c6\u7fa4\u5185\u914d\u7f6e</li> <li> <p>\u5fc5\u987b\u662f\u6709\u6548\u4e14\u53ef\u8bfb\u7684 kubeconfig \u6587\u4ef6</p> </li> <li> <p>nodeName\uff1a\u8fd0\u884c Kepler \u7684 Kubernetes \u8282\u70b9\u540d\u79f0\uff08\u542f\u7528\u65f6\u5fc5\u9700\uff09</p> </li> <li>\u8fd9\u6709\u52a9\u4e8e Kepler \u8bc6\u522b\u5b83\u6b63\u5728\u76d1\u63a7\u7684\u8282\u70b9</li> <li>\u5fc5\u987b\u4e0e Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5b9e\u9645\u8282\u70b9\u540d\u79f0\u5339\u914d</li> <li>\u5f53 <code>enabled</code> \u8bbe\u7f6e\u4e3a <code>true</code> \u65f6\u5fc5\u9700</li> </ul>"},{"location":"zh/kepler/usage/configuration/#_12","title":"\ud83e\uddd1\u200d\ud83d\udd2c \u5f00\u53d1\u914d\u7f6e","text":"<pre><code>dev:\n  fake-cpu-meter:\n    enabled: false\n    zones: []\n</code></pre> <p>\u26a0\ufe0f \u8b66\u544a\uff1a\u6b64\u90e8\u5206\u4ec5\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5\u3002\u8bf7\u52ff\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u542f\u7528\u3002</p> <ul> <li>fake-cpu-meter\uff1a\u542f\u7528\u65f6\uff0c\u4f7f\u7528\u5047 CPU \u8ba1\u91cf\u5668\u800c\u4e0d\u662f\u771f\u5b9e\u786c\u4ef6\u6307\u6807</li> <li><code>enabled</code>\uff1a\u8bbe\u7f6e\u4e3a <code>true</code> \u542f\u7528\u5047 CPU \u8ba1\u91cf\u5668</li> <li><code>zones</code>\uff1a\u8981\u542f\u7528\u7684\u7279\u5b9a\u533a\u57df\uff0c\u7a7a\u503c\u542f\u7528\u6240\u6709\u533a\u57df</li> </ul>"},{"location":"zh/kepler/usage/configuration/#_13","title":"\ud83d\udcd6 \u5ef6\u4f38\u9605\u8bfb","text":"<p>\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e3b Kepler \u4ed3\u5e93\u4e2d <code>hack/config.yaml</code> \u7684\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b</p> <p>\u914d\u7f6e\u6109\u5feb\uff01\ud83c\udf89</p>"},{"location":"zh/kepler/usage/power-attribution/","title":"\u7406\u89e3 Kepler \u529f\u7387\u5f52\u56e0","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u89e3\u91ca\u4e86 Kepler \u5982\u4f55\u6d4b\u91cf\u548c\u5f52\u56e0\u529f\u7387\u6d88\u8017\u5230 \u5728\u60a8\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\u3001\u5bb9\u5668\u3001\u865a\u62df\u673a\u548c Pod\u3002</p>"},{"location":"zh/kepler/usage/power-attribution/#_1","title":"\u529f\u7387\u5f52\u56e0\u7684\u5de5\u4f5c\u539f\u7406","text":""},{"location":"zh/kepler/usage/power-attribution/#_2","title":"\u5168\u5c40\u89c6\u56fe","text":"<p>\u73b0\u4ee3\u7cfb\u7edf\u7f3a\u4e4f\u6309\u5de5\u4f5c\u8d1f\u8f7d\u7684\u80fd\u8017\u8ba1\u91cf\uff0c\u4ec5\u5728\u786c\u4ef6\u7ea7\u522b\u63d0\u4f9b\u805a\u5408 \u529f\u8017\u3002Kepler \u901a\u8fc7\u57fa\u4e8e\u8d44\u6e90\u5229\u7528\u7387\u7684\u6bd4\u4f8b\u5206\u914d\u6765\u89e3\u51b3\u8fd9\u4e00\u5f52\u56e0 \u6311\u6218\uff1a</p> <ol> <li>\u786c\u4ef6\u80fd\u8017\u6536\u96c6 - Intel RAPL \u4f20\u611f\u5668\u5728\u5c01\u88c5\u3001\u5185\u6838\u3001DRAM \u548c\u975e\u5185\u6838\u7ea7\u522b\u63d0\u4f9b\u7d2f\u79ef    \u80fd\u91cf\u8ba1\u6570\u5668</li> <li>\u7cfb\u7edf\u6d3b\u52a8\u5206\u6790 - \u6765\u81ea <code>/proc/stat</code> \u7684 CPU \u5229\u7528\u7387\u6307\u6807    \u786e\u5b9a\u6d3b\u52a8\u4e0e\u7a7a\u95f2\u7cfb\u7edf\u64cd\u4f5c\u7684\u6bd4\u7387</li> <li>\u529f\u7387\u57df\u5206\u79bb - \u603b\u80fd\u91cf\u5206\u4e3a\u6d3b\u52a8\u529f\u7387    \uff08\u4e0e\u5de5\u4f5c\u8d1f\u8f7d\u6d3b\u52a8\u6210\u6b63\u6bd4\uff09\u548c\u7a7a\u95f2\u529f\u7387\uff08\u57fa\u7ebf\u6d88\u8017\uff09</li> <li>\u6bd4\u4f8b\u5f52\u56e0 - \u6d3b\u52a8\u529f\u7387\u6839\u636e\u5de5\u4f5c\u8d1f\u8f7d\u7684 CPU \u65f6\u95f4\u6d88\u8017\u6bd4\u7387\u5206\u914d\u7ed9\u5de5\u4f5c\u8d1f\u8f7d</li> </ol>"},{"location":"zh/kepler/usage/power-attribution/#_3","title":"\u6838\u5fc3\u7406\u5ff5","text":"<p>Kepler \u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u4e8e CPU \u65f6\u95f4\u6bd4\u4f8b\u7684\u80fd\u91cf\u5f52\u56e0\u6a21\u578b\uff0c\u8be5\u6a21\u578b \u6839\u636e\u5404\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8ba1\u7b97\u8d44\u6e90\u4f7f\u7528\u6a21\u5f0f\u5c06\u786c\u4ef6\u6d4b\u91cf\u7684\u80fd\u8017\u5206\u914d\u7ed9\u5b83\u4eec\u3002</p> <p>\u57fa\u672c\u539f\u7406\u8ba4\u8bc6\u5230\u7cfb\u7edf\u529f\u8017\u6709\u4e24\u4e2a \u4e0d\u540c\u7684\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>\u6d3b\u52a8\u529f\u7387\uff1a\u8ba1\u7b97\u5de5\u4f5c\u6d88\u8017\u7684\u80fd\u91cf\uff0c\u4e0e CPU \u5229\u7528\u7387\u6210\u6b63\u6bd4\u5e76\u968f\u5de5\u4f5c\u8d1f\u8f7d\u6d3b\u52a8\u53ef\u6269\u5c55</li> <li>\u7a7a\u95f2\u529f\u7387\uff1a\u7ef4\u6301\u7cfb\u7edf\u8fd0\u884c\u7684\u56fa\u5b9a\u57fa\u7ebf\u80fd\u91cf\uff0c   \u5305\u62ec\u5185\u5b58\u5237\u65b0\u3001\u65f6\u949f\u5206\u914d\u548c\u7a7a\u95f2\u5185\u6838\u529f\u7387\u72b6\u6001</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_4","title":"\u5f52\u56e0\u516c\u5f0f","text":"<p>\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\u4f7f\u7528\u76f8\u540c\u7684\u6bd4\u4f8b\u5f52\u56e0\u516c\u5f0f\uff1a</p> <pre><code>\u5de5\u4f5c\u8d1f\u8f7d\u529f\u7387 = (\u5de5\u4f5c\u8d1f\u8f7d CPU \u65f6\u95f4 \u0394 / \u8282\u70b9 CPU \u65f6\u95f4 \u0394) \u00d7 \u6d3b\u52a8\u529f\u7387\n</code></pre> <p>\u8fd9\u786e\u4fdd\u4e86\u80fd\u91cf\u5b88\u6052 - \u5f52\u56e0\u529f\u7387\u7684\u603b\u548c\u4fdd\u6301 \u4e0e\u6d4b\u91cf\u7684\u786c\u4ef6\u6d88\u8017\u6210\u6b63\u6bd4\uff0c\u540c\u65f6\u57fa\u4e8e\u5b9e\u9645\u8d44\u6e90\u5229\u7528\u7387\u4fdd\u6301\u516c\u5e73\u6027\u3002</p> <p></p> <p>\u56fe 1\uff1a\u529f\u7387\u5f52\u56e0\u6d41\u7a0b\uff0c\u663e\u793a\u603b\u6d4b\u91cf\u529f\u7387\u5982\u4f55 \u5206\u89e3\u4e3a\u6d3b\u52a8\u548c\u7a7a\u95f2\u7ec4\u4ef6\uff0c\u6d3b\u52a8\u529f\u7387\u6839\u636e\u5de5\u4f5c\u8d1f\u8f7d CPU \u65f6\u95f4\u589e\u91cf\u6309\u6bd4\u4f8b\u5206\u914d\u3002</p>"},{"location":"zh/kepler/usage/power-attribution/#_5","title":"\u7406\u89e3\u80fd\u91cf\u4e0e\u529f\u7387","text":"<ul> <li>\u80fd\u91cf\uff1a\u4ee5\u5fae\u7126\u8033 (\u03bcJ) \u4e3a\u5355\u4f4d\u6d4b\u91cf\uff0c\u4f5c\u4e3a\u6765\u81ea\u786c\u4ef6\u7684\u7d2f\u79ef\u8ba1\u6570\u5668</li> <li>\u529f\u7387\uff1a\u4f7f\u7528 <code>\u529f\u7387 = \u0394Energy / \u0394time</code> \u8ba1\u7b97\u4e3a\u5fae\u74e6 (\u03bcW) \u7684\u901f\u7387</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_6","title":"\u80fd\u91cf\u533a\u57df","text":"<p>\u786c\u4ef6\u80fd\u91cf\u4ece\u4e0d\u540c\u533a\u57df\u8bfb\u53d6\uff1a</p> <ul> <li>Package\uff1aCPU \u5c01\u88c5\u7ea7\u80fd\u8017</li> <li>Core\uff1a\u5355\u4e2a CPU \u5185\u6838\u80fd\u91cf</li> <li>DRAM\uff1a\u5185\u5b58\u5b50\u7cfb\u7edf\u80fd\u91cf</li> <li>Uncore\uff1a\u96c6\u6210\u663e\u5361\u548c\u5176\u4ed6\u975e\u5185\u6838\u7ec4\u4ef6</li> <li>PSys\uff1a\u5e73\u53f0\u7ea7\u80fd\u91cf\uff08\u53ef\u7528\u65f6\u6700\u5168\u9762\uff09</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_7","title":"\u5f52\u56e0\u793a\u4f8b","text":""},{"location":"zh/kepler/usage/power-attribution/#1","title":"\u793a\u4f8b 1\uff1a\u57fa\u672c\u529f\u7387\u5206\u914d","text":"<p>\u7cfb\u7edf\u72b6\u6001\uff1a</p> <ul> <li>\u786c\u4ef6\u62a5\u544a\uff1a40W \u603b\u7cfb\u7edf\u529f\u7387</li> <li>\u8282\u70b9 CPU \u4f7f\u7528\u7387\uff1a25% \u5229\u7528\u7387</li> <li>\u529f\u7387\u5206\u914d\uff1a40W \u00d7 25% = 10W \u6d3b\u52a8\uff0c30W \u7a7a\u95f2</li> </ul> <p>\u5de5\u4f5c\u8d1f\u8f7d\u5f52\u56e0\uff1a \u5982\u679c\u4e00\u4e2a\u5bb9\u5668\u5728\u6d4b\u91cf\u95f4\u9694\u5185\u4f7f\u7528\u4e86\u603b\u8282\u70b9 CPU \u65f6\u95f4\u7684 20%\uff1a</p> <ul> <li>\u5bb9\u5668\u529f\u7387 = (20% CPU \u4f7f\u7528\u7387) \u00d7 10W \u6d3b\u52a8 = 2W</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#2","title":"\u793a\u4f8b 2\uff1a\u591a\u5de5\u4f5c\u8d1f\u8f7d\u573a\u666f","text":"<p>\u7cfb\u7edf\u72b6\u6001\uff1a</p> <ul> <li>\u603b\u529f\u7387\uff1a60W</li> <li>CPU \u4f7f\u7528\u7387\uff1a33.3% (1/3)</li> <li>\u6d3b\u52a8\u529f\u7387\uff1a20W\uff0c\u7a7a\u95f2\u529f\u7387\uff1a40W</li> <li>\u8282\u70b9\u603b CPU \u65f6\u95f4\uff1a1000ms</li> </ul> <p>\u8fdb\u7a0b\u7ea7 CPU \u4f7f\u7528\u7387\uff1a</p> <ul> <li>\u8fdb\u7a0b 1\uff08\u72ec\u7acb\uff09\uff1a100ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 2\uff08\u5728\u5bb9\u5668-A \u4e2d\uff09\uff1a80ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 3\uff08\u5728\u5bb9\u5668-A \u4e2d\uff09\uff1a70ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 4\uff08\u5728\u5bb9\u5668-B \u4e2d\uff09\uff1a60ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 5\uff08QEMU \u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\uff09\uff1a200ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 6\uff08\u5728\u5bb9\u5668-C\uff0cPod-X \u4e2d\uff09\uff1a90ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 7\uff08\u5728\u5bb9\u5668-D\uff0cPod-X \u4e2d\uff09\uff1a110ms CPU \u65f6\u95f4</li> </ul> <p>\u5206\u5c42 CPU \u65f6\u95f4\u805a\u5408\uff1a</p> <ul> <li>\u5bb9\u5668-A CPU \u65f6\u95f4\uff1a80ms + 70ms = 150ms</li> <li>\u5bb9\u5668-B CPU \u65f6\u95f4\uff1a60ms</li> <li>\u5bb9\u5668-C CPU \u65f6\u95f4\uff1a90ms\uff08Pod-X \u7684\u4e00\u90e8\u5206\uff09</li> <li>\u5bb9\u5668-D CPU \u65f6\u95f4\uff1a110ms\uff08Pod-X \u7684\u4e00\u90e8\u5206\uff09</li> <li>Pod-X CPU \u65f6\u95f4\uff1a90ms + 110ms = 200ms</li> <li>\u865a\u62df\u673a CPU \u65f6\u95f4\uff1a200ms\uff08QEMU \u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u8fdb\u7a0b\uff09</li> </ul> <p>\u72ec\u7acb\u529f\u7387\u5f52\u56e0\uff08\u6bcf\u4e2a\u90fd\u6765\u81ea\u8282\u70b9\u6d3b\u52a8\u529f\u7387\uff09\uff1a</p> <ul> <li>\u8fdb\u7a0b 1\uff1a(100ms / 1000ms) \u00d7 20W = 2W</li> <li>\u5bb9\u5668-A\uff1a(150ms / 1000ms) \u00d7 20W = 3W</li> <li>\u5bb9\u5668-B\uff1a(60ms / 1000ms) \u00d7 20W = 1.2W</li> <li>Pod-X\uff1a(200ms / 1000ms) \u00d7 20W = 4W</li> <li>\u865a\u62df\u673a\uff1a(200ms / 1000ms) \u00d7 20W = 4W</li> </ul> <p>\u6ce8\u610f\uff1a \u6bcf\u79cd\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\u6839\u636e\u81ea\u5df1\u7684 CPU \u65f6\u95f4\u72ec\u7acb\u5730\u4ece\u8282\u70b9\u6d3b\u52a8\u529f\u7387\u8ba1\u7b97\u529f\u7387\uff0c\u800c\u4e0d\u662f\u4ece\u6784\u6210\u5de5\u4f5c\u8d1f\u8f7d\u7ee7\u627f\u3002</p>"},{"location":"zh/kepler/usage/power-attribution/#3","title":"\u793a\u4f8b 3\uff1a\u5177\u6709\u591a\u4e2a\u8fdb\u7a0b\u7684\u5bb9\u5668","text":"<p>\u5bb9\u5668 \"web-server\"\uff1a</p> <ul> <li>\u8fdb\u7a0b 1\uff08nginx\uff09\uff1a100ms CPU \u65f6\u95f4</li> <li>\u8fdb\u7a0b 2\uff08worker\uff09\uff1a50ms CPU \u65f6\u95f4</li> <li>\u5bb9\u5668\u603b\u8ba1\uff1a150ms CPU \u65f6\u95f4</li> </ul> <p>\u5982\u679c\u8282\u70b9\u603b CPU \u65f6\u95f4\u4e3a 1000ms\uff1a</p> <ul> <li>\u5bb9\u5668 CPU \u6bd4\u7387\uff1a150ms / 1000ms = 15%</li> <li>\u5bb9\u5668\u529f\u7387\uff1a15% \u00d7 \u6d3b\u52a8\u529f\u7387</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#4-pod","title":"\u793a\u4f8b 4\uff1a\u5177\u6709\u591a\u4e2a\u5bb9\u5668\u7684 Pod","text":"<p>Pod \"frontend\"\uff1a</p> <ul> <li>\u5bb9\u5668 1\uff08nginx\uff09\uff1a200ms CPU \u65f6\u95f4</li> <li>\u5bb9\u5668 2\uff08sidecar\uff09\uff1a50ms CPU \u65f6\u95f4</li> <li>Pod \u603b\u8ba1\uff1a250ms CPU \u65f6\u95f4</li> </ul> <p>\u5982\u679c\u8282\u70b9\u603b CPU \u65f6\u95f4\u4e3a 1000ms\uff1a</p> <ul> <li>Pod CPU \u6bd4\u7387\uff1a250ms / 1000ms = 25%</li> <li>Pod \u529f\u7387\uff1a25% \u00d7 \u6d3b\u52a8\u529f\u7387</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_8","title":"\u9650\u5236\u548c\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"zh/kepler/usage/power-attribution/#cpu","title":"CPU \u5f52\u56e0\u6548\u679c\u826f\u597d\u7684\u60c5\u51b5","text":"<ul> <li>CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5177\u6709\u76f8\u4f3c\u7684\u6307\u4ee4\u7ec4\u5408</li> <li>\u7a33\u6001\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u6ca1\u6709\u663e\u8457\u7684\u9891\u7387\u7f29\u653e</li> <li>\u76f8\u5bf9\u6bd4\u8f83\uff0c\u5728\u76f8\u4f3c\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\u4e4b\u95f4</li> <li>\u8d8b\u52bf\u5206\u6790\uff0c\u5728\u8f83\u957f\u65f6\u95f4\u6bb5\u5185</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_9","title":"\u9700\u8981\u8c28\u614e\u7684\u60c5\u51b5","text":"<ul> <li>\u6df7\u5408\u5de5\u4f5c\u8d1f\u8f7d\u73af\u5883\uff0c\u5177\u6709\u4e0d\u540c\u7684\u8ba1\u7b97\u4e0e I/O \u6a21\u5f0f</li> <li>\u9ad8\u6027\u80fd\u8ba1\u7b97\u5de5\u4f5c\u8d1f\u8f7d\u4f7f\u7528\u4e13\u7528\u6307\u4ee4</li> <li>\u7edd\u5bf9\u529f\u7387\u9884\u7b97\u51b3\u7b56\u4ec5\u57fa\u4e8e Kepler \u6307\u6807</li> <li>\u7ec6\u7c92\u5ea6\u4f18\u5316\u9700\u8981\u7cbe\u786e\u7684\u6bcf\u8fdb\u7a0b\u529f\u7387\u6d4b\u91cf</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_10","title":"\u5de5\u4f5c\u8d1f\u8f7d\u7279\u5b9a\u7279\u5f81","text":""},{"location":"zh/kepler/usage/power-attribution/#_11","title":"\u8ba1\u7b97\u4e0e\u5185\u5b58\u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d","text":"<pre><code>\u793a\u4f8b\u573a\u666f\uff1a\n- \u8fdb\u7a0b A\uff1a50% CPU\uff0c\u8ba1\u7b97\u5bc6\u96c6\u578b\uff08\u9ad8\u9891\u7387\uff0c\u6d3b\u8dc3\u6267\u884c\uff09\n- \u8fdb\u7a0b B\uff1a50% CPU\uff0c\u5185\u5b58\u5bc6\u96c6\u578b\uff08\u9891\u7e41\u505c\u987f\uff0c\u8f83\u4f4e\u9891\u7387\uff09\n\n\u5f53\u524d\u5f52\u56e0\uff1a\u4e24\u8005\u90fd\u63a5\u6536\u76f8\u7b49\u7684\u529f\u7387\n\u5b9e\u9645\u60c5\u51b5\uff1a\u8fdb\u7a0b A \u53ef\u80fd\u6d88\u8017 2-3 \u500d\u66f4\u591a\u529f\u7387\n</code></pre>"},{"location":"zh/kepler/usage/power-attribution/#cpu_1","title":"CPU \u529f\u7387\u72b6\u6001\u5f71\u54cd","text":"<p>\u73b0\u4ee3 CPU \u5b9e\u73b0\u590d\u6742\u7684\u529f\u7387\u7ba1\u7406\uff0c\u5f71\u54cd\u5f52\u56e0\u51c6\u786e\u6027\uff1a</p> <ul> <li>C \u72b6\u6001\uff08CPU \u7761\u7720\u72b6\u6001\uff09\uff1a\u4e0d\u540c\u7684\u7761\u7720\u884c\u4e3a\u5f71\u54cd\u529f\u8017</li> <li>P \u72b6\u6001\uff08\u6027\u80fd\u72b6\u6001\uff09\uff1a\u52a8\u6001\u9891\u7387\u7f29\u653e\u5f71\u54cd\u6bcf CPU \u5468\u671f\u7684\u529f\u7387</li> <li>\u6307\u4ee4\u7ea7\u53d8\u5316\uff1a\u5411\u91cf\u6307\u4ee4\u6bd4\u6807\u91cf\u64cd\u4f5c\u6d88\u8017\u66f4\u591a\u529f\u7387</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#cpu_2","title":"\u8d85\u8d8a CPU \u5f52\u56e0","text":""},{"location":"zh/kepler/usage/power-attribution/#io","title":"\u5185\u5b58\u548c I/O \u8003\u8651","text":"<ul> <li>DRAM \u529f\u7387\uff1a\u5185\u5b58\u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u6d88\u8017\u66f4\u591a DRAM \u529f\u7387</li> <li>\u5b58\u50a8 I/O\uff1a\u89e6\u53d1\u5b58\u50a8\u63a7\u5236\u5668\u548c\u8bbe\u5907\u529f\u7387</li> <li>\u7f51\u7edc I/O\uff1a\u6d88\u8017\u7f51\u7edc\u63a5\u53e3\u548c PCIe \u529f\u7387</li> <li>GPU \u5de5\u4f5c\u8d1f\u8f7d\uff1a\u96c6\u6210\u663e\u5361\u529f\u7387\u672a\u88ab CPU \u6307\u6807\u6355\u83b7</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_12","title":"\u5173\u952e\u6307\u6807","text":"<ul> <li><code>kepler_node_cpu_watts{}</code>\uff1a\u603b\u8282\u70b9\u529f\u8017</li> <li><code>kepler_process_cpu_watts{}</code>\uff1a\u5355\u4e2a\u8fdb\u7a0b\u529f\u7387</li> <li><code>kepler_container_cpu_watts{}</code>\uff1a\u5bb9\u5668\u7ea7\u529f\u7387</li> <li><code>kepler_vm_cpu_watts{}</code>\uff1a\u865a\u62df\u673a\u529f\u7387</li> <li><code>kepler_pod_cpu_watts{}</code>\uff1aKubernetes Pod \u529f\u7387</li> </ul>"},{"location":"zh/kepler/usage/power-attribution/#_13","title":"\u7ed3\u8bba","text":"<p>Kepler \u7684\u529f\u7387\u5f52\u56e0\u7cfb\u7edf\u4e3a\u5355\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u63d0\u4f9b\u5b9e\u7528\u7684\u3001\u6210\u6bd4\u4f8b\u7684\u786c\u4ef6\u80fd\u8017\u5206\u914d\u3002\u867d\u7136\u57fa\u4e8e CPU \u65f6\u95f4\u7684\u5f52\u56e0\u7531\u4e8e\u73b0\u4ee3 CPU \u590d\u6742\u6027\u800c\u5177\u6709\u56fa\u6709\u9650\u5236\uff0c\u4f46\u5b83\u4e3a\u5927\u591a\u6570\u76d1\u63a7\u548c\u4f18\u5316\u7528\u4f8b\u5728\u51c6\u786e\u6027\u3001\u7b80\u5355\u6027\u548c\u6027\u80fd\u5f00\u9500\u4e4b\u95f4\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u5e73\u8861\u3002</p> <p>\u7406\u89e3\u80fd\u529b\u548c\u9650\u5236\u6709\u52a9\u4e8e\u7528\u6237\u5c31\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u4f9d\u8d56 Kepler \u7684\u529f\u7387\u5f52\u56e0\u6307\u6807\u505a\u51fa\u660e\u667a\u51b3\u7b56\u3002</p>"},{"location":"zh/kepler-operator/configuration/","title":"PowerMonitor \u914d\u7f6e\u6307\u5357","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u6db5\u76d6\u4e86 PowerMonitor \u81ea\u5b9a\u4e49\u8d44\u6e90\u5b9a\u4e49\uff08CRD\uff09\u7684\u5168\u9762\u914d\u7f6e\u9009\u9879\u3002\u4f7f\u7528\u8fd9\u4e9b\u8bbe\u7f6e\u4e3a\u4e0d\u540c\u73af\u5883\u3001\u5b89\u5168\u8981\u6c42\u548c\u76d1\u63a7\u9700\u6c42\u81ea\u5b9a\u4e49\u60a8\u7684 Kepler \u90e8\u7f72\u3002</p>"},{"location":"zh/kepler-operator/configuration/#_1","title":"\u57fa\u672c\u914d\u7f6e","text":""},{"location":"zh/kepler-operator/configuration/#_2","title":"\u6307\u6807\u7ea7\u522b","text":"<p>\u63a7\u5236 Kepler \u5bfc\u51fa\u7684\u6307\u6807\u7c7b\u578b\u3002\u6839\u636e\u60a8\u7684\u76d1\u63a7\u8981\u6c42\u548c\u6027\u80fd\u8003\u8651\u8fdb\u884c\u9009\u62e9\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      metricLevels:\n      - node      # \u8282\u70b9\u7ea7\u529f\u8017\uff08\u63a8\u8350\uff09\n      - pod       # Pod \u7ea7\u529f\u8017\uff08\u63a8\u8350\uff09\n      - vm        # \u865a\u62df\u673a\u529f\u8017\n      - process   # \u8fdb\u7a0b\u7ea7\u529f\u8017\uff08\u9ad8\u5f00\u9500\uff09\n      - container # \u5bb9\u5668\u7ea7\u529f\u8017\uff08\u9ad8\u5f00\u9500\uff09\n</code></pre> <p>\u63a8\u8350\uff1a</p> <ul> <li>\u751f\u4ea7\u73af\u5883\uff1a\u4f7f\u7528 <code>node</code> \u548c <code>pod</code> \u83b7\u5f97\u5e73\u8861\u7684\u76d1\u63a7</li> <li>\u5f00\u53d1\u73af\u5883\uff1a\u6dfb\u52a0 <code>container</code> \u8fdb\u884c\u8be6\u7ec6\u5206\u6790</li> <li>\u6700\u5c0f\u5f00\u9500\uff1a\u4ec5\u4f7f\u7528 <code>node</code></li> </ul>"},{"location":"zh/kepler-operator/configuration/#_3","title":"\u65f6\u5e8f\u914d\u7f6e","text":"<p>\u914d\u7f6e Kepler \u91c7\u6837\u548c\u62a5\u544a\u6307\u6807\u7684\u9891\u7387\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      sampleRate: 5s      # \u91c7\u6837\u6307\u6807\u7684\u9891\u7387\n      staleness: 500ms    # \u503c\u88ab\u8ba4\u4e3a\u8fc7\u65f6\u7684\u65f6\u95f4\n</code></pre> <p>\u6027\u80fd\u8c03\u4f18\uff1a</p> <ul> <li>\u964d\u4f4e CPU \u4f7f\u7528\u7387\uff1a\u5c06 <code>sampleRate</code> \u589e\u81f3 <code>10s</code> \u6216 <code>15s</code></li> <li>\u66f4\u9ad8\u7cbe\u5ea6\uff1a\u5c06 <code>sampleRate</code> \u51cf\u81f3 <code>3s</code>\uff08\u63a8\u8350\u6700\u5c0f\u503c\uff09</li> <li>\u7f51\u7edc\u4f18\u5316\uff1a\u6839\u636e\u7f51\u7edc\u5ef6\u8fdf\u8c03\u6574 <code>staleness</code></li> </ul>"},{"location":"zh/kepler-operator/configuration/#_4","title":"\u65e5\u5fd7\u914d\u7f6e","text":"<p>\u8bbe\u7f6e\u7528\u4e8e\u6545\u969c\u6392\u9664\u548c\u76d1\u63a7\u7684\u65e5\u5fd7\u7ea7\u522b\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      logLevel: info  # \u9009\u9879\uff1adebug, info, warn, error\n</code></pre> <p>\u65e5\u5fd7\u7ea7\u522b\uff1a</p> <ul> <li><code>debug</code>\uff1a\u7528\u4e8e\u6545\u969c\u6392\u9664\u7684\u8be6\u7ec6\u65e5\u5fd7\uff08\u4e0d\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09</li> <li><code>info</code>\uff1a\u6807\u51c6\u64cd\u4f5c\u65e5\u5fd7\uff08\u63a8\u8350\uff09</li> <li><code>warn</code>\uff1a\u4ec5\u8b66\u544a\u548c\u9519\u8bef</li> <li><code>error</code>\uff1a\u4ec5\u9519\u8bef\u6d88\u606f</li> </ul>"},{"location":"zh/kepler-operator/configuration/#_5","title":"\u8d44\u6e90\u7ba1\u7406","text":""},{"location":"zh/kepler-operator/configuration/#_6","title":"\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a","text":"<p>\u63a7\u5236 Kepler \u5982\u4f55\u5904\u7406\u5df2\u7ec8\u6b62 Pod \u548c\u5bb9\u5668\u7684\u6307\u6807\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      maxTerminated: 500  # \u6309\u529f\u8017\u8ddf\u8e2a\u524d 500 \u4e2a\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\n</code></pre> <p>\u9009\u9879\uff1a</p> <ul> <li><code>500</code>\uff08\u9ed8\u8ba4\uff09\uff1a\u8ddf\u8e2a\u524d 500 \u4e2a\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d</li> <li><code>0</code>\uff1a\u7981\u7528\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\uff08\u8282\u7701\u5185\u5b58\uff09</li> <li><code>-1</code>\uff1a\u8ddf\u8e2a\u65e0\u9650\u5236\u7684\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\uff08\u8bf7\u8c28\u614e\u4f7f\u7528\uff09</li> </ul>"},{"location":"zh/kepler-operator/configuration/#configmap","title":"\u989d\u5916 ConfigMap","text":"<p>\u4f7f\u7528\u5916\u90e8 ConfigMap \u8fdb\u884c\u9ad8\u7ea7\u914d\u7f6e\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      additionalConfigMaps:\n      - name: custom-model-config\n      - name: advanced-power-settings\n</code></pre> <p>\u8fd9\u5141\u8bb8\u60a8\uff1a</p> <ul> <li>\u8986\u76d6\u529f\u7387\u6a21\u578b</li> <li>\u81ea\u5b9a\u4e49 CPU \u9891\u7387\u6620\u5c04</li> <li>\u914d\u7f6e\u5e73\u53f0\u7279\u5b9a\u8bbe\u7f6e</li> </ul>"},{"location":"zh/kepler-operator/configuration/#_7","title":"\u5b89\u5168\u914d\u7f6e","text":""},{"location":"zh/kepler-operator/configuration/#rbac","title":"RBAC \u6a21\u5f0f","text":"<p>\u914d\u7f6e\u5b89\u5168\u548c\u670d\u52a1\u8d26\u6237\u6743\u9650\uff1a</p> <pre><code>spec:\n  kepler:\n    deployment:\n      security:\n        mode: rbac              # \u9009\u9879\uff1anone, rbac\n        allowedSANames:\n        - \"monitoring-sa\"\n        - \"custom-service-account\"\n</code></pre> <p>\u5b89\u5168\u6a21\u5f0f\uff1a</p> <ul> <li><code>none</code>\uff1a\u65e0\u989d\u5916\u5b89\u5168\u9650\u5236\uff08\u5f00\u53d1\u73af\u5883\u9ed8\u8ba4\uff09</li> <li><code>rbac</code>\uff1a\u542f\u7528\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff08\u751f\u4ea7\u73af\u5883\u63a8\u8350\uff09</li> </ul>"},{"location":"zh/kepler-operator/configuration/#_8","title":"\u670d\u52a1\u8d26\u6237\u914d\u7f6e","text":"<p>\u4f7f\u7528 RBAC \u6a21\u5f0f\u65f6\uff0c\u6307\u5b9a\u5141\u8bb8\u7684\u670d\u52a1\u8d26\u6237\uff1a</p> <pre><code>spec:\n  kepler:\n    deployment:\n      security:\n        mode: rbac\n        allowedSANames:\n        - \"prometheus-service-account\"\n        - \"grafana-service-account\"\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_9","title":"\u8282\u70b9\u9009\u62e9\u548c\u8c03\u5ea6","text":""},{"location":"zh/kepler-operator/configuration/#_10","title":"\u8282\u70b9\u9009\u62e9\u5668","text":"<p>\u63a7\u5236\u54ea\u4e9b\u8282\u70b9\u8fd0\u884c Kepler Pod\uff1a</p> <pre><code>spec:\n  kepler:\n    deployment:\n      nodeSelector:\n        kubernetes.io/os: linux\n        node-type: worker\n        monitoring: enabled\n</code></pre> <p>\u5e38\u89c1\u9009\u62e9\u5668\uff1a</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\uff1a<code>kubernetes.io/os: linux</code></li> <li>\u8282\u70b9\u89d2\u8272\uff1a<code>node-role.kubernetes.io/worker: \"\"</code></li> <li>\u81ea\u5b9a\u4e49\u6807\u7b7e\uff1a<code>monitoring: enabled</code></li> </ul>"},{"location":"zh/kepler-operator/configuration/#_11","title":"\u5bb9\u5fcd\u5ea6","text":"<p>\u5141\u8bb8 Kepler \u5728\u5177\u6709\u7279\u5b9a\u6c61\u70b9\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\uff1a</p> <pre><code>spec:\n  kepler:\n    deployment:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      - key: dedicated\n        operator: Equal\n        value: monitoring\n        effect: NoSchedule\n</code></pre> <p>\u5e38\u89c1\u5bb9\u5fcd\u5ea6\uff1a</p> <ul> <li>\u4e3b\u8282\u70b9\uff1a\u5141\u8bb8\u5728\u63a7\u5236\u5e73\u9762\u8282\u70b9\u4e0a\u76d1\u63a7</li> <li>\u4e13\u7528\u8282\u70b9\uff1a\u5728\u4e13\u7528\u4e8e\u76d1\u63a7\u7684\u8282\u70b9\u4e0a\u8fd0\u884c</li> <li>\u7279\u6b8a\u786c\u4ef6\uff1a\u5177\u6709\u7279\u5b9a\u786c\u4ef6\u8981\u6c42\u7684\u8282\u70b9</li> </ul>"},{"location":"zh/kepler-operator/configuration/#_12","title":"\u5b8c\u6574\u914d\u7f6e\u793a\u4f8b","text":""},{"location":"zh/kepler-operator/configuration/#_13","title":"\u5f00\u53d1\u73af\u5883","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-dev\nspec:\n  kepler:\n    config:\n      logLevel: debug\n      metricLevels:\n      - node\n      - pod\n      - container\n      sampleRate: 3s\n      staleness: 200ms\n      maxTerminated: 100\n    deployment:\n      security:\n        mode: none\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_14","title":"\u751f\u4ea7\u73af\u5883","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-prod\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels:\n      - node\n      - pod\n      sampleRate: 10s\n      staleness: 1s\n      maxTerminated: 1000\n    deployment:\n      security:\n        mode: rbac\n        allowedSANames:\n        - \"prometheus-operator-prometheus\"\n      nodeSelector:\n        kubernetes.io/os: linux\n        node-role.kubernetes.io/worker: \"\"\n      tolerations:\n      - key: dedicated\n        operator: Equal\n        value: monitoring\n        effect: NoSchedule\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_15","title":"\u9ad8\u6027\u80fd\u76d1\u63a7","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor-hpc\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      - process\n      sampleRate: 1s\n      staleness: 100ms\n      maxTerminated: -1  # \u8ddf\u8e2a\u6240\u6709\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\n      additionalConfigMaps:\n      - name: hpc-power-models\n    deployment:\n      security:\n        mode: rbac\n      nodeSelector:\n        node-type: compute-intensive\n      tolerations:\n      - key: high-performance\n        operator: Exists\n        effect: NoSchedule\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_16","title":"\u914d\u7f6e\u9a8c\u8bc1","text":""},{"location":"zh/kepler-operator/configuration/#_17","title":"\u68c0\u67e5\u914d\u7f6e","text":"<p>\u9a8c\u8bc1\u60a8\u7684 PowerMonitor \u914d\u7f6e\uff1a</p> <pre><code># \u68c0\u67e5 PowerMonitor \u72b6\u6001\noc get powermonitor power-monitor -o yaml\n\n# \u9a8c\u8bc1\u6761\u4ef6\noc describe powermonitor power-monitor\n\n# \u68c0\u67e5\u751f\u6210\u7684\u8d44\u6e90\noc get all -n power-monitor\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_18","title":"\u5e38\u89c1\u914d\u7f6e\u95ee\u9898","text":"<p>\u95ee\u9898\uff1aPod \u672a\u5728\u9884\u671f\u8282\u70b9\u4e0a\u8c03\u5ea6</p> <pre><code># \u68c0\u67e5\u8282\u70b9\u6807\u7b7e\noc get nodes --show-labels\n\n# \u66f4\u65b0 nodeSelector\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"nodeSelector\": {\n          \"kubernetes.io/os\": \"linux\"\n        }\n      }\n    }\n  }\n}'\n</code></pre> <p>\u95ee\u9898\uff1a\u9ad8\u8d44\u6e90\u4f7f\u7528\u7387</p> <pre><code># \u51cf\u5c11\u6307\u6807\u7ea7\u522b\u5e76\u589e\u52a0\u91c7\u6837\u7387\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"metricLevels\": [\"node\", \"pod\"],\n        \"sampleRate\": \"10s\"\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"zh/kepler-operator/configuration/#_19","title":"\u9ad8\u7ea7\u4e3b\u9898","text":"<p>\u6709\u5173\u66f4\u9ad8\u7ea7\u7684\u914d\u7f6e\u573a\u666f\uff0c\u8bf7\u53c2\u9605\uff1a</p> <ul> <li>\u76d1\u63a7\u548c\u6545\u969c\u6392\u9664 - \u9ad8\u7ea7\u76d1\u63a7\u8bbe\u7f6e</li> <li>\u8fc1\u79fb\u6307\u5357 - \u4ece\u65e7\u914d\u7f6e\u8fc1\u79fb</li> </ul>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/","title":"\u76d1\u63a7\u548c\u6545\u969c\u6392\u9664","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u6db5\u76d6\u4e3a\u60a8\u7684 Kepler \u90e8\u7f72\u8bbe\u7f6e\u76d1\u63a7\u548c\u89e3\u51b3\u5e38\u89c1\u95ee\u9898\u3002\u5b83\u5305\u62ec OpenShift \u7279\u5b9a\u7684\u76d1\u63a7\u914d\u7f6e\u3001Grafana \u96c6\u6210\u548c\u7cfb\u7edf\u5316\u7684\u6545\u969c\u6392\u9664\u65b9\u6cd5\u3002</p>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_2","title":"\u76d1\u63a7\u8bbe\u7f6e","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_3","title":"\u542f\u7528\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7","text":"<p>\u786e\u4fdd\u5728\u60a8\u7684 OpenShift \u96c6\u7fa4\u4e2d\u542f\u7528\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\uff1a</p> <pre><code># \u68c0\u67e5\u5f53\u524d\u914d\u7f6e\noc -n openshift-monitoring get configmap cluster-monitoring-config -o yaml\n</code></pre> <p>\u5982\u679c\u672a\u542f\u7528\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\uff0c\u8bf7\u521b\u5efa\u6216\u66f4\u65b0\u914d\u7f6e\uff1a</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\n</code></pre> <p>\u5e94\u7528\u914d\u7f6e\uff1a</p> <pre><code>oc apply -f cluster-monitoring-config.yaml\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#servicemonitor","title":"\u9a8c\u8bc1 ServiceMonitor \u521b\u5efa","text":"<p>Kepler Operator \u81ea\u52a8\u4e3a Prometheus \u96c6\u6210\u521b\u5efa ServiceMonitor \u8d44\u6e90\uff1a</p> <pre><code># \u68c0\u67e5 ServiceMonitor\noc get servicemonitor -n power-monitor\n\n# \u67e5\u770b ServiceMonitor \u914d\u7f6e\noc get servicemonitor -n power-monitor -o yaml\n</code></pre> <p>\u9884\u671f\u8f93\u51fa\uff1a</p> <pre><code>NAME             AGE\nkepler-exporter  5m\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#openshift","title":"\u8bbf\u95ee OpenShift \u6307\u6807","text":"<p>\u5728 OpenShift \u63a7\u5236\u53f0\u4e2d\u5bfc\u822a\u5230 Observe \u2192 Metrics \u4ee5\u67e5\u770b\u529f\u8017\u6307\u6807\uff1a</p> <p> \u663e\u793a\u529f\u8017\u6982\u89c8\u7684 OpenShift \u6307\u6807\u4eea\u8868\u677f</p>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_4","title":"\u8981\u76d1\u63a7\u7684\u5173\u952e\u6307\u6807","text":"<p>\u5728 OpenShift \u63a7\u5236\u53f0\u4e2d\u67e5\u8be2\u8fd9\u4e9b\u6307\u6807\uff1a</p> <pre><code># \u8282\u70b9\u529f\u8017\nkepler_node_power_total\n\n# Pod \u529f\u8017\nkepler_pod_power_total\n\n# \u5bb9\u5668\u80fd\u8017\nkepler_container_energy_total\n\n# \u8fdb\u7a0b\u529f\u8017\nkepler_process_power_total\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_5","title":"\u6d4b\u8bd5\u6307\u6807\u7aef\u70b9","text":"<p>\u9a8c\u8bc1\u6307\u6807\u662f\u5426\u6b63\u786e\u5bfc\u51fa\uff1a</p> <pre><code># \u7aef\u53e3\u8f6c\u53d1\u5230\u6307\u6807\u7aef\u70b9\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\n\n# \u6d4b\u8bd5\u6307\u6807\u7aef\u70b9\uff08\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\uff09\ncurl http://localhost:9102/metrics | grep kepler_node_power_total\n\n# \u68c0\u67e5\u6307\u6807\u53ef\u7528\u6027\ncurl -s http://localhost:9102/metrics | grep -c \"kepler_\"\n</code></pre> <p>\u9884\u671f\uff1a\u5e94\u8fd4\u56de\u591a\u4e2a\u4ee5 <code>kepler_</code> \u5f00\u5934\u7684\u6307\u6807\u3002</p>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#grafana","title":"Grafana \u96c6\u6210","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#kepler","title":"\u5bfc\u5165 Kepler \u4eea\u8868\u677f","text":"<p>\u5bf9\u4e8e\u9ad8\u7ea7\u53ef\u89c6\u5316\uff0c\u5bfc\u5165\u5b98\u65b9 Kepler Grafana \u4eea\u8868\u677f\uff1a</p> <pre><code># \u4e0b\u8f7d\u4eea\u8868\u677f JSON\ncurl -O https://raw.githubusercontent.com/sustainable-computing-io/kepler-operator/v1alpha1/hack/dashboard/assets/kepler/dashboard.json\n</code></pre> <p>\u7136\u540e\u5bfc\u5165\u5230\u60a8\u7684 Grafana \u5b9e\u4f8b\uff1a</p> <ol> <li>\u6253\u5f00 Grafana</li> <li>\u8f6c\u5230 Dashboards \u2192 Import</li> <li>\u4e0a\u4f20 <code>dashboard.json</code> \u6587\u4ef6</li> <li>\u914d\u7f6e\u6570\u636e\u6e90\uff08Prometheus\uff09</li> </ol>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#grafana_1","title":"\u81ea\u5b9a\u4e49 Grafana \u67e5\u8be2","text":"<p>Grafana \u4eea\u8868\u677f\u7684\u6709\u7528 PromQL \u67e5\u8be2\uff1a</p> <pre><code># \u603b\u96c6\u7fa4\u529f\u8017\nsum(kepler_node_power_total)\n\n# \u6309\u8282\u70b9\u7684\u529f\u8017\nkepler_node_power_total\n\n# \u524d 10 \u4e2a\u529f\u8017\u6700\u9ad8\u7684 Pod\ntopk(10, kepler_pod_power_total)\n\n# \u529f\u8017\u7387\uff08\u74e6\u7279\uff09\nrate(kepler_node_energy_total[5m])\n\n# CPU \u4e0e\u529f\u8017\u76f8\u5173\u6027\nkepler_node_power_total / on(instance) kepler_node_cpu_usage_percentage * 100\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_6","title":"\u6545\u969c\u6392\u9664","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_7","title":"\u5e38\u89c1\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#powermonitor-daemonset","title":"\u95ee\u9898\uff1aPowerMonitor \u672a\u521b\u5efa DaemonSet","text":"<p>\u75c7\u72b6\uff1a</p> <ul> <li>PowerMonitor \u5b58\u5728\u4f46\u672a\u521b\u5efa DaemonSet</li> <li>\u72b6\u6001\u663e\u793a\u5e26\u6709\u9519\u8bef\u7684\u6761\u4ef6</li> </ul> <p>\u8bca\u65ad\uff1a</p> <pre><code># \u68c0\u67e5 PowerMonitor \u72b6\u6001\u548c\u6761\u4ef6\noc describe powermonitor power-monitor\n\n# \u68c0\u67e5 operator \u65e5\u5fd7\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li>\u68c0\u67e5 RBAC \u6743\u9650\uff1a</li> </ol> <pre><code># \u9a8c\u8bc1 operator \u670d\u52a1\u8d26\u6237\u6743\u9650\noc auth can-i create daemonsets --as=system:serviceaccount:openshift-operators:kepler-operator-controller-manager\n\n# \u5982\u679c\u6743\u9650\u7f3a\u5931\uff0c\u68c0\u67e5 ClusterRole\noc describe clusterrole kepler-operator-manager-role\n</code></pre> <ol> <li>\u9a8c\u8bc1\u8d44\u6e90\u914d\u989d\uff1a</li> </ol> <pre><code># \u68c0\u67e5\u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u914d\u989d\noc describe resourcequota -n power-monitor\n\n# \u68c0\u67e5\u914d\u989d\u662f\u5426\u963b\u6b62\u521b\u5efa\noc get events -n power-monitor | grep -i quota\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#pod","title":"\u95ee\u9898\uff1aPod \u672a\u5728\u8282\u70b9\u4e0a\u8c03\u5ea6","text":"<p>\u75c7\u72b6\uff1a</p> <ul> <li>DaemonSet \u5df2\u521b\u5efa\u4f46 Pod \u4fdd\u6301 Pending \u72b6\u6001</li> <li>Pod \u663e\u793a FailedScheduling \u4e8b\u4ef6</li> </ul> <p>\u8bca\u65ad\uff1a</p> <pre><code># \u68c0\u67e5 Pod \u72b6\u6001\u548c\u4e8b\u4ef6\noc get pods -n power-monitor\noc describe pods -n power-monitor\n\n# \u68c0\u67e5\u8282\u70b9\u6807\u7b7e\u548c\u6c61\u70b9\noc get nodes --show-labels\noc describe nodes | grep -i taint\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li>\u66f4\u65b0\u8282\u70b9\u9009\u62e9\u5668\uff1a</li> </ol> <pre><code># \u68c0\u67e5\u53ef\u7528\u7684\u8282\u70b9\u6807\u7b7e\noc get nodes --show-labels | grep kubernetes.io/os\n\n# \u66f4\u65b0 PowerMonitor nodeSelector\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"nodeSelector\": {\n          \"kubernetes.io/os\": \"linux\"\n        }\n      }\n    }\n  }\n}'\n</code></pre> <ol> <li>\u4e3a\u6709\u6c61\u70b9\u7684\u8282\u70b9\u6dfb\u52a0\u5bb9\u5fcd\u5ea6\uff1a</li> </ol> <pre><code># \u4e3a\u4e3b\u8282\u70b9\u6dfb\u52a0\u5bb9\u5fcd\u5ea6\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"deployment\": {\n        \"tolerations\": [\n          {\n            \"key\": \"node-role.kubernetes.io/master\",\n            \"operator\": \"Exists\",\n            \"effect\": \"NoSchedule\"\n          }\n        ]\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_8","title":"\u95ee\u9898\uff1a\u76d1\u63a7\u4e2d\u7f3a\u5c11\u6307\u6807","text":"<p>\u75c7\u72b6\uff1a</p> <ul> <li>Pod \u6b63\u5728\u8fd0\u884c\u4f46\u6307\u6807\u672a\u5728 OpenShift \u63a7\u5236\u53f0\u4e2d\u663e\u793a</li> <li>ServiceMonitor \u5b58\u5728\u4f46 Prometheus \u4e2d\u65e0\u6570\u636e</li> </ul> <p>\u8bca\u65ad\uff1a</p> <pre><code># \u68c0\u67e5 ServiceMonitor \u914d\u7f6e\noc get servicemonitor -n power-monitor -o yaml\n\n# \u68c0\u67e5\u670d\u52a1\u7aef\u70b9\noc get endpoints -n power-monitor\n\n# \u76f4\u63a5\u6d4b\u8bd5\u6307\u6807\u7aef\u70b9\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\ncurl http://localhost:9102/metrics | head -20\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li>\u9a8c\u8bc1\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\uff1a</li> </ol> <pre><code># \u68c0\u67e5\u662f\u5426\u542f\u7528\u4e86\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\noc -n openshift-monitoring get configmap cluster-monitoring-config -o yaml\n\n# \u68c0\u67e5\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7 Pod\noc get pods -n openshift-user-workload-monitoring\n</code></pre> <ol> <li>\u68c0\u67e5 ServiceMonitor \u6807\u7b7e\uff1a</li> </ol> <pre><code># \u786e\u4fdd ServiceMonitor \u5177\u6709\u6b63\u786e\u7684\u53d1\u73b0\u6807\u7b7e\noc patch servicemonitor kepler-exporter -n power-monitor --type='merge' -p='\n{\n  \"metadata\": {\n    \"labels\": {\n      \"app.kubernetes.io/name\": \"kepler-exporter\"\n    }\n  }\n}'\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_9","title":"\u95ee\u9898\uff1a\u9ad8\u8d44\u6e90\u4f7f\u7528\u7387","text":"<p>\u75c7\u72b6\uff1a</p> <ul> <li>Kepler Pod \u6d88\u8017\u8fc7\u591a CPU \u6216\u5185\u5b58</li> <li>\u96c6\u7fa4\u6027\u80fd\u4e0b\u964d</li> </ul> <p>\u8bca\u65ad\uff1a</p> <pre><code># \u68c0\u67e5\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\noc top pods -n power-monitor\n\n# \u68c0\u67e5\u5f53\u524d\u914d\u7f6e\noc get powermonitor power-monitor -o yaml | grep -A 10 config\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li>\u51cf\u5c11\u6307\u6807\u7c92\u5ea6\uff1a</li> </ol> <pre><code># \u4ec5\u51cf\u5c11\u5230\u8282\u70b9\u548c Pod \u6307\u6807\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"metricLevels\": [\"node\", \"pod\"],\n        \"sampleRate\": \"10s\"\n      }\n    }\n  }\n}'\n</code></pre> <ol> <li>\u9650\u5236\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\uff1a</li> </ol> <pre><code># \u51cf\u5c11\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"maxTerminated\": 100\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_10","title":"\u9ad8\u7ea7\u8c03\u8bd5","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_11","title":"\u542f\u7528\u8c03\u8bd5\u65e5\u5fd7","text":"<p>\u5bf9\u4e8e\u8be6\u7ec6\u7684\u6545\u969c\u6392\u9664\uff0c\u542f\u7528\u8c03\u8bd5\u65e5\u5fd7\uff1a</p> <pre><code># \u542f\u7528\u8c03\u8bd5\u65e5\u5fd7\noc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"logLevel\": \"debug\"\n      }\n    }\n  }\n}'\n\n# \u67e5\u770b\u8c03\u8bd5\u65e5\u5fd7\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter -f\n</code></pre> <p>\u8bb0\u4f4f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7981\u7528\u8c03\u8bd5\u65e5\u5fd7\uff1a</p> <pre><code>oc patch powermonitor power-monitor --type='merge' -p='\n{\n  \"spec\": {\n    \"kepler\": {\n      \"config\": {\n        \"logLevel\": \"info\"\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_12","title":"\u6536\u96c6\u8bca\u65ad\u4fe1\u606f","text":"<p>\u4e3a\u652f\u6301\u521b\u5efa\u8bca\u65ad\u811a\u672c\uff1a</p> <pre><code>#!/bin/bash\n# kepler-diagnostics.sh\n\necho \"=== Kepler \u8bca\u65ad ===\"\necho \"\u65e5\u671f\uff1a$(date)\"\necho \"\u96c6\u7fa4\uff1a$(oc cluster-info | head -1)\"\necho\n\necho \"=== PowerMonitor \u72b6\u6001 ===\"\noc get powermonitor power-monitor -o wide\necho\n\necho \"=== PowerMonitor \u6761\u4ef6 ===\"\noc describe powermonitor power-monitor | grep -A 20 \"Conditions:\"\necho\n\necho \"=== DaemonSet \u72b6\u6001 ===\"\noc get daemonset -n power-monitor\necho\n\necho \"=== Pod \u72b6\u6001 ===\"\noc get pods -n power-monitor -o wide\necho\n\necho \"=== \u6700\u8fd1\u4e8b\u4ef6 ===\"\noc get events -n power-monitor --sort-by='.lastTimestamp' | tail -10\necho\n\necho \"=== ServiceMonitor ===\"\noc get servicemonitor -n power-monitor\necho\n\necho \"=== Operator \u65e5\u5fd7\uff08\u6700\u540e 50 \u884c\uff09===\"\noc logs -n openshift-operators deployment/kepler-operator-controller-manager --tail=50\n</code></pre> <p>\u8fd0\u884c\uff1a</p> <pre><code>chmod +x kepler-diagnostics.sh\n./kepler-diagnostics.sh &gt; kepler-diagnostics-$(date +%Y%m%d-%H%M%S).log\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_13","title":"\u6027\u80fd\u8c03\u4f18","text":""},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_14","title":"\u63a8\u8350\u7684\u751f\u4ea7\u8bbe\u7f6e","text":"<p>\u5bf9\u4e8e\u6709\u6027\u80fd\u8003\u8651\u7684\u751f\u4ea7\u73af\u5883\uff1a</p> <pre><code>spec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]  # \u907f\u514d\u8fdb\u7a0b/\u5bb9\u5668\u7ea7\u522b\n      sampleRate: 10s            # \u51cf\u5c11\u91c7\u6837\u9891\u7387\n      maxTerminated: 500         # \u9650\u5236\u5185\u5b58\u4f7f\u7528\n    deployment:\n      nodeSelector:\n        node-role.kubernetes.io/worker: \"\"  # \u907f\u514d\u4e3b\u8282\u70b9\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_15","title":"\u8d44\u6e90\u9650\u5236","text":"<p>\u4e3a Kepler Pod \u8bbe\u7f6e\u8d44\u6e90\u9650\u5236\uff1a</p> <pre><code>spec:\n  kepler:\n    deployment:\n      resources:\n        limits:\n          cpu: 200m\n          memory: 256Mi\n        requests:\n          cpu: 100m\n          memory: 128Mi\n</code></pre>"},{"location":"zh/kepler-operator/configuration/monitoring-troubleshooting/#_16","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u60a8\u7ee7\u7eed\u9047\u5230\u95ee\u9898\uff1a</p> <ol> <li>\u68c0\u67e5\u65e5\u5fd7\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u8bca\u65ad\u811a\u672c</li> <li>\u641c\u7d22\u73b0\u6709\u95ee\u9898\uff0c\u5728 Kepler Operator \u4ed3\u5e93\u4e2d</li> <li>\u63d0\u4ea4\u65b0\u95ee\u9898\uff0c\u9644\u5e26\u8bca\u65ad\u4fe1\u606f</li> <li>\u52a0\u5165\u793e\u533a - \u67e5\u770b\u652f\u6301\u4e86\u89e3\u793e\u533a\u6e20\u9053</li> </ol>"},{"location":"zh/kepler-operator/migration/","title":"\u8fc1\u79fb\u6307\u5357\uff1a\u4ece Kepler CRD \u5230 PowerMonitor","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u5e2e\u52a9\u60a8\u4ece\u5df2\u5f03\u7528\u7684 Kepler CRD \u8fc1\u79fb\u5230\u73b0\u4ee3\u7684 PowerMonitor CRD\u3002PowerMonitor \u63d0\u4f9b\u589e\u5f3a\u7684\u914d\u7f6e\u9009\u9879\u3001\u6539\u8fdb\u7684\u8d44\u6e90\u7ba1\u7406\u548c\u66f4\u597d\u7684 OpenShift \u96c6\u6210\u3002</p>"},{"location":"zh/kepler-operator/migration/#_1","title":"\u8fc1\u79fb\u6982\u8ff0","text":""},{"location":"zh/kepler-operator/migration/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u8fc1\u79fb\uff1f","text":"<p>\u5f03\u7528\u901a\u77e5</p> <p>Kepler CRD \u5df2\u88ab\u5f03\u7528\uff0c\u5c06\u5728\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664\u3002\u8fc1\u79fb\u5230 PowerMonitor \u4ee5\u786e\u4fdd\u6301\u7eed\u652f\u6301\u5e76\u8bbf\u95ee\u65b0\u529f\u80fd\u3002</p> <p>PowerMonitor \u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u589e\u5f3a\u7684\u5b89\u5168\u914d\u7f6e</li> <li>\u6539\u8fdb\u7684\u8d44\u6e90\u7ba1\u7406</li> <li>\u66f4\u597d\u7684 OpenShift \u96c6\u6210</li> <li>\u66f4\u7cbe\u7ec6\u7684\u6307\u6807\u63a7\u5236</li> <li>\u79ef\u6781\u7684\u5f00\u53d1\u548c\u652f\u6301</li> </ul>"},{"location":"zh/kepler-operator/migration/#_3","title":"\u8fc1\u79fb\u5f71\u54cd","text":"<p>\u96f6\u5b95\u673a\u8fc1\u79fb\uff1a \u8fc1\u79fb\u8fc7\u7a0b\u5141\u8bb8\u60a8\u5728\u8fc7\u6e21\u671f\u95f4\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a CRD\uff0c\u786e\u4fdd\u6301\u7eed\u76d1\u63a7\u3002</p> <p>\u914d\u7f6e\u5dee\u5f02\uff1a \u4e00\u4e9b\u914d\u7f6e\u9009\u9879\u5df2\u66f4\u6539\u6216\u91cd\u65b0\u7ec4\u7ec7\u3002\u672c\u6307\u5357\u63d0\u4f9b\u4e86\u65b0\u65e7\u914d\u7f6e\u4e4b\u95f4\u7684\u6620\u5c04\u3002</p>"},{"location":"zh/kepler-operator/migration/#_4","title":"\u8fc1\u79fb\u524d\u8bc4\u4f30","text":""},{"location":"zh/kepler-operator/migration/#1","title":"\u6b65\u9aa4 1\uff1a\u6e05\u70b9\u5f53\u524d\u90e8\u7f72","text":"<p>\u8bb0\u5f55\u73b0\u6709\u7684 Kepler CRD \u914d\u7f6e\uff1a</p> <pre><code># \u5217\u51fa\u73b0\u6709\u7684 Kepler \u8d44\u6e90\noc get kepler --all-namespaces\n\n# \u5bfc\u51fa\u5f53\u524d\u914d\u7f6e\noc get kepler kepler -o yaml &gt; kepler-backup.yaml\n\n# \u4fdd\u5b58\u5f53\u524d DaemonSet \u914d\u7f6e\u4ee5\u4f9b\u53c2\u8003\noc get daemonset -n kepler -o yaml &gt; kepler-daemonset-backup.yaml\n</code></pre>"},{"location":"zh/kepler-operator/migration/#2","title":"\u6b65\u9aa4 2\uff1a\u5ba1\u89c6\u914d\u7f6e\u6620\u5c04","text":"<p>\u5e38\u89c1\u914d\u7f6e\u66f4\u6539\uff1a</p> Kepler CRD\uff08\u65e7\uff09 PowerMonitor CRD\uff08\u65b0\uff09 <code>spec.exporter.deployment.port</code> \u81ea\u52a8\u7ba1\u7406 <code>spec.exporter.config.logLevel</code> <code>spec.kepler.config.logLevel</code> <code>spec.nodeSelector</code> <code>spec.kepler.deployment.nodeSelector</code> <code>spec.tolerations</code> <code>spec.kepler.deployment.tolerations</code>"},{"location":"zh/kepler-operator/migration/#_5","title":"\u8fc1\u79fb\u6d41\u7a0b","text":""},{"location":"zh/kepler-operator/migration/#1-powermonitor","title":"\u6b65\u9aa4 1\uff1a\u521b\u5efa\u7b49\u6548\u7684 PowerMonitor","text":""},{"location":"zh/kepler-operator/migration/#_6","title":"\u793a\u4f8b\u8fc1\u79fb\uff1a\u57fa\u672c\u914d\u7f6e","text":"<p>\u65e7 Kepler CRD\uff1a</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: Kepler\nmetadata:\n  name: kepler\nspec:\n  exporter:\n    deployment:\n      port: 9102\n    config:\n      logLevel: info\n  nodeSelector:\n    kubernetes.io/os: linux\n</code></pre> <p>\u65b0 PowerMonitor CRD\uff1a</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n    deployment:\n      nodeSelector:\n        kubernetes.io/os: linux\n      security:\n        mode: none\n</code></pre>"},{"location":"zh/kepler-operator/migration/#_7","title":"\u793a\u4f8b\u8fc1\u79fb\uff1a\u9ad8\u7ea7\u914d\u7f6e","text":"<p>\u65e7 Kepler CRD\uff1a</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: Kepler\nmetadata:\n  name: kepler\nspec:\n  exporter:\n    config:\n      logLevel: warn\n  nodeSelector:\n    node-role.kubernetes.io/worker: \"\"\n  tolerations:\n  - key: node-role.kubernetes.io/master\n    operator: Exists\n    effect: NoSchedule\n</code></pre> <p>\u65b0 PowerMonitor CRD\uff1a</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]\n      sampleRate: 10s\n      maxTerminated: 500\n    deployment:\n      nodeSelector:\n        node-role.kubernetes.io/worker: \"\"\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      security:\n        mode: rbac\n</code></pre>"},{"location":"zh/kepler-operator/migration/#2-kepler-powermonitor","title":"\u6b65\u9aa4 2\uff1a\u5728\u73b0\u6709 Kepler \u65c1\u90e8\u7f72 PowerMonitor","text":"<p>\u5728\u4fdd\u6301\u65e7 Kepler CRD \u8fd0\u884c\u7684\u540c\u65f6\u90e8\u7f72 PowerMonitor\uff1a</p> <pre><code># \u521b\u5efa PowerMonitor \u914d\u7f6e\ncat &gt; power-monitor.yaml &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels: [node, pod, vm]\n      sampleRate: 5s\n    deployment:\n      security:\n        mode: none\nEOF\n\n# \u5e94\u7528 PowerMonitor\noc apply -f power-monitor.yaml\n</code></pre>"},{"location":"zh/kepler-operator/migration/#3-powermonitor","title":"\u6b65\u9aa4 3\uff1a\u9a8c\u8bc1 PowerMonitor \u529f\u80fd","text":"<p>\u786e\u4fdd PowerMonitor \u6b63\u5e38\u5de5\u4f5c\uff1a</p> <pre><code># \u68c0\u67e5 PowerMonitor \u72b6\u6001\noc get powermonitor power-monitor -o wide\n\n# \u9a8c\u8bc1 DaemonSet \u521b\u5efa\noc get daemonset -n power-monitor\n\n# \u68c0\u67e5 pod \u662f\u5426\u6b63\u5728\u8fd0\u884c\noc get pods -n power-monitor\n\n# \u6d4b\u8bd5\u6307\u6807\u7aef\u70b9\noc port-forward -n power-monitor svc/kepler-exporter 9103:9102 &amp;\ncurl http://localhost:9103/metrics | head -10\n</code></pre>"},{"location":"zh/kepler-operator/migration/#4","title":"\u6b65\u9aa4 4\uff1a\u66f4\u65b0\u76d1\u63a7\u914d\u7f6e","text":"<p>\u5982\u679c\u60a8\u6709\u73b0\u6709\u7684\u76d1\u63a7\u8bbe\u7f6e\uff0c\u8bf7\u66f4\u65b0\u5b83\u4ee5\u4f7f\u7528\u65b0\u7684 PowerMonitor\uff1a</p>"},{"location":"zh/kepler-operator/migration/#prometheus-servicemonitor","title":"Prometheus ServiceMonitor","text":"<p>\u4e3a\u65b0\u547d\u540d\u7a7a\u95f4\u66f4\u65b0\u6216\u521b\u5efa ServiceMonitor\uff1a</p> <pre><code>apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: kepler-exporter\n  namespace: power-monitor\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kepler-exporter\n  endpoints:\n  - port: http\n    path: /metrics\n</code></pre>"},{"location":"zh/kepler-operator/migration/#grafana","title":"Grafana \u4eea\u8868\u677f","text":"<p>\u66f4\u65b0 Grafana \u67e5\u8be2\u4ee5\u4f7f\u7528\u65b0\u670d\u52a1\uff1a</p> <pre><code># \u4ece\u4ee5\u4e0b\u67e5\u8be2\u66f4\u65b0\uff1a\n{__name__=~\"kepler_.*\", job=\"kepler\"}\n\n# \u5230\uff1a\n{__name__=~\"kepler_.*\", job=\"kepler-exporter\", namespace=\"power-monitor\"}\n</code></pre>"},{"location":"zh/kepler-operator/migration/#5-kepler-crd","title":"\u6b65\u9aa4 5\uff1a\u5220\u9664\u65e7 Kepler CRD","text":"<p>\u5728\u9a8c\u8bc1 PowerMonitor \u6b63\u5e38\u5de5\u4f5c\u540e\uff1a</p> <pre><code># \u5220\u9664\u65e7 Kepler \u8d44\u6e90\noc delete kepler kepler\n\n# \u6e05\u7406\u65e7\u547d\u540d\u7a7a\u95f4\uff08\u5982\u679c\u4e0d\u540c\uff09\noc delete namespace kepler\n\n# \u9a8c\u8bc1\u6e05\u7406\noc get kepler --all-namespaces\n</code></pre>"},{"location":"zh/kepler-operator/migration/#_8","title":"\u914d\u7f6e\u8fc1\u79fb\u53c2\u8003","text":""},{"location":"zh/kepler-operator/migration/#_9","title":"\u5b8c\u6574\u6620\u5c04\u8868","text":"\u65e7\u914d\u7f6e \u65b0\u914d\u7f6e \u6ce8\u91ca <code>spec.exporter.config.logLevel</code> <code>spec.kepler.config.logLevel</code> \u76f8\u540c\u503c <code>spec.exporter.deployment.port</code> \u81ea\u52a8\u7ba1\u7406 \u9ed8\u8ba4\u7aef\u53e3 9102 <code>spec.nodeSelector</code> <code>spec.kepler.deployment.nodeSelector</code> \u76f8\u540c\u683c\u5f0f <code>spec.tolerations</code> <code>spec.kepler.deployment.tolerations</code> \u76f8\u540c\u683c\u5f0f N/A <code>spec.kepler.config.metricLevels</code> \u65b0\uff1a\u63a7\u5236\u6307\u6807\u7c92\u5ea6 N/A <code>spec.kepler.config.sampleRate</code> \u65b0\uff1a\u63a7\u5236\u91c7\u6837\u9891\u7387 N/A <code>spec.kepler.deployment.security</code> \u65b0\uff1aRBAC \u548c\u5b89\u5168\u9009\u9879 N/A <code>spec.kepler.config.maxTerminated</code> \u65b0\uff1a\u63a7\u5236\u5df2\u7ec8\u6b62\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a"},{"location":"zh/kepler-operator/migration/#_10","title":"\u8fc1\u79fb\u811a\u672c","text":"<p>\u4f7f\u7528\u6b64\u811a\u672c\u81ea\u52a8\u5316\u8fc1\u79fb\uff1a</p> <pre><code>#!/bin/bash\n# migrate-kepler-to-powermonitor.sh\n\nset -e\n\nKEPLER_NAME=\"${1:-kepler}\"\nPOWERMONITOR_NAME=\"${2:-power-monitor}\"\n\necho \"\u5c06 Kepler CRD '${KEPLER_NAME}' \u8fc1\u79fb\u5230 PowerMonitor '${POWERMONITOR_NAME}'\"\n\n# \u5bfc\u51fa\u5f53\u524d Kepler \u914d\u7f6e\necho \"\u5bfc\u51fa\u5f53\u524d Kepler \u914d\u7f6e...\"\noc get kepler ${KEPLER_NAME} -o yaml &gt; kepler-backup-$(date +%Y%m%d-%H%M%S).yaml\n\n# \u63d0\u53d6\u914d\u7f6e\u503c\nLOG_LEVEL=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.exporter.config.logLevel}' 2&gt;/dev/null || echo \"info\")\nNODE_SELECTOR=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.nodeSelector}' 2&gt;/dev/null || echo \"{}\")\nTOLERATIONS=$(oc get kepler ${KEPLER_NAME} -o jsonpath='{.spec.tolerations}' 2&gt;/dev/null || echo \"[]\")\n\necho \"\u4f7f\u7528\u7b49\u6548\u914d\u7f6e\u521b\u5efa PowerMonitor...\"\n\n# \u521b\u5efa PowerMonitor\ncat &gt; powermonitor-migration.yaml &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: ${POWERMONITOR_NAME}\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\n    migrated-from: kepler-crd\nspec:\n  kepler:\n    config:\n      logLevel: ${LOG_LEVEL}\n      metricLevels: [node, pod, vm]\n      sampleRate: 5s\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\nEOF\n\n# \u5982\u679c\u5b58\u5728 nodeSelector \u5219\u6dfb\u52a0\nif [ \"${NODE_SELECTOR}\" != \"{}\" ]; then\n  echo \"      nodeSelector:\" &gt;&gt; powermonitor-migration.yaml\n  echo \"${NODE_SELECTOR}\" | sed 's/^/        /' &gt;&gt; powermonitor-migration.yaml\nfi\n\n# \u5982\u679c\u5b58\u5728 tolerations \u5219\u6dfb\u52a0\nif [ \"${TOLERATIONS}\" != \"[]\" ]; then\n  echo \"      tolerations:\" &gt;&gt; powermonitor-migration.yaml\n  echo \"${TOLERATIONS}\" | sed 's/^/      /' &gt;&gt; powermonitor-migration.yaml\nfi\n\n# \u5e94\u7528 PowerMonitor\noc apply -f powermonitor-migration.yaml\n\necho \"\u7b49\u5f85 PowerMonitor \u51c6\u5907\u5c31\u7eea...\"\nsleep 10\n\n# \u9a8c\u8bc1 PowerMonitor\nif oc get powermonitor ${POWERMONITOR_NAME} &amp;&gt;/dev/null; then\n  echo \"PowerMonitor \u521b\u5efa\u6210\u529f\uff01\"\n  echo \"\u9a8c\u8bc1 DaemonSet...\"\n\n  # \u7b49\u5f85 DaemonSet\n  timeout 60s bash -c \"while ! oc get daemonset -n power-monitor | grep -q kepler; do sleep 2; done\"\n\n  echo \"\u8fc1\u79fb\u5b8c\u6210\uff01\"\n  echo \"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u9a8c\u8bc1\uff1a\"\n  echo \"  oc get powermonitor ${POWERMONITOR_NAME}\"\n  echo \"  oc get pods -n power-monitor\"\n  echo \"\"\n  echo \"\u9a8c\u8bc1\u540e\uff0c\u5220\u9664\u65e7\u7684 Kepler CRD\uff1a\"\n  echo \"  oc delete kepler ${KEPLER_NAME}\"\nelse\n  echo \"\u8fc1\u79fb\u5931\u8d25\u3002\u68c0\u67e5 PowerMonitor \u914d\u7f6e\u3002\"\n  exit 1\nfi\n</code></pre> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a</p> <pre><code>chmod +x migrate-kepler-to-powermonitor.sh\n./migrate-kepler-to-powermonitor.sh [kepler-name] [powermonitor-name]\n</code></pre>"},{"location":"zh/kepler-operator/migration/#_11","title":"\u56de\u6eda\u7a0b\u5e8f","text":"<p>\u5982\u679c\u60a8\u9700\u8981\u56de\u6eda\u5230 Kepler CRD\uff1a</p>"},{"location":"zh/kepler-operator/migration/#1-kepler-crd","title":"\u6b65\u9aa4 1\uff1a\u91cd\u65b0\u521b\u5efa Kepler CRD","text":"<pre><code># \u5e94\u7528\u60a8\u5907\u4efd\u7684 Kepler \u914d\u7f6e\noc apply -f kepler-backup.yaml\n</code></pre>"},{"location":"zh/kepler-operator/migration/#2-powermonitor","title":"\u6b65\u9aa4 2\uff1a\u5220\u9664 PowerMonitor","text":"<pre><code># \u5220\u9664 PowerMonitor\noc delete powermonitor power-monitor\n\n# \u6e05\u7406\u547d\u540d\u7a7a\u95f4\noc delete namespace power-monitor\n</code></pre>"},{"location":"zh/kepler-operator/migration/#3-kepler-crd","title":"\u6b65\u9aa4 3\uff1a\u9a8c\u8bc1 Kepler CRD","text":"<pre><code># \u68c0\u67e5 Kepler \u72b6\u6001\noc get kepler kepler\noc get pods -n kepler\n</code></pre>"},{"location":"zh/kepler-operator/migration/#_12","title":"\u8fc1\u79fb\u540e\u4efb\u52a1","text":""},{"location":"zh/kepler-operator/migration/#_13","title":"\u66f4\u65b0\u6587\u6863","text":"<ul> <li>\u66f4\u65b0\u5185\u90e8\u6587\u6863\u4ee5\u5f15\u7528 PowerMonitor</li> <li>\u66f4\u65b0\u81ea\u52a8\u5316\u811a\u672c\u548c CI/CD \u6d41\u6c34\u7ebf</li> <li>\u57f9\u8bad\u56e2\u961f\u6210\u5458\u4f7f\u7528\u65b0\u914d\u7f6e\u9009\u9879</li> </ul>"},{"location":"zh/kepler-operator/migration/#_14","title":"\u76d1\u63a7\u96c6\u6210","text":"<ul> <li>\u4e3a\u65b0\u547d\u540d\u7a7a\u95f4\u548c\u670d\u52a1\u540d\u79f0\u66f4\u65b0\u544a\u8b66\u89c4\u5219</li> <li>\u9a8c\u8bc1\u76d1\u63a7\u7cfb\u7edf\u4e2d\u7684\u6307\u6807\u6536\u96c6</li> <li>\u4f7f\u7528\u65b0\u670d\u52a1\u53d1\u73b0\u66f4\u65b0\u4eea\u8868\u677f</li> </ul>"},{"location":"zh/kepler-operator/migration/#_15","title":"\u6e05\u7406","text":"<ul> <li>\u6210\u529f\u8fc1\u79fb\u540e\u5220\u9664\u5907\u4efd\u6587\u4ef6</li> <li>\u6e05\u7406\u65e7\u7684\u76d1\u63a7\u914d\u7f6e</li> <li>\u66f4\u65b0\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\uff08IaC\uff09\u6a21\u677f</li> </ul>"},{"location":"zh/kepler-operator/migration/#_16","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u5728\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff1a</p> <ol> <li>\u68c0\u67e5\u65e5\u5fd7\uff1a\u4f7f\u7528\u6545\u969c\u6392\u9664\u6307\u5357\u4e2d\u7684\u8bca\u65ad\u547d\u4ee4</li> <li>\u793e\u533a\u652f\u6301\uff1a\u67e5\u770b\u652f\u6301\u4e86\u89e3\u793e\u533a\u6e20\u9053</li> <li>\u62a5\u544a\u95ee\u9898\uff1a\u5728 Kepler Operator \u4ed3\u5e93\u4e2d\u521b\u5efa\u95ee\u9898</li> </ol>"},{"location":"zh/kepler-operator/openshift/","title":"OpenShift \u4e0a\u7684 Kepler Operator","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/kepler-operator/openshift/#_1","title":"\u6982\u8ff0","text":"<p>Kepler Operator \u63d0\u4f9b\u4e86\u4e00\u79cd\u5728 OpenShift \u96c6\u7fa4\u4e0a\u90e8\u7f72\u548c\u7ba1\u7406 Kepler\uff08Kubernetes \u9ad8\u6548\u529f\u7387\u7ea7\u522b\u5bfc\u51fa\u5668\uff09\u7684\u7b80\u5316\u65b9\u5f0f\u3002\u8be5 operator \u4f7f\u7528\u73b0\u4ee3\u7684 PowerMonitor \u81ea\u5b9a\u4e49\u8d44\u6e90\u5b9a\u4e49\u6765\u63d0\u4f9b\u589e\u5f3a\u7684\u914d\u7f6e\u9009\u9879\u548c\u6539\u8fdb\u7684\u8d44\u6e90\u7ba1\u7406\u3002</p>"},{"location":"zh/kepler-operator/openshift/#_2","title":"\u8fc1\u79fb\u901a\u77e5","text":"<p>\u91cd\u8981</p> <p>Kepler CRD \u5df2\u5f03\u7528\u5e76\u5c06\u5728\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664\u3002\u8bf7\u4e3a\u6240\u6709\u65b0\u90e8\u7f72\u4f7f\u7528 PowerMonitor\uff0c\u5e76\u8fc1\u79fb\u73b0\u6709\u5b89\u88c5\u4ee5\u786e\u4fdd\u6301\u7eed\u652f\u6301\u3002</p>"},{"location":"zh/kepler-operator/openshift/#_3","title":"\u5148\u51b3\u6761\u4ef6","text":"<p>\u5728\u5b89\u88c5 Kepler Operator \u4e4b\u524d\uff0c\u786e\u4fdd\u60a8\u5177\u6709\uff1a</p> <ul> <li>\u5177\u6709 <code>cluster-admin</code> \u6743\u9650\u7684 OpenShift \u96c6\u7fa4\u8bbf\u95ee\u6743\u9650</li> <li>\u5728\u96c6\u7fa4\u4e2d\u542f\u7528\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7</li> <li>\u8bbf\u95ee OperatorHub\uff08\u7528\u4e8e UI \u5b89\u88c5\uff09</li> <li>\u5b89\u88c5\u4e86 <code>oc</code> CLI \u5de5\u5177\uff08\u7528\u4e8e\u547d\u4ee4\u884c\u64cd\u4f5c\uff09</li> </ul> <p>Note</p> <p>\u60a8\u7684 operator \u5c06\u81ea\u52a8\u4f7f\u7528 kubeconfig \u6587\u4ef6\u4e2d\u7684\u5f53\u524d\u4e0a\u4e0b\u6587\uff08\u5373 <code>oc cluster-info</code> \u663e\u793a\u7684\u4efb\u4f55\u96c6\u7fa4\uff09\u3002</p>"},{"location":"zh/kepler-operator/openshift/#_4","title":"\u5b89\u88c5\u9009\u9879","text":"<p>\u9009\u62e9\u6700\u9002\u5408\u60a8\u5de5\u4f5c\u6d41\u7a0b\u7684\u5b89\u88c5\u65b9\u6cd5\uff1a</p>"},{"location":"zh/kepler-operator/openshift/#_5","title":"\u5feb\u901f\u5165\u95e8\u6307\u5357\uff08\u63a8\u8350\uff09","text":"<p>\u6700\u9002\u5408\u65b0\u63a5\u89e6 Kepler Operator \u5e76\u5e0c\u671b\u4f7f\u7528 OpenShift Web \u63a7\u5236\u53f0\u5feb\u901f\u542f\u52a8\u548c\u8fd0\u884c\u7684\u7528\u6237\u3002</p> <ul> <li>\u901a\u8fc7 OperatorHub \u5b89\u88c5</li> <li>\u521b\u5efa\u57fa\u672c PowerMonitor \u5b9e\u4f8b</li> <li>\u9a8c\u8bc1\u5b89\u88c5</li> <li>\u8bbf\u95ee\u521d\u59cb\u6307\u6807</li> </ul>"},{"location":"zh/kepler-operator/openshift/#cli","title":"CLI \u5b89\u88c5\u6307\u5357","text":"<p>\u975e\u5e38\u9002\u5408\u81ea\u52a8\u5316\u3001\u811a\u672c\u7f16\u5199\u6216\u504f\u597d\u547d\u4ee4\u884c\u5de5\u4f5c\u6d41\u7a0b\u7684\u7528\u6237\u3002</p> <ul> <li>\u901a\u8fc7\u547d\u4ee4\u884c\u5b89\u88c5 operator</li> <li>\u4f7f\u7528 YAML \u90e8\u7f72 PowerMonitor</li> <li>\u9a8c\u8bc1\u547d\u4ee4</li> <li>\u811a\u672c\u793a\u4f8b</li> </ul>"},{"location":"zh/kepler-operator/openshift/#_6","title":"\u5b89\u88c5\u540e","text":"<p>\u4e00\u65e6\u5b89\u88c5\u4e86 operator\uff0c\u8bf7\u63a2\u7d22\u8fd9\u4e9b\u6307\u5357\uff1a</p>"},{"location":"zh/kepler-operator/openshift/#_7","title":"\u914d\u7f6e\u6307\u5357","text":"<p>\u4e86\u89e3\u5982\u4f55\u81ea\u5b9a\u4e49\u60a8\u7684 Kepler \u90e8\u7f72\uff1a</p> <ul> <li>\u6307\u6807\u7ea7\u522b\u548c\u91c7\u6837\u7387</li> <li>\u5b89\u5168\u914d\u7f6e</li> <li>\u8d44\u6e90\u7ba1\u7406</li> <li>\u8282\u70b9\u9009\u62e9\u548c\u5bb9\u5fcd\u5ea6</li> <li>\u9ad8\u7ea7\u914d\u7f6e\u9009\u9879</li> </ul>"},{"location":"zh/kepler-operator/openshift/#_8","title":"\u76d1\u63a7\u548c\u6545\u969c\u6392\u9664","text":"<p>\u8bbe\u7f6e\u76d1\u63a7\u548c\u89e3\u51b3\u5e38\u89c1\u95ee\u9898\uff1a</p> <ul> <li>\u7528\u6237\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\u8bbe\u7f6e</li> <li>OpenShift \u6307\u6807\u4eea\u8868\u677f</li> <li>Grafana \u96c6\u6210</li> <li>\u5e38\u89c1\u6545\u969c\u6392\u9664\u573a\u666f</li> </ul>"},{"location":"zh/kepler-operator/openshift/#_9","title":"\u8fc1\u79fb","text":""},{"location":"zh/kepler-operator/openshift/#_10","title":"\u8fc1\u79fb\u6307\u5357","text":"<p>\u5982\u679c\u60a8\u6b63\u5728\u4ece\u5df2\u5f03\u7528\u7684 Kepler CRD \u5347\u7ea7\uff1a</p> <ul> <li>\u9010\u6b65\u8fc1\u79fb\u8fc7\u7a0b</li> <li>\u914d\u7f6e\u5bf9\u6bd4</li> <li>\u56de\u6eda\u7a0b\u5e8f</li> </ul>"},{"location":"zh/kepler-operator/openshift/#_11","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>\u9879\u76ee\u8d44\u6e90 - \u5176\u4ed6\u6587\u6863\u548c\u8d44\u6e90</li> <li>\u652f\u6301 - \u793e\u533a\u652f\u6301\u548c\u8d21\u732e\u6307\u5357</li> </ul>"},{"location":"zh/kepler-operator/openshift/cli-installation/","title":"CLI \u5b89\u88c5\u6307\u5357","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 OpenShift \u547d\u4ee4\u884c\u754c\u9762\u5b89\u88c5 Kepler Operator \u5e76\u521b\u5efa PowerMonitor \u5b9e\u4f8b\u3002\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u81ea\u52a8\u5316\u3001\u811a\u672c\u7f16\u5199\u548c\u504f\u597d\u57fa\u4e8e\u7ec8\u7aef\u5de5\u4f5c\u6d41\u7a0b\u7684\u7528\u6237\u3002</p>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<p>\u786e\u4fdd\u60a8\u5177\u6709\uff1a</p> <ul> <li>\u5df2\u5b89\u88c5\u5e76\u914d\u7f6e\u7684 <code>oc</code> CLI \u5de5\u5177</li> <li>OpenShift \u96c6\u7fa4\u4e0a\u7684\u96c6\u7fa4\u7ba1\u7406\u5458\u6743\u9650</li> <li>\u5f53\u524d\u4e0a\u4e0b\u6587\u6307\u5411\u76ee\u6807\u96c6\u7fa4\uff08<code>oc cluster-info</code>\uff09</li> </ul>"},{"location":"zh/kepler-operator/openshift/cli-installation/#1-operator","title":"\u6b65\u9aa4 1\uff1a\u5b89\u88c5 Operator","text":""},{"location":"zh/kepler-operator/openshift/cli-installation/#operator","title":"\u521b\u5efa Operator \u8ba2\u9605","text":"<p>\u4ece\u793e\u533a\u76ee\u5f55\u5b89\u88c5 Kepler Operator\uff1a</p> <pre><code>oc apply -f - &lt;&lt; EOF\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: kepler-operator\n  namespace: openshift-operators\nspec:\n  channel: alpha\n  name: kepler-operator\n  source: community-operators\n  sourceNamespace: openshift-marketplace\nEOF\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_2","title":"\u9a8c\u8bc1\u5b89\u88c5","text":"<p>\u7b49\u5f85 operator \u51c6\u5907\u5c31\u7eea\uff1a</p> <pre><code># \u68c0\u67e5\u8ba2\u9605\u72b6\u6001\noc get subscription kepler-operator -n openshift-operators\n\n# \u68c0\u67e5 ClusterServiceVersion (CSV)\noc get csv -n openshift-operators | grep kepler\n\n# \u7b49\u5f85 operator pod \u8fd0\u884c\noc get pods -n openshift-operators | grep kepler-operator\n</code></pre> <p>\u51c6\u5907\u5c31\u7eea\u65f6\u7684\u9884\u671f\u8f93\u51fa\uff1a</p> <pre><code>kepler-operator-controller-manager-xxx   2/2     Running   0   2m\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#2-powermonitor","title":"\u6b65\u9aa4 2\uff1a\u521b\u5efa PowerMonitor \u5b9e\u4f8b","text":""},{"location":"zh/kepler-operator/openshift/cli-installation/#powermonitor","title":"\u57fa\u672c PowerMonitor \u914d\u7f6e","text":"<p>\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u521b\u5efa PowerMonitor\uff1a</p> <pre><code>oc apply -f - &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n      staleness: 500ms\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\nEOF\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#powermonitor_1","title":"\u9a8c\u8bc1 PowerMonitor \u90e8\u7f72","text":"<p>\u68c0\u67e5 PowerMonitor \u662f\u5426\u5df2\u521b\u5efa\u5e76\u6b63\u5e38\u8fd0\u884c\uff1a</p> <pre><code># \u68c0\u67e5 PowerMonitor \u72b6\u6001\noc get powermonitor power-monitor -o wide\n\n# \u68c0\u67e5\u6761\u4ef6\noc describe powermonitor power-monitor\n\n# \u9a8c\u8bc1 DaemonSet \u521b\u5efa\noc get daemonset -n power-monitor\n\n# \u68c0\u67e5\u6240\u6709\u8282\u70b9\u4e0a\u7684 pod\noc get pods -n power-monitor -o wide\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#3","title":"\u6b65\u9aa4 3\uff1a\u9a8c\u8bc1\u547d\u4ee4","text":""},{"location":"zh/kepler-operator/openshift/cli-installation/#operator_1","title":"\u68c0\u67e5 Operator \u5065\u5eb7\u72b6\u6001","text":"<pre><code># Operator pod \u72b6\u6001\noc get pods -n openshift-operators | grep kepler-operator\n\n# Operator \u65e5\u5fd7\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#powermonitor_2","title":"\u68c0\u67e5 PowerMonitor \u8d44\u6e90","text":"<pre><code># PowerMonitor \u72b6\u6001\u548c\u6761\u4ef6\noc get powermonitor power-monitor -o yaml\n\n# DaemonSet \u8be6\u60c5\noc describe daemonset -n power-monitor\n\n# Pod \u65e5\u5fd7\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_3","title":"\u6d4b\u8bd5\u6307\u6807\u7aef\u70b9","text":"<pre><code># \u7aef\u53e3\u8f6c\u53d1\u5230\u6307\u6807\u7aef\u70b9\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102 &amp;\n\n# \u6d4b\u8bd5\u6307\u6807\uff08\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u4e2d\uff09\ncurl http://localhost:9102/metrics | head -20\n\n# \u505c\u6b62\u7aef\u53e3\u8f6c\u53d1\npkill -f \"port-forward.*9102\"\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_4","title":"\u81ea\u52a8\u5316\u811a\u672c","text":""},{"location":"zh/kepler-operator/openshift/cli-installation/#_5","title":"\u5b8c\u6574\u5b89\u88c5\u811a\u672c","text":"<p>\u5c06\u6b64\u4fdd\u5b58\u4e3a <code>install-kepler-operator.sh</code>\uff1a</p> <pre><code>#!/bin/bash\nset -e\n\necho \"Installing Kepler Operator...\"\n\n# \u5b89\u88c5 operator\noc apply -f - &lt;&lt; EOF\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: kepler-operator\n  namespace: openshift-operators\nspec:\n  channel: alpha\n  name: kepler-operator\n  source: community-operators\n  sourceNamespace: openshift-marketplace\nEOF\n\necho \"Waiting for operator to be ready...\"\nwhile ! oc get csv -n openshift-operators | grep -q kepler.*Succeeded; do\n  echo \"Waiting for CSV to be ready...\"\n  sleep 10\ndone\n\necho \"Creating PowerMonitor instance...\"\noc apply -f - &lt;&lt; EOF\napiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n    deployment:\n      security:\n        mode: none\nEOF\n\necho \"Waiting for DaemonSet to be ready...\"\nwhile ! oc get daemonset -n power-monitor 2&gt;/dev/null | grep -q kepler; do\n  echo \"Waiting for DaemonSet creation...\"\n  sleep 5\ndone\n\necho \"Installation complete!\"\necho \"Check status with: oc get powermonitor power-monitor\"\n</code></pre> <p>\u4f7f\u5176\u53ef\u6267\u884c\u5e76\u8fd0\u884c\uff1a</p> <pre><code>chmod +x install-kepler-operator.sh\n./install-kepler-operator.sh\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_6","title":"\u5378\u8f7d\u811a\u672c","text":"<p>\u5c06\u6b64\u4fdd\u5b58\u4e3a <code>uninstall-kepler-operator.sh</code>\uff1a</p> <pre><code>#!/bin/bash\nset -e\n\necho \"Removing PowerMonitor instance...\"\noc delete powermonitor power-monitor --ignore-not-found=true\n\necho \"Waiting for resources cleanup...\"\nsleep 10\n\necho \"Removing operator subscription...\"\noc delete subscription kepler-operator -n openshift-operators --ignore-not-found=true\n\necho \"Removing CSV...\"\noc delete csv -n openshift-operators $(oc get csv -n openshift-operators -o name | grep kepler) --ignore-not-found=true\n\necho \"Uninstall complete!\"\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_7","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u5bf9\u4e8e\u751f\u4ea7\u90e8\u7f72\uff0c\u5c06\u914d\u7f6e\u4fdd\u5b58\u5230\u6587\u4ef6\uff1a</p>"},{"location":"zh/kepler-operator/openshift/cli-installation/#powermonitor-productionyaml","title":"powermonitor-production.yaml","text":"<pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\nspec:\n  kepler:\n    config:\n      logLevel: warn\n      metricLevels: [node, pod]\n      sampleRate: 10s\n      staleness: 1s\n      maxTerminated: 1000\n    deployment:\n      security:\n        mode: rbac\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5e94\u7528\uff1a</p> <pre><code>oc apply -f powermonitor-production.yaml\n</code></pre>"},{"location":"zh/kepler-operator/openshift/cli-installation/#_8","title":"\u540e\u7eed\u6b65\u9aa4","text":"<ul> <li>\u914d\u7f6e\u6307\u5357 - \u9ad8\u7ea7\u914d\u7f6e\u9009\u9879</li> <li>\u76d1\u63a7\u8bbe\u7f6e - \u8bbe\u7f6e\u76d1\u63a7\u548c\u6545\u969c\u6392\u9664</li> </ul>"},{"location":"zh/kepler-operator/openshift/quickstart/","title":"\u5feb\u901f\u5165\u95e8\u6307\u5357\uff1aOpenShift OperatorHub","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u672c\u6307\u5357\u5c06\u6307\u5bfc\u60a8\u4f7f\u7528 OpenShift Web \u63a7\u5236\u53f0\u5b89\u88c5 Kepler Operator \u5e76\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a PowerMonitor \u5b9e\u4f8b\u3002</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#1-operator","title":"\u6b65\u9aa4 1\uff1a\u5b89\u88c5 Operator","text":""},{"location":"zh/kepler-operator/openshift/quickstart/#operatorhub","title":"\u8bbf\u95ee OperatorHub","text":"<p>\u5728 OpenShift Web \u63a7\u5236\u53f0\u4e2d\u5bfc\u822a\u5230 Operators \u2192 OperatorHub \u5e76\u641c\u7d22 \"kepler\"\uff1a</p> <p> OperatorHub \u4e2d\u53ef\u7528\u7684 Kepler operator</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#_1","title":"\u5f00\u59cb\u5b89\u88c5","text":"<p>\u70b9\u51fb Install \u5f00\u59cb\u5b89\u88c5\u8fc7\u7a0b\uff1a</p> <p> \u5f00\u59cb Kepler operator \u5b89\u88c5</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#_2","title":"\u76d1\u63a7\u8fdb\u5ea6","text":"<p>\u5728\u63a7\u5236\u53f0\u4e2d\u89c2\u5bdf\u5b89\u88c5\u8fdb\u5ea6\uff1a</p> <p> Operator \u5b89\u88c5\u6b63\u5728\u8fdb\u884c\u4e2d</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#_3","title":"\u9a8c\u8bc1\u5b89\u88c5","text":"<p>\u5b89\u88c5\u6210\u529f\u5b8c\u6210\u540e\uff1a</p> <p> Operator \u6210\u529f\u5b89\u88c5\u5e76\u51c6\u5907\u4f7f\u7528</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#2-powermonitor","title":"\u6b65\u9aa4 2\uff1a\u521b\u5efa PowerMonitor \u5b9e\u4f8b","text":""},{"location":"zh/kepler-operator/openshift/quickstart/#operator","title":"\u8bbf\u95ee Operator \u8be6\u60c5","text":"<p>\u5bfc\u822a\u5230 operator \u8be6\u60c5\u4ee5\u67e5\u770b\u53ef\u7528\u7684 API\uff1a</p> <p> Kepler operator \u8be6\u60c5\u663e\u793a PowerMonitor \u548c\u5df2\u5f03\u7528\u7684 Kepler API</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#powermonitor","title":"\u6253\u5f00 PowerMonitor \u9009\u9879\u5361","text":"<p>\u70b9\u51fb PowerMonitor \u9009\u9879\u5361\u4ee5\u8bbf\u95ee\u73b0\u4ee3 API\uff1a</p> <p> operator \u8be6\u60c5\u4e2d\u7684 PowerMonitor API \u9009\u9879\u5361</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#powermonitor_1","title":"\u521b\u5efa PowerMonitor","text":"<p>\u70b9\u51fb Create PowerMonitor \u6253\u5f00 YAML \u7f16\u8f91\u5668\uff1a</p> <p> OpenShift \u7f16\u8f91\u5668\u4e2d\u7684 PowerMonitor YAML \u914d\u7f6e</p> <p>\u4f7f\u7528\u6b64\u57fa\u672c\u914d\u7f6e\uff1a</p> <pre><code>apiVersion: kepler.system.sustainable.computing.io/v1alpha1\nkind: PowerMonitor\nmetadata:\n  name: power-monitor\n  labels:\n    app.kubernetes.io/name: powermonitor\n    app.kubernetes.io/instance: powermonitor\n    app.kubernetes.io/part-of: kepler-operator\nspec:\n  kepler:\n    config:\n      logLevel: info\n      metricLevels:\n      - node\n      - pod\n      - vm\n      sampleRate: 5s\n      staleness: 500ms\n      maxTerminated: 500\n    deployment:\n      security:\n        mode: none\n</code></pre>"},{"location":"zh/kepler-operator/openshift/quickstart/#3","title":"\u6b65\u9aa4 3\uff1a\u9a8c\u8bc1\u90e8\u7f72","text":""},{"location":"zh/kepler-operator/openshift/quickstart/#powermonitor_2","title":"\u68c0\u67e5 PowerMonitor \u72b6\u6001","text":"<p>\u67e5\u770b PowerMonitor \u5b9e\u4f8b\u8be6\u60c5\u548c\u72b6\u6001\uff1a</p> <p> PowerMonitor \u5b9e\u4f8b\u8be6\u60c5\u548c\u72b6\u6001\u6761\u4ef6</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#daemonset","title":"\u9a8c\u8bc1 DaemonSet","text":"<p>\u68c0\u67e5 DaemonSet \u662f\u5426\u5728\u60a8\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\uff1a</p> <pre><code>oc get powermonitor power-monitor -o wide\noc get daemonset -n power-monitor\noc get pods -n power-monitor -o wide\n</code></pre>"},{"location":"zh/kepler-operator/openshift/quickstart/#4","title":"\u6b65\u9aa4 4\uff1a\u8bbf\u95ee\u6307\u6807","text":""},{"location":"zh/kepler-operator/openshift/quickstart/#openshift","title":"OpenShift \u6307\u6807\u63a7\u5236\u53f0","text":"<p>\u5728 OpenShift \u63a7\u5236\u53f0\u4e2d\u5bfc\u822a\u5230 Observe \u2192 Metrics\uff1a</p> <p> \u663e\u793a\u529f\u8017\u6982\u89c8\u7684 OpenShift \u6307\u6807\u4eea\u8868\u677f</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#_4","title":"\u67e5\u770b\u529f\u7387\u6307\u6807","text":"<p>\u63a2\u7d22\u8be6\u7ec6\u7684\u529f\u8017\u6307\u6807\uff1a</p> <p> \u8be6\u7ec6\u7684 OpenShift \u6307\u6807\u4eea\u8868\u677f\uff0c\u5305\u542b\u529f\u8017\u56fe\u8868\u548c\u8282\u70b9\u4fe1\u606f</p>"},{"location":"zh/kepler-operator/openshift/quickstart/#_5","title":"\u540e\u7eed\u6b65\u9aa4","text":"<p>\u73b0\u5728\u60a8\u5df2\u7ecf\u8fd0\u884c\u4e86 Kepler\uff0c\u8bf7\u63a2\u7d22\u8fd9\u4e9b\u6307\u5357\uff1a</p> <ul> <li>\u914d\u7f6e\u6307\u5357 - \u81ea\u5b9a\u4e49\u60a8\u7684\u90e8\u7f72</li> <li>\u76d1\u63a7\u8bbe\u7f6e - \u9ad8\u7ea7\u76d1\u63a7\u548c Grafana</li> <li>\u6545\u969c\u6392\u9664 - \u5e38\u89c1\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848</li> </ul>"},{"location":"zh/kepler-operator/openshift/quickstart/#_6","title":"\u5feb\u901f\u53c2\u8003","text":""},{"location":"zh/kepler-operator/openshift/quickstart/#_7","title":"\u5e38\u7528\u547d\u4ee4","text":"<pre><code># \u68c0\u67e5 PowerMonitor \u72b6\u6001\noc get powermonitor power-monitor\n\n# \u67e5\u770b operator \u65e5\u5fd7\noc logs -n openshift-operators deployment/kepler-operator-controller-manager\n\n# \u68c0\u67e5 Kepler pod \u65e5\u5fd7\noc logs -n power-monitor -l app.kubernetes.io/name=kepler-exporter\n\n# \u6d4b\u8bd5\u6307\u6807\u7aef\u70b9\noc port-forward -n power-monitor svc/kepler-exporter 9102:9102\ncurl http://localhost:9102/metrics\n</code></pre>"},{"location":"zh/project/contributing/","title":"\u8d21\u732e","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p> <p>\u6211\u4eec\u6b22\u8fce\u793e\u533a\u5bf9 Kepler \u7684\u5404\u79cd\u8d21\u732e\uff01</p> <p>\u6709\u5173\u5982\u4f55\u5f00\u59cb\u7684\u6df1\u5165\u6307\u5357\uff0c\u8bf7\u67e5\u770b\u8fd9\u91cc\u7684\u8d21\u732e\u6307\u5357\u3002</p>"},{"location":"zh/project/contributing/#kepler","title":"Kepler \u91c7\u7528\u8005","text":"<p>\u60a8\u548c\u60a8\u7684\u7ec4\u7ec7\u6b63\u5728\u4f7f\u7528 Kepler\uff1f\u592a\u68d2\u4e86\u3002\u6211\u4eec\u5f88\u4e50\u610f\u542c\u5230\u60a8\u7684\u58f0\u97f3\uff01\ud83d\udc9a</p> <p>\u8fd9\u91cc\u7684 yaml \u6587\u4ef6\u5305\u542b\u6240\u6709 Kepler \u91c7\u7528\u8005\u7684\u5217\u8868\u3002 \u5982\u679c\u60a8\u60f3\u5c06\u60a8\u7684\u7ec4\u7ec7\u6dfb\u52a0\u5230 Kepler \u7684\u5217\u8868\u4e2d\uff0c\u53ea\u9700\u5728\u90a3\u91cc\u6dfb\u52a0\u4e00\u4e2a\u6761\u76ee\uff0c\u5408\u5e76\u540e\u60a8\u5c06\u5728Kepler \u91c7\u7528\u8005\u4e0b\u627e\u5230\u3002</p>"},{"location":"zh/project/contributing/#_2","title":"\u6e32\u67d3\u91c7\u7528\u8005","text":"<p>\u4f5c\u4e3a\u5c06\u7ec4\u7ec7\u6dfb\u52a0\u5230 Kepler \u91c7\u7528\u8005\u9875\u9762\u7684\u4e00\u90e8\u5206\uff0c\u5f53data/adopters.yaml\u66f4\u65b0\u65f6\uff0c\u5fc5\u987b\u5b89\u88c5 gomplate\u3002 Kepler \u7f51\u7ad9\u4f7f\u7528\u5b83\u6765\u6b63\u786e\u6e32\u67d3 Kepler \u91c7\u7528\u8005\u9875\u9762\u3002</p> <p>Note</p> <p>\u53ea\u6709\u5728\u4f5c\u4e3a\u5c06\u7ec4\u7ec7\u6dfb\u52a0\u5230 Kepler \u91c7\u7528\u8005\u9875\u9762\u7684\u4e00\u90e8\u5206\u800c\u66f4\u65b0data/adopters.yaml\u65f6\uff0c\u624d\u9700\u8981\u8fd9\u4e9b\u6b65\u9aa4\u3002</p> <ol> <li> <p>\u5b89\u88c5 pkgx</p> <pre><code>curl -Ssf https://pkgx.sh | sh\n</code></pre> </li> <li> <p>\u5b89\u88c5 gomplate</p> <pre><code>pkgx +gomplate.ca^v3.11.7\n</code></pre> </li> <li> <p>\u8f93\u5165\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u6765\u66f4\u65b0 PATH\u3002\u793a\u4f8b\uff1a</p> <pre><code>PATH=\"$HOME/.pkgx/gomplate.ca/v3.11.7/bin${PATH:+:$PATH}\"\n</code></pre> </li> <li> <p>\u4f7f\u7528 data/adopters.yaml \u4e2d\u7684\u6570\u636e\u66f4\u65b0\u91c7\u7528\u8005\u9875\u9762</p> <pre><code>gomplate -d adopters=./data/adopters.yaml -f templates/adopters.md -o docs/project/adopters.md\n</code></pre> </li> </ol>"},{"location":"zh/project/contributing/#_3","title":"\u6dfb\u52a0\u60a8\u7684\u7ec4\u7ec7","text":"<p>\u8981\u8fd9\u6837\u505a\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li>Fork kepler-doc \u4ed3\u5e93\u3002</li> <li>\u4f7f\u7528 <code>git clone https://github.com/&lt;YOUR-GH-USERNAME&gt;/kepler-doc.git</code> \u5728\u672c\u5730\u514b\u9686\u5b83\u3002</li> <li>\uff08\u53ef\u9009\uff09\u5c06\u60a8\u7ec4\u7ec7\u7684 logo \u6dfb\u52a0\u5230 docs/fig/logos\u3002\u597d\u7684\u505a\u6cd5\u662f\u5c06 logo \u547d\u540d\u4e3a\u4f8b\u5982 MY-ORG.png\uff08=&gt; docs/fig/logos/default.svg \u662f Kepler logo\uff0c\u5f53\u672a\u63d0\u4f9b\u7ec4\u7ec7 logo \u65f6\u4f7f\u7528\uff09\u3002</li> <li> <p>\u5411 YAML \u6587\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u6761\u76ee\uff0c\u5305\u542b\u60a8\u7ec4\u7ec7\u7684\u540d\u79f0\u3001\u94fe\u63a5\u5230\u5176\u7f51\u7ad9\u7684 url \u548c logo \u7684\u8def\u5f84\u3002\u793a\u4f8b\uff1a</p> <pre><code>    - name: Kepler\n      url: https://sustainable-computing.io/\n      logo: logos/kepler.svg\n</code></pre> </li> <li> <p>\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9a8c\u8bc1 Kepler \u91c7\u7528\u8005\u9875\u9762\u6b63\u786e\u66f4\u65b0\uff08\u6709\u5173\u5982\u4f55\u4ece\u6784\u5efa\u9884\u89c8\u6587\u6863\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5b89\u88c5 MkDocs\uff09\uff1a</p> <pre><code>mkdocs build\nmkdocs server\n</code></pre> </li> <li> <p>\u5bf9\u66f4\u6539\u6ee1\u610f\u540e\uff0c\u4f7f\u7528 <code>git add -A</code> \u6dfb\u52a0\u66f4\u6539\u7684\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 <code>git commit -s -m \"Add MY-ORG to adopters\"</code> \u63d0\u4ea4\uff08\u9700\u8981\u63d0\u4ea4\u7b7e\u540d\uff0c\u8bf7\u53c2\u9605 kepler \u9879\u76ee\u7684 DCO\uff09\u3002</p> </li> <li>\u4f7f\u7528 <code>git push origin main</code> \u63a8\u9001\u63d0\u4ea4\u3002</li> <li>\u5411 kepler-doc \u6253\u5f00 Pull Request</li> </ol>"},{"location":"zh/project/contributing/#_4","title":"\u6587\u6863\u7ffb\u8bd1","text":"<p>Kepler \u6b22\u8fce\u8d21\u732e\u5c06\u6211\u4eec\u7684\u6587\u6863\u7ffb\u8bd1\u6210\u4e0d\u540c\u8bed\u8a00\uff0c\u4ee5\u4fbf\u5168\u7403\u5f00\u53d1\u8005\u548c\u8fd0\u7ef4\u4eba\u5458\u793e\u533a\u90fd\u80fd\u8bbf\u95ee\uff01</p>"},{"location":"zh/project/contributing/#_5","title":"\u7ffb\u8bd1\u6d41\u7a0b\u6982\u8ff0","text":"<p>\u6211\u4eec\u7684\u6587\u6863\u9075\u5faa\u56fd\u9645\u5316 (i18n) \u7ea6\u5b9a\uff0c\u4f7f\u7528\u8bed\u8a00\u540e\u7f00\uff1a</p> <ul> <li>\u82f1\u6587\uff08\u539f\u59cb\uff09\uff1a<code>docs/path/to/file.md</code></li> <li>\u4e2d\u6587\uff1a<code>docs/path/to/file.zh.md</code></li> <li>\u5176\u4ed6\u8bed\u8a00\uff1a<code>docs/path/to/file.[LANG_CODE].md</code></li> </ul>"},{"location":"zh/project/contributing/#_6","title":"\u5f00\u59cb\u7ffb\u8bd1","text":""},{"location":"zh/project/contributing/#1-ai","title":"1. \u4f7f\u7528 AI \u7ffb\u8bd1\u52a9\u624b","text":"<p>\u4e3a\u4e86\u9ad8\u6548\u4e14\u51c6\u786e\u7684\u6280\u672f\u7ffb\u8bd1\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u6211\u4eec\u4e13\u95e8\u7684 AI \u7ffb\u8bd1\u63d0\u793a\u3002\u8fd9\u786e\u4fdd\uff1a</p> <ul> <li>\u2705 \u6280\u672f\u51c6\u786e\u6027 - \u4fdd\u7559 API \u540d\u79f0\u3001\u547d\u4ee4\u548c\u4ee3\u7801\u5757</li> <li>\u2705 \u672f\u8bed\u4e00\u81f4\u6027 - \u5728\u6587\u6863\u95f4\u4fdd\u6301\u6280\u672f\u672f\u8bed\u4e00\u81f4</li> <li>\u2705 \u683c\u5f0f\u6b63\u786e - \u4fdd\u6301 markdown \u7ed3\u6784\u548c\u8bed\u6cd5\u9ad8\u4eae</li> <li>\u2705 \u8d28\u91cf\u9a8c\u8bc1 - \u751f\u6210\u8d28\u91cf\u68c0\u67e5\u62a5\u544a</li> </ul> <p>\ud83d\udccb \u7ffb\u8bd1\u52a9\u624b\u63d0\u793a\uff1aTRANSLATOR.md</p>"},{"location":"zh/project/contributing/#2","title":"2. \u8d28\u91cf\u4fdd\u8bc1\u6d41\u7a0b","text":"<p>\u6bcf\u4e2a\u7ffb\u8bd1\u90fd\u5e94\u5305\u542b\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\u4ee5\u9a8c\u8bc1\u51c6\u786e\u6027\uff1a</p> <p>\u6bcf\u4e2a\u7ffb\u8bd1\u751f\u6210\u7684\u6587\u4ef6\uff1a</p> <pre><code>docs/path/to/file.md          # \u539f\u59cb\u82f1\u6587\ndocs/path/to/file.zh.md       # \u4e2d\u6587\u7ffb\u8bd1\ndocs/path/to/file.zh-qc.md    # \u8d28\u91cf\u68c0\u67e5\u62a5\u544a\n</code></pre> <p>\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\uff08<code>.zh-qc.md</code>\uff09\u5305\u542b\uff1a</p> <ul> <li>\u539f\u59cb\u5185\u5bb9\u4e0e\u9006\u5411\u7ffb\u8bd1\u5185\u5bb9\u7684\u6bd4\u8f83</li> <li>\u6280\u672f\u51c6\u786e\u6027\u8bc4\u4f30</li> <li>\u683c\u5f0f\u548c\u7ed3\u6784\u9a8c\u8bc1</li> <li>\u6279\u51c6/\u4fee\u8ba2\u5efa\u8bae</li> </ul>"},{"location":"zh/project/contributing/#3","title":"3. \u7ffb\u8bd1\u6307\u5357","text":"<p>\u2705 \u5e94\u8be5\u505a\u7684\uff1a</p> <ul> <li>\u4fdd\u7559\u6240\u6709\u6280\u672f\u6807\u8bc6\u7b26\uff08API \u540d\u79f0\u3001\u547d\u4ee4\u3001URL\uff09</li> <li>\u7ef4\u62a4 markdown \u683c\u5f0f\u548c\u4ee3\u7801\u5757\u8bed\u6cd5</li> <li>\u5728\u6587\u6863\u5185\u90e8\u548c\u8de8\u6587\u6863\u4fdd\u6301\u672f\u8bed\u4e00\u81f4\u6027</li> <li>\u5305\u542b\u5173\u4e8e AI \u7ffb\u8bd1\u7684\u6cd5\u5b9a\u8b66\u544a</li> <li>\u4e3a\u9a8c\u8bc1\u751f\u6210\u8d28\u91cf\u68c0\u67e5\u62a5\u544a</li> </ul> <p>\u274c \u4e0d\u5e94\u8be5\u505a\u7684\uff1a</p> <ul> <li>\u7ffb\u8bd1\u6280\u672f\u547d\u4ee4\u3001API \u7aef\u70b9\u6216\u4ee3\u7801\u7247\u6bb5</li> <li>\u4fee\u6539\u6587\u4ef6\u8def\u5f84\u3001\u4ed3\u5e93 URL \u6216\u5916\u90e8\u94fe\u63a5</li> <li>\u66f4\u6539\u6587\u6863\u7ed3\u6784\u6216\u6807\u9898\u5c42\u6b21</li> <li>\u8df3\u8fc7\u8d28\u91cf\u9a8c\u8bc1\u6b65\u9aa4</li> </ul>"},{"location":"zh/project/contributing/#4","title":"4. \u6cd5\u5b9a\u8b66\u544a\u8981\u6c42","text":"<p>\u6240\u6709\u7ffb\u8bd1\u6587\u6863\u5fc5\u987b\u5728\u5f00\u5934\u5305\u542b\u6b64\u8b66\u544a\uff1a</p> <pre><code>!!! warning \"\u673a\u5668\u7ffb\u8bd1\u58f0\u660e\"\n    \u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 [Kepler \u6587\u6863\u9879\u76ee](https://github.com/sustainable-computing-io/kepler-doc/issues) \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002\n</code></pre>"},{"location":"zh/project/contributing/#_7","title":"\u8d21\u732e\u60a8\u7684\u7ffb\u8bd1","text":""},{"location":"zh/project/contributing/#_8","title":"\u5206\u6b65\u6d41\u7a0b\uff1a","text":"<ol> <li>Fork \u548c\u514b\u9686</li> </ol> <pre><code>git clone https://github.com/&lt;YOUR-USERNAME&gt;/kepler-doc.git\ncd kepler-doc\n</code></pre> <ol> <li>\u521b\u5efa\u7ffb\u8bd1\u5206\u652f</li> </ol> <pre><code>git checkout -b translate-[language]-[document-name]\n</code></pre> <ol> <li>\u751f\u6210\u7ffb\u8bd1</li> <li>\u4f7f\u7528 AI \u7ffb\u8bd1\u52a9\u624b</li> <li>\u9075\u5faa\u8d28\u91cf\u4fdd\u8bc1\u6d41\u7a0b</li> <li> <p>\u786e\u4fdd\u751f\u6210\u6240\u6709\u6587\u4ef6\uff08<code>.zh.md</code> + <code>.zh-qc.md</code>\uff09</p> </li> <li> <p>\u5ba1\u67e5\u548c\u6d4b\u8bd5</p> </li> </ol> <pre><code>mkdocs build\nmkdocs serve\n</code></pre> <p>\u5728 <code>http://localhost:8000</code> \u9884\u89c8\u60a8\u7684\u7ffb\u8bd1</p> <ol> <li>\u63d0\u4ea4\u66f4\u6539</li> </ol> <pre><code>git add docs/path/to/file.zh.md docs/path/to/file.zh-qc.md\ngit commit -s -m \"Add Chinese translation for [document-name]\n\n- Translate docs/path/to/file.md to Chinese\n- Include quality check report for validation\n- Follow i18n conventions with .zh.md suffix\"\n</code></pre> <ol> <li>\u6253\u5f00 Pull Request</li> <li>\u5305\u542b\u7ffb\u8bd1\u548c\u8d28\u91cf\u68c0\u67e5\u6587\u4ef6</li> <li>\u5728 PR \u63cf\u8ff0\u4e2d\u5f15\u7528\u8d28\u91cf\u68c0\u67e5\u62a5\u544a\u53d1\u73b0</li> <li>\u63d0\u53ca\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u6280\u672f\u672f\u8bed</li> </ol>"},{"location":"zh/project/contributing/#_9","title":"\u7ffb\u8bd1\u4f18\u5148\u7ea7","text":"<p>\u9ad8\u4f18\u5148\u7ea7\u6587\u6863\uff1a</p> <ul> <li>\u5b89\u88c5\u6307\u5357\uff08<code>docs/kepler/installation/</code>\uff09</li> <li>\u4f7f\u7528\u6587\u6863\uff08<code>docs/kepler/usage/</code>\uff09</li> <li>\u914d\u7f6e\u6307\u5357\uff08<code>docs/kepler-operator/</code>\uff09</li> </ul> <p>\u4e2d\u7b49\u4f18\u5148\u7ea7\uff1a</p> <ul> <li>\u5f00\u53d1\u8005\u6587\u6863\uff08<code>docs/kepler/developer/</code>\uff09</li> <li>\u67b6\u6784\u548c\u8bbe\u8ba1\u6587\u6863\uff08<code>docs/archive/design/</code>\uff09</li> </ul>"},{"location":"zh/project/contributing/#_10","title":"\u8bed\u8a00\u652f\u6301","text":"<p>\u5f53\u524d\u652f\u6301\u7684\u8bed\u8a00\uff1a</p> <ul> <li>\u4e2d\u6587\uff1a<code>.zh.md</code> \u540e\u7f00</li> </ul> <p>\u60f3\u8981\u6dfb\u52a0\u65b0\u8bed\u8a00\uff1f</p> <ol> <li>\u67e5\u770b mkdocs.yml i18n \u914d\u7f6e</li> <li>\u6253\u5f00 issue \u8ba8\u8bba\u8bed\u8a00\u4ee3\u7801\u548c\u5bfc\u822a\u7ed3\u6784</li> <li>\u4f7f\u7528\u9002\u5f53\u7684\u8bed\u8a00\u540e\u7f00\u9075\u5faa\u76f8\u540c\u6d41\u7a0b</li> </ol>"},{"location":"zh/project/contributing/#_11","title":"\u7ffb\u8bd1\u7ef4\u62a4","text":"<p>\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5e94\u66f4\u65b0\u7ffb\u8bd1\uff1a</p> <ul> <li>\u539f\u59cb\u82f1\u6587\u6587\u6863\u53d1\u751f\u91cd\u5927\u66f4\u6539</li> <li>\u6280\u672f API \u6216\u547d\u4ee4\u88ab\u4fee\u6539</li> <li>\u6dfb\u52a0\u5f71\u54cd\u8bb0\u5f55\u7a0b\u5e8f\u7684\u65b0\u529f\u80fd</li> </ul> <p>\u4e13\u4e1a\u63d0\u793a\uff1a\u5173\u6ce8\u4ed3\u5e93\u4ee5\u4e86\u89e3\u6709\u7ffb\u8bd1\u7684\u82f1\u6587\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u4ee5\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff01</p>"},{"location":"zh/project/contributing/#_12","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>\u5173\u4e8e\u7ffb\u8bd1\u6d41\u7a0b\u7684\u95ee\u9898\uff1aGitHub Discussions</li> <li>\u62a5\u544a\u7ffb\u8bd1\u9519\u8bef\uff1aGitHub Issues</li> <li>\u6280\u672f\u5185\u5bb9\u6f84\u6e05\uff1a\u4e3b\u8981 Kepler \u4ed3\u5e93</li> </ul> <p>\u611f\u8c22\u60a8\u5e2e\u52a9\u4f7f Kepler \u6587\u6863\u5728\u5168\u4e16\u754c\u90fd\u80fd\u8bbf\u95ee\uff01\ud83c\udf0d</p>"},{"location":"zh/project/resources/","title":"Resources","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/project/resources/#_1","title":"\u6f14\u8bb2\u548c\u6f14\u793a","text":"<p>\u6211\u4eec\u975e\u5e38\u611f\u8c22\u6765\u81ea\u793e\u533a\u7684\u5173\u4e8e\u5f00\u666e\u52d2\u7684\u8bb2\u5ea7\u548c\u6f14\u793a\u3002\u5982\u679c\u60a8\u505a\u4e86\u6f14\u793a\u6216\u5f15\u7528\u5f00\u666e\u52d2\u7684\u6f14\u793a\uff0c\u8bf7\u6253\u5f00PR\u5c06\u5176\u6dfb\u52a0\u5230\u6b64\u9875\u9762\uff01</p>"},{"location":"zh/project/resources/#_2","title":"\u6f14\u793a","text":"<p>\u4e0b\u9762\u7684\u5217\u8868\u5305\u542b\u6f14\u793akepler\u3001\u5176\u529f\u80fd\u4ee5\u53ca\u5982\u4f55\u6536\u96c6\u5404\u79cdKubernetes\u8d44\u6e90\u7684\u80fd\u91cf\u6307\u6807\u7684\u8bb2\u5ea7\u3002</p> <ul> <li> <p>\"Sustainability the Container Native Way\", Huamin Chen (Red Hat) &amp; Chen Wang (IBM), Open Source Summit NA 2022 [slides]</p> </li> <li> <p>\"Sustainability Research the Cloud Native Way\", Chen Wang (IBM) &amp; Huamin Chen (Red Hat), KubeCon NA 2022 [slides]</p> </li> <li> <p>\"Sustainability in Computing: Energy Efficient Placements of Edge Workloads\", Parul Singh &amp; Kaiyi Liu (Red Hat), Kubernetes Edge Day NA 2022 [slides]</p> </li> <li> <p>\"Green(ing) CI/CD: A Sustainability Journey with GitOps\", Niki Manoledaki (Weaveworks), GitOpsCon NA 2022 [slides]</p> </li> </ul>"},{"location":"zh/project/resources/#kepler","title":"Kepler\u53c2\u8003\u8d44\u6599","text":"<p>\u4e0b\u9762\u7684\u5217\u8868\u5305\u542b\u4e86\u5728\u8ba8\u8bba\u80fd\u6e90\u6548\u7387\u548c\u4e91\u539f\u751f\u73af\u5883\u53ef\u6301\u7eed\u6027\u65f6\u63d0\u5230\u5f00\u666e\u52d2\u7684\u8c08\u8bdd\u3002</p> <ul> <li> <p>\"Panel Discussion: Moving Towards Environmentally Sustainable Operations with Cloud Native Tools\", Niki Manoledaki (Weaveworks), Chris Lavery (Weaveworks), Marlow Weston (Intel), William Caban (Red Hat) [recording]</p> </li> <li> <p>\"How to Get Involved in CNCF Environmental Sustainability TAG\", Marlow Weston (Intel) &amp; Huamin Chen (Red Hat), KubeCon NA 22 [recording]</p> </li> <li> <p>\"Smart Green Computing Cloud Native Operations\", William Caban &amp; Federico Rossi (Red Hat), KubeCon NA 2022 [recording]</p> </li> <li> <p>\u901a\u8fc7Istio\u3001Kepler\u548c\u667a\u80fd\u8c03\u5ea6\u5b9e\u73b0\u4f18\u5316\u7684\u5fae\u670d\u52a1\u6027\u80fd\u548c\u53ef\u6301\u7eed\u6027 | Towards Optimized Microservices Performance &amp; Sustainability via Istio, Kepler and Smart Scheduling - Peng Hui Jiang &amp; Kevin Su, IBM &amp; Yingchun Guo, Intel, KubeCon China 2023 link</p> </li> <li> <p>\u5728\u7279\u5b9a\u5e73\u53f0\u4e0a\uff0c\u5f00\u666e\u52d2\u51c6\u786e\u5417\uff1f | Is Kepler Accurate on Specific Platforms? - Jie Ren &amp; Ken Lu, Intel, KubeCon China 2023 link</p> </li> <li> <p>kepler 101, Sam Yuan(IBM), KubeCon China 2023 kiosk</p> </li> <li> <p>kepler \u90e8\u7f72, Sam Yuan(IBM), KubeCon China 2023 kiosk</p> </li> <li> <p>kepler \u6784\u5efa, Sam Yuan(IBM), KubeCon China 2023 kiosk</p> </li> <li> <p>kepler \u80fd\u8017\u6a21\u578b\u8bad\u7ec3, Sam Yuan(IBM), KubeCon China 2023 kiosk, recording in Chinese</p> </li> </ul>"},{"location":"zh/project/support/","title":"\u652f\u6301","text":"<p>\u673a\u5668\u7ffb\u8bd1\u58f0\u660e</p> <p>\u672c\u6587\u6863\u7531 AI \u8bed\u8a00\u6a21\u578b (Claude) \u4ece\u82f1\u6587\u81ea\u52a8\u7ffb\u8bd1\u800c\u6210\u3002\u5982\u53d1\u73b0\u7ffb\u8bd1\u9519\u8bef\u6216\u4e0d\u51c6\u786e\u4e4b\u5904\uff0c\u8bf7\u5728 Kepler \u6587\u6863\u9879\u76ee \u4e2d\u63d0\u4ea4 issue \u62a5\u544a\u95ee\u9898\u3002</p>"},{"location":"zh/project/support/#_2","title":"\u5bfb\u6c42\u652f\u6301\u7684\u6700\u4f73\u65b9\u5f0f\u662f","text":"<ol> <li> <p>\u5728 Kepler \u4e2d\u63d0\u4ea4 issue\u3002</p> </li> <li> <p>\u5f00\u542f \u8ba8\u8bba</p> </li> </ol>"}]}